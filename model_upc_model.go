/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UPCModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UPCModel{}

// UPCModel UPC Model
type UPCModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// CompanyId
	CompanyId *int32 `json:"companyId,omitempty"`
	// UPC
	Upc string `json:"upc"`
	// Legacy Tax Code
	LegacyTaxCode *string `json:"legacyTaxCode,omitempty"`
	// Description
	Description string `json:"description"`
	// Effective Date
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// End Date
	EndDate *time.Time `json:"endDate,omitempty"`
	// Usage
	Usage *int32 `json:"usage,omitempty"`
	// IsSystem
	IsSystem *int32 `json:"isSystem,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewUPCModel instantiates a new UPCModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUPCModel(upc string, description string) *UPCModel {
	this := UPCModel{}
	this.Upc = upc
	this.Description = description
	return &this
}

// NewUPCModelWithDefaults instantiates a new UPCModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUPCModelWithDefaults() *UPCModel {
	this := UPCModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UPCModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UPCModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UPCModel) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *UPCModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *UPCModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *UPCModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetUpc returns the Upc field value
func (o *UPCModel) GetUpc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Upc
}

// GetUpcOk returns a tuple with the Upc field value
// and a boolean to check if the value has been set.
func (o *UPCModel) GetUpcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Upc, true
}

// SetUpc sets field value
func (o *UPCModel) SetUpc(v string) {
	o.Upc = v
}

// GetLegacyTaxCode returns the LegacyTaxCode field value if set, zero value otherwise.
func (o *UPCModel) GetLegacyTaxCode() string {
	if o == nil || IsNil(o.LegacyTaxCode) {
		var ret string
		return ret
	}
	return *o.LegacyTaxCode
}

// GetLegacyTaxCodeOk returns a tuple with the LegacyTaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetLegacyTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LegacyTaxCode) {
		return nil, false
	}
	return o.LegacyTaxCode, true
}

// HasLegacyTaxCode returns a boolean if a field has been set.
func (o *UPCModel) HasLegacyTaxCode() bool {
	if o != nil && !IsNil(o.LegacyTaxCode) {
		return true
	}

	return false
}

// SetLegacyTaxCode gets a reference to the given string and assigns it to the LegacyTaxCode field.
func (o *UPCModel) SetLegacyTaxCode(v string) {
	o.LegacyTaxCode = &v
}

// GetDescription returns the Description field value
func (o *UPCModel) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UPCModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UPCModel) SetDescription(v string) {
	o.Description = v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *UPCModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *UPCModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *UPCModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UPCModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *UPCModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *UPCModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *UPCModel) GetUsage() int32 {
	if o == nil || IsNil(o.Usage) {
		var ret int32
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *UPCModel) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given int32 and assigns it to the Usage field.
func (o *UPCModel) SetUsage(v int32) {
	o.Usage = &v
}

// GetIsSystem returns the IsSystem field value if set, zero value otherwise.
func (o *UPCModel) GetIsSystem() int32 {
	if o == nil || IsNil(o.IsSystem) {
		var ret int32
		return ret
	}
	return *o.IsSystem
}

// GetIsSystemOk returns a tuple with the IsSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetIsSystemOk() (*int32, bool) {
	if o == nil || IsNil(o.IsSystem) {
		return nil, false
	}
	return o.IsSystem, true
}

// HasIsSystem returns a boolean if a field has been set.
func (o *UPCModel) HasIsSystem() bool {
	if o != nil && !IsNil(o.IsSystem) {
		return true
	}

	return false
}

// SetIsSystem gets a reference to the given int32 and assigns it to the IsSystem field.
func (o *UPCModel) SetIsSystem(v int32) {
	o.IsSystem = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *UPCModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *UPCModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *UPCModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *UPCModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *UPCModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *UPCModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *UPCModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *UPCModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *UPCModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *UPCModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UPCModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *UPCModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *UPCModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o UPCModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UPCModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	toSerialize["upc"] = o.Upc
	if !IsNil(o.LegacyTaxCode) {
		toSerialize["legacyTaxCode"] = o.LegacyTaxCode
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.IsSystem) {
		toSerialize["isSystem"] = o.IsSystem
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableUPCModel struct {
	value *UPCModel
	isSet bool
}

func (v NullableUPCModel) Get() *UPCModel {
	return v.value
}

func (v *NullableUPCModel) Set(val *UPCModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUPCModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUPCModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUPCModel(val *UPCModel) *NullableUPCModel {
	return &NullableUPCModel{value: val, isSet: true}
}

func (v NullableUPCModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUPCModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


