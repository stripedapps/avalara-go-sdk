/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CompanyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyModel{}

// CompanyModel Company Model
type CompanyModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Account Id
	AccountId int32 `json:"accountId"`
	// Parent Company Id
	ParentCompanyId *int32 `json:"parentCompanyId,omitempty"`
	// SST Pid
	SstPid *string `json:"sstPid,omitempty"`
	// Company Code
	CompanyCode string `json:"companyCode"`
	// Name
	Name string `json:"name"`
	// Is Default
	IsDefault *bool `json:"isDefault,omitempty"`
	// Default Location Id
	DefaultLocationId *int32 `json:"defaultLocationId,omitempty"`
	// Is Active
	IsActive *bool `json:"isActive,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
	// Tax Payer Id Number
	TaxpayerIdNumber string `json:"taxpayerIdNumber"`
	// Has Profile
	HasProfile *bool `json:"hasProfile,omitempty"`
	// Is Reporting Entity
	IsReportingEntity *bool `json:"isReportingEntity,omitempty"`
	// SST Effective Date
	SstEffectiveDate *time.Time `json:"sstEffectiveDate,omitempty"`
	// Entity No
	EntityNo *int32 `json:"entityNo,omitempty"`
	// Default Country
	DefaultCountry *string `json:"defaultCountry,omitempty"`
	// Base Currency Code
	BaseCurrencyCode *string `json:"baseCurrencyCode,omitempty"`
	// Rounding Level Id
	RoundingLevelId *string `json:"roundingLevelId,omitempty"`
	// Cash Basis Accounting Enabled
	CashBasisAccountingEnabled *bool `json:"cashBasisAccountingEnabled,omitempty"`
	// Warnings Enabled
	WarningsEnabled *bool `json:"warningsEnabled,omitempty"`
	// Is Test
	IsTest *bool `json:"isTest,omitempty"`
	// Tax dependency Level Id
	TaxDependencyLevelId *string `json:"taxDependencyLevelId,omitempty"`
	// In Progress
	InProgress *bool `json:"inProgress,omitempty"`
	// Business Identification No
	BusinessIdentificationNo *string `json:"businessIdentificationNo,omitempty"`
	// Contacts
	Contacts []ContactModel `json:"contacts,omitempty"`
	// Filing Calendars
	FilingCalendars []FilingCalendarModel `json:"filingCalendars,omitempty"`
	// Items
	Items []ItemModel `json:"items,omitempty"`
	// Locations
	Locations []LocationModel `json:"locations,omitempty"`
	// Nexus
	Nexus []NexusModel `json:"nexus,omitempty"`
	// Settings
	Settings []SettingModel `json:"settings,omitempty"`
	// Tax Codes
	TaxCodes []TaxCodeModel `json:"taxCodes,omitempty"`
	// Tax Rules
	TaxRules []TaxRuleModel `json:"taxRules,omitempty"`
	// UPCs
	Upcs []UPCModel `json:"upcs,omitempty"`
}

// NewCompanyModel instantiates a new CompanyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyModel(accountId int32, companyCode string, name string, taxpayerIdNumber string) *CompanyModel {
	this := CompanyModel{}
	this.AccountId = accountId
	this.CompanyCode = companyCode
	this.Name = name
	this.TaxpayerIdNumber = taxpayerIdNumber
	return &this
}

// NewCompanyModelWithDefaults instantiates a new CompanyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyModelWithDefaults() *CompanyModel {
	this := CompanyModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyModel) SetId(v int32) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value
func (o *CompanyModel) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CompanyModel) SetAccountId(v int32) {
	o.AccountId = v
}

// GetParentCompanyId returns the ParentCompanyId field value if set, zero value otherwise.
func (o *CompanyModel) GetParentCompanyId() int32 {
	if o == nil || IsNil(o.ParentCompanyId) {
		var ret int32
		return ret
	}
	return *o.ParentCompanyId
}

// GetParentCompanyIdOk returns a tuple with the ParentCompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetParentCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentCompanyId) {
		return nil, false
	}
	return o.ParentCompanyId, true
}

// HasParentCompanyId returns a boolean if a field has been set.
func (o *CompanyModel) HasParentCompanyId() bool {
	if o != nil && !IsNil(o.ParentCompanyId) {
		return true
	}

	return false
}

// SetParentCompanyId gets a reference to the given int32 and assigns it to the ParentCompanyId field.
func (o *CompanyModel) SetParentCompanyId(v int32) {
	o.ParentCompanyId = &v
}

// GetSstPid returns the SstPid field value if set, zero value otherwise.
func (o *CompanyModel) GetSstPid() string {
	if o == nil || IsNil(o.SstPid) {
		var ret string
		return ret
	}
	return *o.SstPid
}

// GetSstPidOk returns a tuple with the SstPid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetSstPidOk() (*string, bool) {
	if o == nil || IsNil(o.SstPid) {
		return nil, false
	}
	return o.SstPid, true
}

// HasSstPid returns a boolean if a field has been set.
func (o *CompanyModel) HasSstPid() bool {
	if o != nil && !IsNil(o.SstPid) {
		return true
	}

	return false
}

// SetSstPid gets a reference to the given string and assigns it to the SstPid field.
func (o *CompanyModel) SetSstPid(v string) {
	o.SstPid = &v
}

// GetCompanyCode returns the CompanyCode field value
func (o *CompanyModel) GetCompanyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyCode
}

// GetCompanyCodeOk returns a tuple with the CompanyCode field value
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetCompanyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyCode, true
}

// SetCompanyCode sets field value
func (o *CompanyModel) SetCompanyCode(v string) {
	o.CompanyCode = v
}

// GetName returns the Name field value
func (o *CompanyModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompanyModel) SetName(v string) {
	o.Name = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *CompanyModel) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *CompanyModel) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *CompanyModel) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetDefaultLocationId returns the DefaultLocationId field value if set, zero value otherwise.
func (o *CompanyModel) GetDefaultLocationId() int32 {
	if o == nil || IsNil(o.DefaultLocationId) {
		var ret int32
		return ret
	}
	return *o.DefaultLocationId
}

// GetDefaultLocationIdOk returns a tuple with the DefaultLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetDefaultLocationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultLocationId) {
		return nil, false
	}
	return o.DefaultLocationId, true
}

// HasDefaultLocationId returns a boolean if a field has been set.
func (o *CompanyModel) HasDefaultLocationId() bool {
	if o != nil && !IsNil(o.DefaultLocationId) {
		return true
	}

	return false
}

// SetDefaultLocationId gets a reference to the given int32 and assigns it to the DefaultLocationId field.
func (o *CompanyModel) SetDefaultLocationId(v int32) {
	o.DefaultLocationId = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *CompanyModel) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *CompanyModel) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *CompanyModel) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *CompanyModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *CompanyModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *CompanyModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *CompanyModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *CompanyModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *CompanyModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *CompanyModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *CompanyModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *CompanyModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *CompanyModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *CompanyModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *CompanyModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

// GetTaxpayerIdNumber returns the TaxpayerIdNumber field value
func (o *CompanyModel) GetTaxpayerIdNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaxpayerIdNumber
}

// GetTaxpayerIdNumberOk returns a tuple with the TaxpayerIdNumber field value
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetTaxpayerIdNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxpayerIdNumber, true
}

// SetTaxpayerIdNumber sets field value
func (o *CompanyModel) SetTaxpayerIdNumber(v string) {
	o.TaxpayerIdNumber = v
}

// GetHasProfile returns the HasProfile field value if set, zero value otherwise.
func (o *CompanyModel) GetHasProfile() bool {
	if o == nil || IsNil(o.HasProfile) {
		var ret bool
		return ret
	}
	return *o.HasProfile
}

// GetHasProfileOk returns a tuple with the HasProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetHasProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasProfile) {
		return nil, false
	}
	return o.HasProfile, true
}

// HasHasProfile returns a boolean if a field has been set.
func (o *CompanyModel) HasHasProfile() bool {
	if o != nil && !IsNil(o.HasProfile) {
		return true
	}

	return false
}

// SetHasProfile gets a reference to the given bool and assigns it to the HasProfile field.
func (o *CompanyModel) SetHasProfile(v bool) {
	o.HasProfile = &v
}

// GetIsReportingEntity returns the IsReportingEntity field value if set, zero value otherwise.
func (o *CompanyModel) GetIsReportingEntity() bool {
	if o == nil || IsNil(o.IsReportingEntity) {
		var ret bool
		return ret
	}
	return *o.IsReportingEntity
}

// GetIsReportingEntityOk returns a tuple with the IsReportingEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetIsReportingEntityOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReportingEntity) {
		return nil, false
	}
	return o.IsReportingEntity, true
}

// HasIsReportingEntity returns a boolean if a field has been set.
func (o *CompanyModel) HasIsReportingEntity() bool {
	if o != nil && !IsNil(o.IsReportingEntity) {
		return true
	}

	return false
}

// SetIsReportingEntity gets a reference to the given bool and assigns it to the IsReportingEntity field.
func (o *CompanyModel) SetIsReportingEntity(v bool) {
	o.IsReportingEntity = &v
}

// GetSstEffectiveDate returns the SstEffectiveDate field value if set, zero value otherwise.
func (o *CompanyModel) GetSstEffectiveDate() time.Time {
	if o == nil || IsNil(o.SstEffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.SstEffectiveDate
}

// GetSstEffectiveDateOk returns a tuple with the SstEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetSstEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SstEffectiveDate) {
		return nil, false
	}
	return o.SstEffectiveDate, true
}

// HasSstEffectiveDate returns a boolean if a field has been set.
func (o *CompanyModel) HasSstEffectiveDate() bool {
	if o != nil && !IsNil(o.SstEffectiveDate) {
		return true
	}

	return false
}

// SetSstEffectiveDate gets a reference to the given time.Time and assigns it to the SstEffectiveDate field.
func (o *CompanyModel) SetSstEffectiveDate(v time.Time) {
	o.SstEffectiveDate = &v
}

// GetEntityNo returns the EntityNo field value if set, zero value otherwise.
func (o *CompanyModel) GetEntityNo() int32 {
	if o == nil || IsNil(o.EntityNo) {
		var ret int32
		return ret
	}
	return *o.EntityNo
}

// GetEntityNoOk returns a tuple with the EntityNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetEntityNoOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityNo) {
		return nil, false
	}
	return o.EntityNo, true
}

// HasEntityNo returns a boolean if a field has been set.
func (o *CompanyModel) HasEntityNo() bool {
	if o != nil && !IsNil(o.EntityNo) {
		return true
	}

	return false
}

// SetEntityNo gets a reference to the given int32 and assigns it to the EntityNo field.
func (o *CompanyModel) SetEntityNo(v int32) {
	o.EntityNo = &v
}

// GetDefaultCountry returns the DefaultCountry field value if set, zero value otherwise.
func (o *CompanyModel) GetDefaultCountry() string {
	if o == nil || IsNil(o.DefaultCountry) {
		var ret string
		return ret
	}
	return *o.DefaultCountry
}

// GetDefaultCountryOk returns a tuple with the DefaultCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetDefaultCountryOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultCountry) {
		return nil, false
	}
	return o.DefaultCountry, true
}

// HasDefaultCountry returns a boolean if a field has been set.
func (o *CompanyModel) HasDefaultCountry() bool {
	if o != nil && !IsNil(o.DefaultCountry) {
		return true
	}

	return false
}

// SetDefaultCountry gets a reference to the given string and assigns it to the DefaultCountry field.
func (o *CompanyModel) SetDefaultCountry(v string) {
	o.DefaultCountry = &v
}

// GetBaseCurrencyCode returns the BaseCurrencyCode field value if set, zero value otherwise.
func (o *CompanyModel) GetBaseCurrencyCode() string {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseCurrencyCode
}

// GetBaseCurrencyCodeOk returns a tuple with the BaseCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetBaseCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		return nil, false
	}
	return o.BaseCurrencyCode, true
}

// HasBaseCurrencyCode returns a boolean if a field has been set.
func (o *CompanyModel) HasBaseCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseCurrencyCode) {
		return true
	}

	return false
}

// SetBaseCurrencyCode gets a reference to the given string and assigns it to the BaseCurrencyCode field.
func (o *CompanyModel) SetBaseCurrencyCode(v string) {
	o.BaseCurrencyCode = &v
}

// GetRoundingLevelId returns the RoundingLevelId field value if set, zero value otherwise.
func (o *CompanyModel) GetRoundingLevelId() string {
	if o == nil || IsNil(o.RoundingLevelId) {
		var ret string
		return ret
	}
	return *o.RoundingLevelId
}

// GetRoundingLevelIdOk returns a tuple with the RoundingLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetRoundingLevelIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoundingLevelId) {
		return nil, false
	}
	return o.RoundingLevelId, true
}

// HasRoundingLevelId returns a boolean if a field has been set.
func (o *CompanyModel) HasRoundingLevelId() bool {
	if o != nil && !IsNil(o.RoundingLevelId) {
		return true
	}

	return false
}

// SetRoundingLevelId gets a reference to the given string and assigns it to the RoundingLevelId field.
func (o *CompanyModel) SetRoundingLevelId(v string) {
	o.RoundingLevelId = &v
}

// GetCashBasisAccountingEnabled returns the CashBasisAccountingEnabled field value if set, zero value otherwise.
func (o *CompanyModel) GetCashBasisAccountingEnabled() bool {
	if o == nil || IsNil(o.CashBasisAccountingEnabled) {
		var ret bool
		return ret
	}
	return *o.CashBasisAccountingEnabled
}

// GetCashBasisAccountingEnabledOk returns a tuple with the CashBasisAccountingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetCashBasisAccountingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CashBasisAccountingEnabled) {
		return nil, false
	}
	return o.CashBasisAccountingEnabled, true
}

// HasCashBasisAccountingEnabled returns a boolean if a field has been set.
func (o *CompanyModel) HasCashBasisAccountingEnabled() bool {
	if o != nil && !IsNil(o.CashBasisAccountingEnabled) {
		return true
	}

	return false
}

// SetCashBasisAccountingEnabled gets a reference to the given bool and assigns it to the CashBasisAccountingEnabled field.
func (o *CompanyModel) SetCashBasisAccountingEnabled(v bool) {
	o.CashBasisAccountingEnabled = &v
}

// GetWarningsEnabled returns the WarningsEnabled field value if set, zero value otherwise.
func (o *CompanyModel) GetWarningsEnabled() bool {
	if o == nil || IsNil(o.WarningsEnabled) {
		var ret bool
		return ret
	}
	return *o.WarningsEnabled
}

// GetWarningsEnabledOk returns a tuple with the WarningsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetWarningsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.WarningsEnabled) {
		return nil, false
	}
	return o.WarningsEnabled, true
}

// HasWarningsEnabled returns a boolean if a field has been set.
func (o *CompanyModel) HasWarningsEnabled() bool {
	if o != nil && !IsNil(o.WarningsEnabled) {
		return true
	}

	return false
}

// SetWarningsEnabled gets a reference to the given bool and assigns it to the WarningsEnabled field.
func (o *CompanyModel) SetWarningsEnabled(v bool) {
	o.WarningsEnabled = &v
}

// GetIsTest returns the IsTest field value if set, zero value otherwise.
func (o *CompanyModel) GetIsTest() bool {
	if o == nil || IsNil(o.IsTest) {
		var ret bool
		return ret
	}
	return *o.IsTest
}

// GetIsTestOk returns a tuple with the IsTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetIsTestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTest) {
		return nil, false
	}
	return o.IsTest, true
}

// HasIsTest returns a boolean if a field has been set.
func (o *CompanyModel) HasIsTest() bool {
	if o != nil && !IsNil(o.IsTest) {
		return true
	}

	return false
}

// SetIsTest gets a reference to the given bool and assigns it to the IsTest field.
func (o *CompanyModel) SetIsTest(v bool) {
	o.IsTest = &v
}

// GetTaxDependencyLevelId returns the TaxDependencyLevelId field value if set, zero value otherwise.
func (o *CompanyModel) GetTaxDependencyLevelId() string {
	if o == nil || IsNil(o.TaxDependencyLevelId) {
		var ret string
		return ret
	}
	return *o.TaxDependencyLevelId
}

// GetTaxDependencyLevelIdOk returns a tuple with the TaxDependencyLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetTaxDependencyLevelIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxDependencyLevelId) {
		return nil, false
	}
	return o.TaxDependencyLevelId, true
}

// HasTaxDependencyLevelId returns a boolean if a field has been set.
func (o *CompanyModel) HasTaxDependencyLevelId() bool {
	if o != nil && !IsNil(o.TaxDependencyLevelId) {
		return true
	}

	return false
}

// SetTaxDependencyLevelId gets a reference to the given string and assigns it to the TaxDependencyLevelId field.
func (o *CompanyModel) SetTaxDependencyLevelId(v string) {
	o.TaxDependencyLevelId = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *CompanyModel) GetInProgress() bool {
	if o == nil || IsNil(o.InProgress) {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *CompanyModel) HasInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *CompanyModel) SetInProgress(v bool) {
	o.InProgress = &v
}

// GetBusinessIdentificationNo returns the BusinessIdentificationNo field value if set, zero value otherwise.
func (o *CompanyModel) GetBusinessIdentificationNo() string {
	if o == nil || IsNil(o.BusinessIdentificationNo) {
		var ret string
		return ret
	}
	return *o.BusinessIdentificationNo
}

// GetBusinessIdentificationNoOk returns a tuple with the BusinessIdentificationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetBusinessIdentificationNoOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessIdentificationNo) {
		return nil, false
	}
	return o.BusinessIdentificationNo, true
}

// HasBusinessIdentificationNo returns a boolean if a field has been set.
func (o *CompanyModel) HasBusinessIdentificationNo() bool {
	if o != nil && !IsNil(o.BusinessIdentificationNo) {
		return true
	}

	return false
}

// SetBusinessIdentificationNo gets a reference to the given string and assigns it to the BusinessIdentificationNo field.
func (o *CompanyModel) SetBusinessIdentificationNo(v string) {
	o.BusinessIdentificationNo = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *CompanyModel) GetContacts() []ContactModel {
	if o == nil || IsNil(o.Contacts) {
		var ret []ContactModel
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetContactsOk() ([]ContactModel, bool) {
	if o == nil || IsNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *CompanyModel) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []ContactModel and assigns it to the Contacts field.
func (o *CompanyModel) SetContacts(v []ContactModel) {
	o.Contacts = v
}

// GetFilingCalendars returns the FilingCalendars field value if set, zero value otherwise.
func (o *CompanyModel) GetFilingCalendars() []FilingCalendarModel {
	if o == nil || IsNil(o.FilingCalendars) {
		var ret []FilingCalendarModel
		return ret
	}
	return o.FilingCalendars
}

// GetFilingCalendarsOk returns a tuple with the FilingCalendars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetFilingCalendarsOk() ([]FilingCalendarModel, bool) {
	if o == nil || IsNil(o.FilingCalendars) {
		return nil, false
	}
	return o.FilingCalendars, true
}

// HasFilingCalendars returns a boolean if a field has been set.
func (o *CompanyModel) HasFilingCalendars() bool {
	if o != nil && !IsNil(o.FilingCalendars) {
		return true
	}

	return false
}

// SetFilingCalendars gets a reference to the given []FilingCalendarModel and assigns it to the FilingCalendars field.
func (o *CompanyModel) SetFilingCalendars(v []FilingCalendarModel) {
	o.FilingCalendars = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CompanyModel) GetItems() []ItemModel {
	if o == nil || IsNil(o.Items) {
		var ret []ItemModel
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetItemsOk() ([]ItemModel, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *CompanyModel) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ItemModel and assigns it to the Items field.
func (o *CompanyModel) SetItems(v []ItemModel) {
	o.Items = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *CompanyModel) GetLocations() []LocationModel {
	if o == nil || IsNil(o.Locations) {
		var ret []LocationModel
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetLocationsOk() ([]LocationModel, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *CompanyModel) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []LocationModel and assigns it to the Locations field.
func (o *CompanyModel) SetLocations(v []LocationModel) {
	o.Locations = v
}

// GetNexus returns the Nexus field value if set, zero value otherwise.
func (o *CompanyModel) GetNexus() []NexusModel {
	if o == nil || IsNil(o.Nexus) {
		var ret []NexusModel
		return ret
	}
	return o.Nexus
}

// GetNexusOk returns a tuple with the Nexus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetNexusOk() ([]NexusModel, bool) {
	if o == nil || IsNil(o.Nexus) {
		return nil, false
	}
	return o.Nexus, true
}

// HasNexus returns a boolean if a field has been set.
func (o *CompanyModel) HasNexus() bool {
	if o != nil && !IsNil(o.Nexus) {
		return true
	}

	return false
}

// SetNexus gets a reference to the given []NexusModel and assigns it to the Nexus field.
func (o *CompanyModel) SetNexus(v []NexusModel) {
	o.Nexus = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CompanyModel) GetSettings() []SettingModel {
	if o == nil || IsNil(o.Settings) {
		var ret []SettingModel
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetSettingsOk() ([]SettingModel, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CompanyModel) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []SettingModel and assigns it to the Settings field.
func (o *CompanyModel) SetSettings(v []SettingModel) {
	o.Settings = v
}

// GetTaxCodes returns the TaxCodes field value if set, zero value otherwise.
func (o *CompanyModel) GetTaxCodes() []TaxCodeModel {
	if o == nil || IsNil(o.TaxCodes) {
		var ret []TaxCodeModel
		return ret
	}
	return o.TaxCodes
}

// GetTaxCodesOk returns a tuple with the TaxCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetTaxCodesOk() ([]TaxCodeModel, bool) {
	if o == nil || IsNil(o.TaxCodes) {
		return nil, false
	}
	return o.TaxCodes, true
}

// HasTaxCodes returns a boolean if a field has been set.
func (o *CompanyModel) HasTaxCodes() bool {
	if o != nil && !IsNil(o.TaxCodes) {
		return true
	}

	return false
}

// SetTaxCodes gets a reference to the given []TaxCodeModel and assigns it to the TaxCodes field.
func (o *CompanyModel) SetTaxCodes(v []TaxCodeModel) {
	o.TaxCodes = v
}

// GetTaxRules returns the TaxRules field value if set, zero value otherwise.
func (o *CompanyModel) GetTaxRules() []TaxRuleModel {
	if o == nil || IsNil(o.TaxRules) {
		var ret []TaxRuleModel
		return ret
	}
	return o.TaxRules
}

// GetTaxRulesOk returns a tuple with the TaxRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetTaxRulesOk() ([]TaxRuleModel, bool) {
	if o == nil || IsNil(o.TaxRules) {
		return nil, false
	}
	return o.TaxRules, true
}

// HasTaxRules returns a boolean if a field has been set.
func (o *CompanyModel) HasTaxRules() bool {
	if o != nil && !IsNil(o.TaxRules) {
		return true
	}

	return false
}

// SetTaxRules gets a reference to the given []TaxRuleModel and assigns it to the TaxRules field.
func (o *CompanyModel) SetTaxRules(v []TaxRuleModel) {
	o.TaxRules = v
}

// GetUpcs returns the Upcs field value if set, zero value otherwise.
func (o *CompanyModel) GetUpcs() []UPCModel {
	if o == nil || IsNil(o.Upcs) {
		var ret []UPCModel
		return ret
	}
	return o.Upcs
}

// GetUpcsOk returns a tuple with the Upcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyModel) GetUpcsOk() ([]UPCModel, bool) {
	if o == nil || IsNil(o.Upcs) {
		return nil, false
	}
	return o.Upcs, true
}

// HasUpcs returns a boolean if a field has been set.
func (o *CompanyModel) HasUpcs() bool {
	if o != nil && !IsNil(o.Upcs) {
		return true
	}

	return false
}

// SetUpcs gets a reference to the given []UPCModel and assigns it to the Upcs field.
func (o *CompanyModel) SetUpcs(v []UPCModel) {
	o.Upcs = v
}

func (o CompanyModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["accountId"] = o.AccountId
	if !IsNil(o.ParentCompanyId) {
		toSerialize["parentCompanyId"] = o.ParentCompanyId
	}
	if !IsNil(o.SstPid) {
		toSerialize["sstPid"] = o.SstPid
	}
	toSerialize["companyCode"] = o.CompanyCode
	toSerialize["name"] = o.Name
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.DefaultLocationId) {
		toSerialize["defaultLocationId"] = o.DefaultLocationId
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	toSerialize["taxpayerIdNumber"] = o.TaxpayerIdNumber
	if !IsNil(o.HasProfile) {
		toSerialize["hasProfile"] = o.HasProfile
	}
	if !IsNil(o.IsReportingEntity) {
		toSerialize["isReportingEntity"] = o.IsReportingEntity
	}
	if !IsNil(o.SstEffectiveDate) {
		toSerialize["sstEffectiveDate"] = o.SstEffectiveDate
	}
	if !IsNil(o.EntityNo) {
		toSerialize["entityNo"] = o.EntityNo
	}
	if !IsNil(o.DefaultCountry) {
		toSerialize["defaultCountry"] = o.DefaultCountry
	}
	if !IsNil(o.BaseCurrencyCode) {
		toSerialize["baseCurrencyCode"] = o.BaseCurrencyCode
	}
	if !IsNil(o.RoundingLevelId) {
		toSerialize["roundingLevelId"] = o.RoundingLevelId
	}
	if !IsNil(o.CashBasisAccountingEnabled) {
		toSerialize["cashBasisAccountingEnabled"] = o.CashBasisAccountingEnabled
	}
	if !IsNil(o.WarningsEnabled) {
		toSerialize["warningsEnabled"] = o.WarningsEnabled
	}
	if !IsNil(o.IsTest) {
		toSerialize["isTest"] = o.IsTest
	}
	if !IsNil(o.TaxDependencyLevelId) {
		toSerialize["taxDependencyLevelId"] = o.TaxDependencyLevelId
	}
	if !IsNil(o.InProgress) {
		toSerialize["inProgress"] = o.InProgress
	}
	if !IsNil(o.BusinessIdentificationNo) {
		toSerialize["businessIdentificationNo"] = o.BusinessIdentificationNo
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !IsNil(o.FilingCalendars) {
		toSerialize["filingCalendars"] = o.FilingCalendars
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.Nexus) {
		toSerialize["nexus"] = o.Nexus
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.TaxCodes) {
		toSerialize["taxCodes"] = o.TaxCodes
	}
	if !IsNil(o.TaxRules) {
		toSerialize["taxRules"] = o.TaxRules
	}
	if !IsNil(o.Upcs) {
		toSerialize["upcs"] = o.Upcs
	}
	return toSerialize, nil
}

type NullableCompanyModel struct {
	value *CompanyModel
	isSet bool
}

func (v NullableCompanyModel) Get() *CompanyModel {
	return v.value
}

func (v *NullableCompanyModel) Set(val *CompanyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyModel(val *CompanyModel) *NullableCompanyModel {
	return &NullableCompanyModel{value: val, isSet: true}
}

func (v NullableCompanyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


