/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PostTransactionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTransactionModel{}

// PostTransactionModel Change the status of tax
type PostTransactionModel struct {
	// Transaction Date - The date on the invoice, purchase order, etc.
	VerifyTransactionDate *time.Time `json:"verifyTransactionDate,omitempty"`
	// Total Amount - The total amount (not including tax) for the document.
	VerifyTotalAmount *float64 `json:"verifyTotalAmount,omitempty"`
	// Total Tax - The total tax for the document.
	VerifyTotalTax *float64 `json:"verifyTotalTax,omitempty"`
	// The hash code for the document.
	VerifyHashCode *int32 `json:"verifyHashCode,omitempty"`
	// Allows committing immediately rather than requiring a subsequent call to CommitTax.
	CommitTransaction *bool `json:"commitTransaction,omitempty"`
	// If you wish to change the transaction code when committing the transaction, specify the new transaction code here.
	NewTransactionCode *string `json:"newTransactionCode,omitempty"`
}

// NewPostTransactionModel instantiates a new PostTransactionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTransactionModel() *PostTransactionModel {
	this := PostTransactionModel{}
	return &this
}

// NewPostTransactionModelWithDefaults instantiates a new PostTransactionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTransactionModelWithDefaults() *PostTransactionModel {
	this := PostTransactionModel{}
	return &this
}

// GetVerifyTransactionDate returns the VerifyTransactionDate field value if set, zero value otherwise.
func (o *PostTransactionModel) GetVerifyTransactionDate() time.Time {
	if o == nil || IsNil(o.VerifyTransactionDate) {
		var ret time.Time
		return ret
	}
	return *o.VerifyTransactionDate
}

// GetVerifyTransactionDateOk returns a tuple with the VerifyTransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetVerifyTransactionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VerifyTransactionDate) {
		return nil, false
	}
	return o.VerifyTransactionDate, true
}

// HasVerifyTransactionDate returns a boolean if a field has been set.
func (o *PostTransactionModel) HasVerifyTransactionDate() bool {
	if o != nil && !IsNil(o.VerifyTransactionDate) {
		return true
	}

	return false
}

// SetVerifyTransactionDate gets a reference to the given time.Time and assigns it to the VerifyTransactionDate field.
func (o *PostTransactionModel) SetVerifyTransactionDate(v time.Time) {
	o.VerifyTransactionDate = &v
}

// GetVerifyTotalAmount returns the VerifyTotalAmount field value if set, zero value otherwise.
func (o *PostTransactionModel) GetVerifyTotalAmount() float64 {
	if o == nil || IsNil(o.VerifyTotalAmount) {
		var ret float64
		return ret
	}
	return *o.VerifyTotalAmount
}

// GetVerifyTotalAmountOk returns a tuple with the VerifyTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetVerifyTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.VerifyTotalAmount) {
		return nil, false
	}
	return o.VerifyTotalAmount, true
}

// HasVerifyTotalAmount returns a boolean if a field has been set.
func (o *PostTransactionModel) HasVerifyTotalAmount() bool {
	if o != nil && !IsNil(o.VerifyTotalAmount) {
		return true
	}

	return false
}

// SetVerifyTotalAmount gets a reference to the given float64 and assigns it to the VerifyTotalAmount field.
func (o *PostTransactionModel) SetVerifyTotalAmount(v float64) {
	o.VerifyTotalAmount = &v
}

// GetVerifyTotalTax returns the VerifyTotalTax field value if set, zero value otherwise.
func (o *PostTransactionModel) GetVerifyTotalTax() float64 {
	if o == nil || IsNil(o.VerifyTotalTax) {
		var ret float64
		return ret
	}
	return *o.VerifyTotalTax
}

// GetVerifyTotalTaxOk returns a tuple with the VerifyTotalTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetVerifyTotalTaxOk() (*float64, bool) {
	if o == nil || IsNil(o.VerifyTotalTax) {
		return nil, false
	}
	return o.VerifyTotalTax, true
}

// HasVerifyTotalTax returns a boolean if a field has been set.
func (o *PostTransactionModel) HasVerifyTotalTax() bool {
	if o != nil && !IsNil(o.VerifyTotalTax) {
		return true
	}

	return false
}

// SetVerifyTotalTax gets a reference to the given float64 and assigns it to the VerifyTotalTax field.
func (o *PostTransactionModel) SetVerifyTotalTax(v float64) {
	o.VerifyTotalTax = &v
}

// GetVerifyHashCode returns the VerifyHashCode field value if set, zero value otherwise.
func (o *PostTransactionModel) GetVerifyHashCode() int32 {
	if o == nil || IsNil(o.VerifyHashCode) {
		var ret int32
		return ret
	}
	return *o.VerifyHashCode
}

// GetVerifyHashCodeOk returns a tuple with the VerifyHashCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetVerifyHashCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.VerifyHashCode) {
		return nil, false
	}
	return o.VerifyHashCode, true
}

// HasVerifyHashCode returns a boolean if a field has been set.
func (o *PostTransactionModel) HasVerifyHashCode() bool {
	if o != nil && !IsNil(o.VerifyHashCode) {
		return true
	}

	return false
}

// SetVerifyHashCode gets a reference to the given int32 and assigns it to the VerifyHashCode field.
func (o *PostTransactionModel) SetVerifyHashCode(v int32) {
	o.VerifyHashCode = &v
}

// GetCommitTransaction returns the CommitTransaction field value if set, zero value otherwise.
func (o *PostTransactionModel) GetCommitTransaction() bool {
	if o == nil || IsNil(o.CommitTransaction) {
		var ret bool
		return ret
	}
	return *o.CommitTransaction
}

// GetCommitTransactionOk returns a tuple with the CommitTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetCommitTransactionOk() (*bool, bool) {
	if o == nil || IsNil(o.CommitTransaction) {
		return nil, false
	}
	return o.CommitTransaction, true
}

// HasCommitTransaction returns a boolean if a field has been set.
func (o *PostTransactionModel) HasCommitTransaction() bool {
	if o != nil && !IsNil(o.CommitTransaction) {
		return true
	}

	return false
}

// SetCommitTransaction gets a reference to the given bool and assigns it to the CommitTransaction field.
func (o *PostTransactionModel) SetCommitTransaction(v bool) {
	o.CommitTransaction = &v
}

// GetNewTransactionCode returns the NewTransactionCode field value if set, zero value otherwise.
func (o *PostTransactionModel) GetNewTransactionCode() string {
	if o == nil || IsNil(o.NewTransactionCode) {
		var ret string
		return ret
	}
	return *o.NewTransactionCode
}

// GetNewTransactionCodeOk returns a tuple with the NewTransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransactionModel) GetNewTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.NewTransactionCode) {
		return nil, false
	}
	return o.NewTransactionCode, true
}

// HasNewTransactionCode returns a boolean if a field has been set.
func (o *PostTransactionModel) HasNewTransactionCode() bool {
	if o != nil && !IsNil(o.NewTransactionCode) {
		return true
	}

	return false
}

// SetNewTransactionCode gets a reference to the given string and assigns it to the NewTransactionCode field.
func (o *PostTransactionModel) SetNewTransactionCode(v string) {
	o.NewTransactionCode = &v
}

func (o PostTransactionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTransactionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VerifyTransactionDate) {
		toSerialize["verifyTransactionDate"] = o.VerifyTransactionDate
	}
	if !IsNil(o.VerifyTotalAmount) {
		toSerialize["verifyTotalAmount"] = o.VerifyTotalAmount
	}
	if !IsNil(o.VerifyTotalTax) {
		toSerialize["verifyTotalTax"] = o.VerifyTotalTax
	}
	if !IsNil(o.VerifyHashCode) {
		toSerialize["verifyHashCode"] = o.VerifyHashCode
	}
	if !IsNil(o.CommitTransaction) {
		toSerialize["commitTransaction"] = o.CommitTransaction
	}
	if !IsNil(o.NewTransactionCode) {
		toSerialize["newTransactionCode"] = o.NewTransactionCode
	}
	return toSerialize, nil
}

type NullablePostTransactionModel struct {
	value *PostTransactionModel
	isSet bool
}

func (v NullablePostTransactionModel) Get() *PostTransactionModel {
	return v.value
}

func (v *NullablePostTransactionModel) Set(val *PostTransactionModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTransactionModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTransactionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTransactionModel(val *PostTransactionModel) *NullablePostTransactionModel {
	return &NullablePostTransactionModel{value: val, isSet: true}
}

func (v NullablePostTransactionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTransactionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


