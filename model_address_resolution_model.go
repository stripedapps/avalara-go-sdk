/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressResolutionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressResolutionModel{}

// AddressResolutionModel Address Resolution Model
type AddressResolutionModel struct {
	Address *AddressInfo `json:"address,omitempty"`
	Coordinates *CoordinateInfo `json:"coordinates,omitempty"`
	// The resolution quality of the geospatial coordinates
	ResolutionQuality *string `json:"resolutionQuality,omitempty"`
	// List of tax authorities that apply to this geospatial coordinate
	TaxAuthorities []TaxAuthorityInfo `json:"taxAuthorities,omitempty"`
}

// NewAddressResolutionModel instantiates a new AddressResolutionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressResolutionModel() *AddressResolutionModel {
	this := AddressResolutionModel{}
	return &this
}

// NewAddressResolutionModelWithDefaults instantiates a new AddressResolutionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressResolutionModelWithDefaults() *AddressResolutionModel {
	this := AddressResolutionModel{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AddressResolutionModel) GetAddress() AddressInfo {
	if o == nil || IsNil(o.Address) {
		var ret AddressInfo
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressResolutionModel) GetAddressOk() (*AddressInfo, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AddressResolutionModel) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressInfo and assigns it to the Address field.
func (o *AddressResolutionModel) SetAddress(v AddressInfo) {
	o.Address = &v
}

// GetCoordinates returns the Coordinates field value if set, zero value otherwise.
func (o *AddressResolutionModel) GetCoordinates() CoordinateInfo {
	if o == nil || IsNil(o.Coordinates) {
		var ret CoordinateInfo
		return ret
	}
	return *o.Coordinates
}

// GetCoordinatesOk returns a tuple with the Coordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressResolutionModel) GetCoordinatesOk() (*CoordinateInfo, bool) {
	if o == nil || IsNil(o.Coordinates) {
		return nil, false
	}
	return o.Coordinates, true
}

// HasCoordinates returns a boolean if a field has been set.
func (o *AddressResolutionModel) HasCoordinates() bool {
	if o != nil && !IsNil(o.Coordinates) {
		return true
	}

	return false
}

// SetCoordinates gets a reference to the given CoordinateInfo and assigns it to the Coordinates field.
func (o *AddressResolutionModel) SetCoordinates(v CoordinateInfo) {
	o.Coordinates = &v
}

// GetResolutionQuality returns the ResolutionQuality field value if set, zero value otherwise.
func (o *AddressResolutionModel) GetResolutionQuality() string {
	if o == nil || IsNil(o.ResolutionQuality) {
		var ret string
		return ret
	}
	return *o.ResolutionQuality
}

// GetResolutionQualityOk returns a tuple with the ResolutionQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressResolutionModel) GetResolutionQualityOk() (*string, bool) {
	if o == nil || IsNil(o.ResolutionQuality) {
		return nil, false
	}
	return o.ResolutionQuality, true
}

// HasResolutionQuality returns a boolean if a field has been set.
func (o *AddressResolutionModel) HasResolutionQuality() bool {
	if o != nil && !IsNil(o.ResolutionQuality) {
		return true
	}

	return false
}

// SetResolutionQuality gets a reference to the given string and assigns it to the ResolutionQuality field.
func (o *AddressResolutionModel) SetResolutionQuality(v string) {
	o.ResolutionQuality = &v
}

// GetTaxAuthorities returns the TaxAuthorities field value if set, zero value otherwise.
func (o *AddressResolutionModel) GetTaxAuthorities() []TaxAuthorityInfo {
	if o == nil || IsNil(o.TaxAuthorities) {
		var ret []TaxAuthorityInfo
		return ret
	}
	return o.TaxAuthorities
}

// GetTaxAuthoritiesOk returns a tuple with the TaxAuthorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressResolutionModel) GetTaxAuthoritiesOk() ([]TaxAuthorityInfo, bool) {
	if o == nil || IsNil(o.TaxAuthorities) {
		return nil, false
	}
	return o.TaxAuthorities, true
}

// HasTaxAuthorities returns a boolean if a field has been set.
func (o *AddressResolutionModel) HasTaxAuthorities() bool {
	if o != nil && !IsNil(o.TaxAuthorities) {
		return true
	}

	return false
}

// SetTaxAuthorities gets a reference to the given []TaxAuthorityInfo and assigns it to the TaxAuthorities field.
func (o *AddressResolutionModel) SetTaxAuthorities(v []TaxAuthorityInfo) {
	o.TaxAuthorities = v
}

func (o AddressResolutionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressResolutionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Coordinates) {
		toSerialize["coordinates"] = o.Coordinates
	}
	if !IsNil(o.ResolutionQuality) {
		toSerialize["resolutionQuality"] = o.ResolutionQuality
	}
	if !IsNil(o.TaxAuthorities) {
		toSerialize["taxAuthorities"] = o.TaxAuthorities
	}
	return toSerialize, nil
}

type NullableAddressResolutionModel struct {
	value *AddressResolutionModel
	isSet bool
}

func (v NullableAddressResolutionModel) Get() *AddressResolutionModel {
	return v.value
}

func (v *NullableAddressResolutionModel) Set(val *AddressResolutionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressResolutionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressResolutionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressResolutionModel(val *AddressResolutionModel) *NullableAddressResolutionModel {
	return &NullableAddressResolutionModel{value: val, isSet: true}
}

func (v NullableAddressResolutionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressResolutionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


