/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LineItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItemModel{}

// LineItemModel Represents one line item in a transaction
type LineItemModel struct {
	// Line number within this document
	Number *string `json:"number,omitempty"`
	// Quantity of items in this line
	Quantity float64 `json:"quantity"`
	// Total amount for this line
	Amount float64 `json:"amount"`
	Addresses *LineItemModelAddresses `json:"addresses,omitempty"`
	// Tax Code - System or Custom Tax Code.
	TaxCode *string `json:"taxCode,omitempty"`
	// Customer Usage Type - The client application customer or usage type.
	CustomerUsageType *string `json:"customerUsageType,omitempty"`
	// Item Code (SKU)
	ItemCode *string `json:"itemCode,omitempty"`
	// Exemption number for this line
	ExemptionCode *string `json:"exemptionCode,omitempty"`
	// True if the document discount should be applied to this line
	Discounted *bool `json:"discounted,omitempty"`
	// Indicates if line has Tax Included; defaults to false
	TaxIncluded *bool `json:"taxIncluded,omitempty"`
	// Revenue Account
	RevenueAccount *string `json:"revenueAccount,omitempty"`
	// Reference 1 - Client specific reference field
	Ref1 *string `json:"ref1,omitempty"`
	// Reference 2 - Client specific reference field
	Ref2 *string `json:"ref2,omitempty"`
	// Item description.  This is required for SST transactions if an unmapped ItemCode is used.
	Description *string `json:"description,omitempty"`
	// BusinessIdentificationNo
	BusinessIdentificationNo *string `json:"businessIdentificationNo,omitempty"`
	TaxOverride *TaxOverrideModel `json:"taxOverride,omitempty"`
}

// NewLineItemModel instantiates a new LineItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemModel(quantity float64, amount float64) *LineItemModel {
	this := LineItemModel{}
	this.Quantity = quantity
	this.Amount = amount
	return &this
}

// NewLineItemModelWithDefaults instantiates a new LineItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemModelWithDefaults() *LineItemModel {
	this := LineItemModel{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *LineItemModel) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *LineItemModel) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *LineItemModel) SetNumber(v string) {
	o.Number = &v
}

// GetQuantity returns the Quantity field value
func (o *LineItemModel) GetQuantity() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetQuantityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *LineItemModel) SetQuantity(v float64) {
	o.Quantity = v
}

// GetAmount returns the Amount field value
func (o *LineItemModel) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *LineItemModel) SetAmount(v float64) {
	o.Amount = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *LineItemModel) GetAddresses() LineItemModelAddresses {
	if o == nil || IsNil(o.Addresses) {
		var ret LineItemModelAddresses
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetAddressesOk() (*LineItemModelAddresses, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *LineItemModel) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given LineItemModelAddresses and assigns it to the Addresses field.
func (o *LineItemModel) SetAddresses(v LineItemModelAddresses) {
	o.Addresses = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *LineItemModel) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *LineItemModel) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *LineItemModel) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetCustomerUsageType returns the CustomerUsageType field value if set, zero value otherwise.
func (o *LineItemModel) GetCustomerUsageType() string {
	if o == nil || IsNil(o.CustomerUsageType) {
		var ret string
		return ret
	}
	return *o.CustomerUsageType
}

// GetCustomerUsageTypeOk returns a tuple with the CustomerUsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetCustomerUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerUsageType) {
		return nil, false
	}
	return o.CustomerUsageType, true
}

// HasCustomerUsageType returns a boolean if a field has been set.
func (o *LineItemModel) HasCustomerUsageType() bool {
	if o != nil && !IsNil(o.CustomerUsageType) {
		return true
	}

	return false
}

// SetCustomerUsageType gets a reference to the given string and assigns it to the CustomerUsageType field.
func (o *LineItemModel) SetCustomerUsageType(v string) {
	o.CustomerUsageType = &v
}

// GetItemCode returns the ItemCode field value if set, zero value otherwise.
func (o *LineItemModel) GetItemCode() string {
	if o == nil || IsNil(o.ItemCode) {
		var ret string
		return ret
	}
	return *o.ItemCode
}

// GetItemCodeOk returns a tuple with the ItemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetItemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemCode) {
		return nil, false
	}
	return o.ItemCode, true
}

// HasItemCode returns a boolean if a field has been set.
func (o *LineItemModel) HasItemCode() bool {
	if o != nil && !IsNil(o.ItemCode) {
		return true
	}

	return false
}

// SetItemCode gets a reference to the given string and assigns it to the ItemCode field.
func (o *LineItemModel) SetItemCode(v string) {
	o.ItemCode = &v
}

// GetExemptionCode returns the ExemptionCode field value if set, zero value otherwise.
func (o *LineItemModel) GetExemptionCode() string {
	if o == nil || IsNil(o.ExemptionCode) {
		var ret string
		return ret
	}
	return *o.ExemptionCode
}

// GetExemptionCodeOk returns a tuple with the ExemptionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetExemptionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExemptionCode) {
		return nil, false
	}
	return o.ExemptionCode, true
}

// HasExemptionCode returns a boolean if a field has been set.
func (o *LineItemModel) HasExemptionCode() bool {
	if o != nil && !IsNil(o.ExemptionCode) {
		return true
	}

	return false
}

// SetExemptionCode gets a reference to the given string and assigns it to the ExemptionCode field.
func (o *LineItemModel) SetExemptionCode(v string) {
	o.ExemptionCode = &v
}

// GetDiscounted returns the Discounted field value if set, zero value otherwise.
func (o *LineItemModel) GetDiscounted() bool {
	if o == nil || IsNil(o.Discounted) {
		var ret bool
		return ret
	}
	return *o.Discounted
}

// GetDiscountedOk returns a tuple with the Discounted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetDiscountedOk() (*bool, bool) {
	if o == nil || IsNil(o.Discounted) {
		return nil, false
	}
	return o.Discounted, true
}

// HasDiscounted returns a boolean if a field has been set.
func (o *LineItemModel) HasDiscounted() bool {
	if o != nil && !IsNil(o.Discounted) {
		return true
	}

	return false
}

// SetDiscounted gets a reference to the given bool and assigns it to the Discounted field.
func (o *LineItemModel) SetDiscounted(v bool) {
	o.Discounted = &v
}

// GetTaxIncluded returns the TaxIncluded field value if set, zero value otherwise.
func (o *LineItemModel) GetTaxIncluded() bool {
	if o == nil || IsNil(o.TaxIncluded) {
		var ret bool
		return ret
	}
	return *o.TaxIncluded
}

// GetTaxIncludedOk returns a tuple with the TaxIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetTaxIncludedOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxIncluded) {
		return nil, false
	}
	return o.TaxIncluded, true
}

// HasTaxIncluded returns a boolean if a field has been set.
func (o *LineItemModel) HasTaxIncluded() bool {
	if o != nil && !IsNil(o.TaxIncluded) {
		return true
	}

	return false
}

// SetTaxIncluded gets a reference to the given bool and assigns it to the TaxIncluded field.
func (o *LineItemModel) SetTaxIncluded(v bool) {
	o.TaxIncluded = &v
}

// GetRevenueAccount returns the RevenueAccount field value if set, zero value otherwise.
func (o *LineItemModel) GetRevenueAccount() string {
	if o == nil || IsNil(o.RevenueAccount) {
		var ret string
		return ret
	}
	return *o.RevenueAccount
}

// GetRevenueAccountOk returns a tuple with the RevenueAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetRevenueAccountOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueAccount) {
		return nil, false
	}
	return o.RevenueAccount, true
}

// HasRevenueAccount returns a boolean if a field has been set.
func (o *LineItemModel) HasRevenueAccount() bool {
	if o != nil && !IsNil(o.RevenueAccount) {
		return true
	}

	return false
}

// SetRevenueAccount gets a reference to the given string and assigns it to the RevenueAccount field.
func (o *LineItemModel) SetRevenueAccount(v string) {
	o.RevenueAccount = &v
}

// GetRef1 returns the Ref1 field value if set, zero value otherwise.
func (o *LineItemModel) GetRef1() string {
	if o == nil || IsNil(o.Ref1) {
		var ret string
		return ret
	}
	return *o.Ref1
}

// GetRef1Ok returns a tuple with the Ref1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetRef1Ok() (*string, bool) {
	if o == nil || IsNil(o.Ref1) {
		return nil, false
	}
	return o.Ref1, true
}

// HasRef1 returns a boolean if a field has been set.
func (o *LineItemModel) HasRef1() bool {
	if o != nil && !IsNil(o.Ref1) {
		return true
	}

	return false
}

// SetRef1 gets a reference to the given string and assigns it to the Ref1 field.
func (o *LineItemModel) SetRef1(v string) {
	o.Ref1 = &v
}

// GetRef2 returns the Ref2 field value if set, zero value otherwise.
func (o *LineItemModel) GetRef2() string {
	if o == nil || IsNil(o.Ref2) {
		var ret string
		return ret
	}
	return *o.Ref2
}

// GetRef2Ok returns a tuple with the Ref2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetRef2Ok() (*string, bool) {
	if o == nil || IsNil(o.Ref2) {
		return nil, false
	}
	return o.Ref2, true
}

// HasRef2 returns a boolean if a field has been set.
func (o *LineItemModel) HasRef2() bool {
	if o != nil && !IsNil(o.Ref2) {
		return true
	}

	return false
}

// SetRef2 gets a reference to the given string and assigns it to the Ref2 field.
func (o *LineItemModel) SetRef2(v string) {
	o.Ref2 = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LineItemModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LineItemModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LineItemModel) SetDescription(v string) {
	o.Description = &v
}

// GetBusinessIdentificationNo returns the BusinessIdentificationNo field value if set, zero value otherwise.
func (o *LineItemModel) GetBusinessIdentificationNo() string {
	if o == nil || IsNil(o.BusinessIdentificationNo) {
		var ret string
		return ret
	}
	return *o.BusinessIdentificationNo
}

// GetBusinessIdentificationNoOk returns a tuple with the BusinessIdentificationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetBusinessIdentificationNoOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessIdentificationNo) {
		return nil, false
	}
	return o.BusinessIdentificationNo, true
}

// HasBusinessIdentificationNo returns a boolean if a field has been set.
func (o *LineItemModel) HasBusinessIdentificationNo() bool {
	if o != nil && !IsNil(o.BusinessIdentificationNo) {
		return true
	}

	return false
}

// SetBusinessIdentificationNo gets a reference to the given string and assigns it to the BusinessIdentificationNo field.
func (o *LineItemModel) SetBusinessIdentificationNo(v string) {
	o.BusinessIdentificationNo = &v
}

// GetTaxOverride returns the TaxOverride field value if set, zero value otherwise.
func (o *LineItemModel) GetTaxOverride() TaxOverrideModel {
	if o == nil || IsNil(o.TaxOverride) {
		var ret TaxOverrideModel
		return ret
	}
	return *o.TaxOverride
}

// GetTaxOverrideOk returns a tuple with the TaxOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemModel) GetTaxOverrideOk() (*TaxOverrideModel, bool) {
	if o == nil || IsNil(o.TaxOverride) {
		return nil, false
	}
	return o.TaxOverride, true
}

// HasTaxOverride returns a boolean if a field has been set.
func (o *LineItemModel) HasTaxOverride() bool {
	if o != nil && !IsNil(o.TaxOverride) {
		return true
	}

	return false
}

// SetTaxOverride gets a reference to the given TaxOverrideModel and assigns it to the TaxOverride field.
func (o *LineItemModel) SetTaxOverride(v TaxOverrideModel) {
	o.TaxOverride = &v
}

func (o LineItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	toSerialize["quantity"] = o.Quantity
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.CustomerUsageType) {
		toSerialize["customerUsageType"] = o.CustomerUsageType
	}
	if !IsNil(o.ItemCode) {
		toSerialize["itemCode"] = o.ItemCode
	}
	if !IsNil(o.ExemptionCode) {
		toSerialize["exemptionCode"] = o.ExemptionCode
	}
	if !IsNil(o.Discounted) {
		toSerialize["discounted"] = o.Discounted
	}
	if !IsNil(o.TaxIncluded) {
		toSerialize["taxIncluded"] = o.TaxIncluded
	}
	if !IsNil(o.RevenueAccount) {
		toSerialize["revenueAccount"] = o.RevenueAccount
	}
	if !IsNil(o.Ref1) {
		toSerialize["ref1"] = o.Ref1
	}
	if !IsNil(o.Ref2) {
		toSerialize["ref2"] = o.Ref2
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.BusinessIdentificationNo) {
		toSerialize["businessIdentificationNo"] = o.BusinessIdentificationNo
	}
	if !IsNil(o.TaxOverride) {
		toSerialize["taxOverride"] = o.TaxOverride
	}
	return toSerialize, nil
}

type NullableLineItemModel struct {
	value *LineItemModel
	isSet bool
}

func (v NullableLineItemModel) Get() *LineItemModel {
	return v.value
}

func (v *NullableLineItemModel) Set(val *LineItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemModel(val *LineItemModel) *NullableLineItemModel {
	return &NullableLineItemModel{value: val, isSet: true}
}

func (v NullableLineItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


