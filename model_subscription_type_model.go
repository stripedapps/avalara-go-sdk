/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriptionTypeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionTypeModel{}

// SubscriptionTypeModel Subscription Type Model
type SubscriptionTypeModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Description
	Description string `json:"description"`
}

// NewSubscriptionTypeModel instantiates a new SubscriptionTypeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionTypeModel(description string) *SubscriptionTypeModel {
	this := SubscriptionTypeModel{}
	this.Description = description
	return &this
}

// NewSubscriptionTypeModelWithDefaults instantiates a new SubscriptionTypeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionTypeModelWithDefaults() *SubscriptionTypeModel {
	this := SubscriptionTypeModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriptionTypeModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionTypeModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionTypeModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SubscriptionTypeModel) SetId(v int32) {
	o.Id = &v
}

// GetDescription returns the Description field value
func (o *SubscriptionTypeModel) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SubscriptionTypeModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SubscriptionTypeModel) SetDescription(v string) {
	o.Description = v
}

func (o SubscriptionTypeModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionTypeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

type NullableSubscriptionTypeModel struct {
	value *SubscriptionTypeModel
	isSet bool
}

func (v NullableSubscriptionTypeModel) Get() *SubscriptionTypeModel {
	return v.value
}

func (v *NullableSubscriptionTypeModel) Set(val *SubscriptionTypeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionTypeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionTypeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionTypeModel(val *SubscriptionTypeModel) *NullableSubscriptionTypeModel {
	return &NullableSubscriptionTypeModel{value: val, isSet: true}
}

func (v NullableSubscriptionTypeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionTypeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


