/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UserModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserModel{}

// UserModel User Model
type UserModel struct {
	// id
	Id *int32 `json:"id,omitempty"`
	// accountId
	AccountId *int32 `json:"accountId,omitempty"`
	// userName
	UserName string `json:"userName"`
	// firstName
	FirstName *string `json:"firstName,omitempty"`
	// lastName
	LastName *string `json:"lastName,omitempty"`
	// email
	Email string `json:"email"`
	// postalCode
	PostalCode string `json:"postalCode"`
	// securityRoleId
	SecurityRoleId *string `json:"securityRoleId,omitempty"`
	// companyId
	CompanyId *int32 `json:"companyId,omitempty"`
	// passwordStatus
	PasswordStatus *string `json:"passwordStatus,omitempty"`
	// isActive
	IsActive *bool `json:"isActive,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewUserModel instantiates a new UserModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserModel(userName string, email string, postalCode string) *UserModel {
	this := UserModel{}
	this.UserName = userName
	this.Email = email
	this.PostalCode = postalCode
	return &this
}

// NewUserModelWithDefaults instantiates a new UserModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserModelWithDefaults() *UserModel {
	this := UserModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UserModel) SetId(v int32) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *UserModel) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *UserModel) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *UserModel) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetUserName returns the UserName field value
func (o *UserModel) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *UserModel) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *UserModel) SetUserName(v string) {
	o.UserName = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UserModel) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserModel) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UserModel) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserModel) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserModel) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UserModel) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value
func (o *UserModel) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserModel) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserModel) SetEmail(v string) {
	o.Email = v
}

// GetPostalCode returns the PostalCode field value
func (o *UserModel) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *UserModel) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *UserModel) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetSecurityRoleId returns the SecurityRoleId field value if set, zero value otherwise.
func (o *UserModel) GetSecurityRoleId() string {
	if o == nil || IsNil(o.SecurityRoleId) {
		var ret string
		return ret
	}
	return *o.SecurityRoleId
}

// GetSecurityRoleIdOk returns a tuple with the SecurityRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetSecurityRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityRoleId) {
		return nil, false
	}
	return o.SecurityRoleId, true
}

// HasSecurityRoleId returns a boolean if a field has been set.
func (o *UserModel) HasSecurityRoleId() bool {
	if o != nil && !IsNil(o.SecurityRoleId) {
		return true
	}

	return false
}

// SetSecurityRoleId gets a reference to the given string and assigns it to the SecurityRoleId field.
func (o *UserModel) SetSecurityRoleId(v string) {
	o.SecurityRoleId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *UserModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *UserModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *UserModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetPasswordStatus returns the PasswordStatus field value if set, zero value otherwise.
func (o *UserModel) GetPasswordStatus() string {
	if o == nil || IsNil(o.PasswordStatus) {
		var ret string
		return ret
	}
	return *o.PasswordStatus
}

// GetPasswordStatusOk returns a tuple with the PasswordStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetPasswordStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordStatus) {
		return nil, false
	}
	return o.PasswordStatus, true
}

// HasPasswordStatus returns a boolean if a field has been set.
func (o *UserModel) HasPasswordStatus() bool {
	if o != nil && !IsNil(o.PasswordStatus) {
		return true
	}

	return false
}

// SetPasswordStatus gets a reference to the given string and assigns it to the PasswordStatus field.
func (o *UserModel) SetPasswordStatus(v string) {
	o.PasswordStatus = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *UserModel) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *UserModel) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *UserModel) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *UserModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *UserModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *UserModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *UserModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *UserModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *UserModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *UserModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *UserModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *UserModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *UserModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *UserModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *UserModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o UserModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	toSerialize["userName"] = o.UserName
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	toSerialize["email"] = o.Email
	toSerialize["postalCode"] = o.PostalCode
	if !IsNil(o.SecurityRoleId) {
		toSerialize["securityRoleId"] = o.SecurityRoleId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.PasswordStatus) {
		toSerialize["passwordStatus"] = o.PasswordStatus
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableUserModel struct {
	value *UserModel
	isSet bool
}

func (v NullableUserModel) Get() *UserModel {
	return v.value
}

func (v *NullableUserModel) Set(val *UserModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUserModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUserModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserModel(val *UserModel) *NullableUserModel {
	return &NullableUserModel{value: val, isSet: true}
}

func (v NullableUserModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


