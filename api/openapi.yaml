openapi: 3.0.1
info:
  contact:
    name: Avalara Developer Relations
    url: https://developer.avalara.com
  description: "REST interface to Avalara's enterprise tax service, AvaTax."
  license:
    name: Terms of Use
    url: https://www.avalara.com/terms-of-use/
  title: AvaTax API
  version: v2
servers:
- url: https://rest-sbx-preview.avalara.net/
paths:
  /api/v2/accounts/{id}:
    delete:
      deprecated: false
      description: "Deleting an account will delete all companies, and all account\
        \ level users attached to this account."
      operationId: ApiV2AccountsByIdDelete
      parameters:
      - description: The ID of the account you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single account
      tags:
      - Accounts
    get:
      deprecated: false
      operationId: ApiV2AccountsByIdGet
      parameters:
      - description: The ID of the account to retrieve.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single account
      tags:
      - Accounts
    put:
      deprecated: false
      operationId: ApiV2AccountsByIdPut
      parameters:
      - description: The ID of the account you wish to update.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        description: The account object you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single account
      tags:
      - Accounts
      x-codegen-request-body-name: model
  /api/v2/accounts:
    get:
      deprecated: false
      operationId: ApiV2AccountsGet
      parameters:
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[AccountModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all accounts
      tags:
      - Accounts
    post:
      deprecated: false
      operationId: ApiV2AccountsPost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        description: The account you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new account
      tags:
      - Accounts
      x-codegen-request-body-name: model
  /api/v2/addresses/resolve:
    post:
      deprecated: false
      operationId: ApiV2AddressesResolvePost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressInfo'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddressInfo'
        description: The address to resolve
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressResolutionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve geolocation information for a specified address
      tags:
      - Addresses
      x-codegen-request-body-name: request
  /api/v2/companies/{companyId}/batches/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdBatchesByIdDelete
      parameters:
      - description: The ID of the company that owns this batch.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the batch you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single batch
      tags:
      - Batches
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdBatchesByIdGet
      parameters:
      - description: The ID of the company that owns this batch
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this batch
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single batch
      tags:
      - Batches
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdBatchesByIdPut
      parameters:
      - description: The ID of the company that this batch belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the batch you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BatchModel'
        description: The batch you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single batch
      tags:
      - Batches
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/batches:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdBatchesGet
      parameters:
      - description: The ID of the company that owns these batches
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[BatchModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all batches for this company
      tags:
      - Batches
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdBatchesPost
      parameters:
      - description: The ID of the company that owns this batch.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BatchModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BatchModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BatchModel'
              type: array
        description: The batch you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new batch
      tags:
      - Batches
      x-codegen-request-body-name: models
  /api/v2/batches:
    get:
      deprecated: false
      operationId: ApiV2BatchesGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[BatchModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all batches
      tags:
      - Batches
  /api/v2/companies/{id}:
    delete:
      deprecated: false
      description: "Deleting a company will delete all child companies, and all users\
        \ attached to this company."
      operationId: ApiV2CompaniesByIdDelete
      parameters:
      - description: The ID of the company you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single company
      tags:
      - Companies
    get:
      deprecated: false
      operationId: ApiV2CompaniesByIdGet
      parameters:
      - description: The ID of the company to retrieve.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single company
      tags:
      - Companies
    put:
      deprecated: false
      operationId: ApiV2CompaniesByIdPut
      parameters:
      - description: The ID of the company you wish to update.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
        description: The company object you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single company
      tags:
      - Companies
      x-codegen-request-body-name: model
  /api/v2/companies:
    get:
      deprecated: false
      operationId: ApiV2CompaniesGet
      parameters:
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[CompanyModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all companies
      tags:
      - Companies
    post:
      deprecated: false
      operationId: ApiV2CompaniesPost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
        description: The company you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new company
      tags:
      - Companies
      x-codegen-request-body-name: model
  /api/v2/companies/initialize:
    post:
      deprecated: false
      operationId: ApiV2CompaniesInitializePost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
        description: Information about the company you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Quick setup for a company with a single physical address
      tags:
      - Companies
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/contacts/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdContactsByIdDelete
      parameters:
      - description: The ID of the company that owns this contact.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the contact you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single contact
      tags:
      - Contacts
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdContactsByIdGet
      parameters:
      - description: The ID of the company that owns this contact
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this contact
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single contact
      tags:
      - Contacts
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdContactsByIdPut
      parameters:
      - description: The ID of the company that this contact belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the contact you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactModel'
        description: The contact you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single contact
      tags:
      - Contacts
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/contacts:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdContactsGet
      parameters:
      - description: The ID of the company that owns these contacts
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[ContactModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve contacts for this company
      tags:
      - Contacts
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdContactsPost
      parameters:
      - description: The ID of the company that owns this contact.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContactModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ContactModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ContactModel'
              type: array
        description: The contacts you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ContactModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new contact
      tags:
      - Contacts
      x-codegen-request-body-name: models
  /api/v2/contacts:
    get:
      deprecated: false
      operationId: ApiV2ContactsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[ContactModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all contacts
      tags:
      - Contacts
  /api/v2/definitions/nexus:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsNexusGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[NexusModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported nexus for all countries
        and regions.
      tags:
      - Definitions
  /api/v2/definitions/nexus/{country}:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsNexusByCountryGet
      parameters:
      - in: path
        name: country
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[NexusModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported nexus for a country.
      tags:
      - Definitions
  /api/v2/definitions/nexus/{country}/{region}:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsNexusByCountryByRegionGet
      parameters:
      - description: The two-character ISO-3166 code for the country.
        in: path
        name: country
        required: true
        schema:
          type: string
      - description: The two or three character region code for the region.
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[NexusModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported nexus for a country and
        region.
      tags:
      - Definitions
  /api/v2/definitions/taxcodes:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsTaxcodesGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxCodeModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported tax codes.
      tags:
      - Definitions
  /api/v2/definitions/subscriptiontypes:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsSubscriptiontypesGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[SubscriptionTypeModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported subscription types
      tags:
      - Definitions
  /api/v2/definitions/taxauthorities:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsTaxauthoritiesGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxAuthorityModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported tax authorities.
      tags:
      - Definitions
  /api/v2/definitions/taxauthorityforms:
    get:
      deprecated: false
      operationId: ApiV2DefinitionsTaxauthorityformsGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxAuthorityFormModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve the full list of Avalara-supported tax authorities.
      tags:
      - Definitions
  /api/v2/companies/{companyId}/filingcalendars/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdFilingcalendarsByIdDelete
      parameters:
      - description: The ID of the company that owns this filing calendar.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the filing calendar you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single filing calendar
      tags:
      - FilingCalendars
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdFilingcalendarsByIdGet
      parameters:
      - description: The ID of the company that owns this filing calendar
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this filing calendar
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FilingCalendarModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single filing calendar
      tags:
      - FilingCalendars
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdFilingcalendarsByIdPut
      parameters:
      - description: The ID of the company that this filing calendar belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the filing calendar you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilingCalendarModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FilingCalendarModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilingCalendarModel'
        description: The filing calendar you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FilingCalendarModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single filing calendar
      tags:
      - FilingCalendars
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/filingcalendars:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdFilingcalendarsGet
      parameters:
      - description: The ID of the company that owns these filing calendars
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[FilingCalendarModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve filing calendars for this company
      tags:
      - FilingCalendars
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdFilingcalendarsPost
      parameters:
      - description: The ID of the company that owns this filing calendar.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FilingCalendarModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FilingCalendarModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FilingCalendarModel'
              type: array
        description: The filing calendars you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/FilingCalendarModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new filing calendar
      tags:
      - FilingCalendars
      x-codegen-request-body-name: models
  /api/v2/filingcalendars:
    get:
      deprecated: false
      operationId: ApiV2FilingcalendarsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[FilingCalendarModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all filing calendars
      tags:
      - FilingCalendars
  /api/v2/companies/{companyId}/items/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdItemsByIdDelete
      parameters:
      - description: The ID of the company that owns this item.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the item you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single item
      tags:
      - Items
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdItemsByIdGet
      parameters:
      - description: The ID of the company that owns this item object
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this item
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single item
      tags:
      - Items
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdItemsByIdPut
      parameters:
      - description: The ID of the company that this item belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the item you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ItemModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ItemModel'
        description: The item object you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single item
      tags:
      - Items
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/items:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdItemsGet
      parameters:
      - description: The ID of the company that owns these items
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[ItemModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve items for this company
      tags:
      - Items
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdItemsPost
      parameters:
      - description: The ID of the company that owns this item.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ItemModel'
              type: array
        description: The item you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ItemModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new item
      tags:
      - Items
      x-codegen-request-body-name: models
  /api/v2/items:
    get:
      deprecated: false
      operationId: ApiV2ItemsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[ItemModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all items
      tags:
      - Items
  /api/v2/companies/{companyId}/locations/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdLocationsByIdDelete
      parameters:
      - description: The ID of the company that owns this location.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the location you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single location
      tags:
      - Locations
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdLocationsByIdGet
      parameters:
      - description: The ID of the company that owns this location
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this location
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single location
      tags:
      - Locations
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdLocationsByIdPut
      parameters:
      - description: The ID of the company that this location belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the location you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LocationModel'
        description: The location you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single location
      tags:
      - Locations
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/locations:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdLocationsGet
      parameters:
      - description: The ID of the company that owns these locations
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[LocationModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve locations for this company
      tags:
      - Locations
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdLocationsPost
      parameters:
      - description: The ID of the company that owns this location.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/LocationModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/LocationModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/LocationModel'
              type: array
        description: The location you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/LocationModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new location
      tags:
      - Locations
      x-codegen-request-body-name: models
  /api/v2/locations:
    get:
      deprecated: false
      operationId: ApiV2LocationsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[LocationModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all locations
      tags:
      - Locations
  /api/v2/companies/{companyId}/nexus/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdNexusByIdDelete
      parameters:
      - description: The ID of the company that owns this nexus.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the nexus you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single nexus
      tags:
      - Nexus
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdNexusByIdGet
      parameters:
      - description: The ID of the company that owns this nexus object
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this nexus
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NexusModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single nexus
      tags:
      - Nexus
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdNexusByIdPut
      parameters:
      - description: The ID of the company that this nexus belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the nexus you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NexusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NexusModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NexusModel'
        description: The nexus object you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NexusModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single nexus
      tags:
      - Nexus
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/nexus:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdNexusGet
      parameters:
      - description: The ID of the company that owns these nexus objects
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[NexusModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve nexus for this company
      tags:
      - Nexus
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdNexusPost
      parameters:
      - description: The ID of the company that owns this nexus.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/NexusModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/NexusModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/NexusModel'
              type: array
        description: The nexus you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/NexusModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new nexus
      tags:
      - Nexus
      x-codegen-request-body-name: models
  /api/v2/nexus:
    get:
      deprecated: false
      operationId: ApiV2NexusGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[NexusModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all nexus
      tags:
      - Nexus
  /api/v2/passwords:
    put:
      deprecated: false
      operationId: ApiV2PasswordsPut
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
        description: An object containing your current password and the new password.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content: {}
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Change Password
      tags:
      - Passwords
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/settings/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdSettingsByIdDelete
      parameters:
      - description: The ID of the company that owns this setting.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the setting you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single setting
      tags:
      - Settings
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdSettingsByIdGet
      parameters:
      - description: The ID of the company that owns this setting
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this setting
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SettingModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single setting
      tags:
      - Settings
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdSettingsByIdPut
      parameters:
      - description: The ID of the company that this setting belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the setting you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SettingModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SettingModel'
        description: The setting you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SettingModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single setting
      tags:
      - Settings
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/settings:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdSettingsGet
      parameters:
      - description: The ID of the company that owns these settings
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[SettingModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all settings for this company
      tags:
      - Settings
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdSettingsPost
      parameters:
      - description: The ID of the company that owns this setting.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SettingModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/SettingModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/SettingModel'
              type: array
        description: The setting you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SettingModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new setting
      tags:
      - Settings
      x-codegen-request-body-name: models
  /api/v2/settings:
    get:
      deprecated: false
      operationId: ApiV2SettingsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[SettingModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all settings
      tags:
      - Settings
  /api/v2/accounts/{accountId}/subscriptions/{id}:
    delete:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdSubscriptionsByIdDelete
      parameters:
      - description: The ID of the account that owns this subscription.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the subscription you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single subscription
      tags:
      - Subscriptions
    get:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdSubscriptionsByIdGet
      parameters:
      - description: The ID of the account that owns this subscription
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this subscription
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single subscription
      tags:
      - Subscriptions
    put:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdSubscriptionsByIdPut
      parameters:
      - description: The ID of the account that this subscription belongs to.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the subscription you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
        description: The subscription you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: model
  /api/v2/accounts/{accountId}/subscriptions:
    get:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdSubscriptionsGet
      parameters:
      - description: The ID of the account that owns these subscriptions
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[SubscriptionModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve subscriptions for this account
      tags:
      - Subscriptions
    post:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdSubscriptionsPost
      parameters:
      - description: The ID of the account that owns this subscription.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SubscriptionModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/SubscriptionModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/SubscriptionModel'
              type: array
        description: The subscription you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SubscriptionModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: models
  /api/v2/subscriptions:
    get:
      deprecated: false
      operationId: ApiV2SubscriptionsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[SubscriptionModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all subscriptions
      tags:
      - Subscriptions
  /api/v2/companies/{companyId}/taxcodes/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxcodesByIdDelete
      parameters:
      - description: The ID of the company that owns this tax code.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the tax code you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single tax code
      tags:
      - TaxCodes
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxcodesByIdGet
      parameters:
      - description: The ID of the company that owns this tax code
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this tax code
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxCodeModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single tax code
      tags:
      - TaxCodes
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxcodesByIdPut
      parameters:
      - description: The ID of the company that this tax code belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the tax code you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
        description: The tax code you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxCodeModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single tax code
      tags:
      - TaxCodes
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/taxcodes:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxcodesGet
      parameters:
      - description: The ID of the company that owns these tax codes
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxCodeModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve tax codes for this company
      tags:
      - TaxCodes
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxcodesPost
      parameters:
      - description: The ID of the company that owns this tax code.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TaxCodeModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/TaxCodeModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/TaxCodeModel'
              type: array
        description: The tax code you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/TaxCodeModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new tax code
      tags:
      - TaxCodes
      x-codegen-request-body-name: models
  /api/v2/taxcodes:
    get:
      deprecated: false
      operationId: ApiV2TaxcodesGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxCodeModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all tax codes
      tags:
      - TaxCodes
  /api/v2/taxrates/byaddress:
    get:
      deprecated: false
      operationId: ApiV2TaxratesByaddressGet
      parameters:
      - description: The street address of the location.
        in: query
        name: line1
        schema:
          type: string
      - description: The street address of the location.
        in: query
        name: line2
        schema:
          type: string
      - description: The street address of the location.
        in: query
        name: line3
        schema:
          type: string
      - description: The city name of the location.
        in: query
        name: city
        schema:
          type: string
      - description: The state or region of the location
        in: query
        name: region
        schema:
          type: string
      - description: The postal code of the location.
        in: query
        name: postalCode
        schema:
          type: string
      - description: The two letter ISO-3166 country code.
        in: query
        name: country
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxRateModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve tax rates for a specified address
      tags:
      - TaxRates
  /api/v2/taxrates/bypostalcode:
    get:
      deprecated: false
      operationId: ApiV2TaxratesBypostalcodeGet
      parameters:
      - description: The two letter ISO-3166 country code.
        in: query
        name: country
        schema:
          type: string
      - description: The postal code of the location.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxRateModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve tax rates for a specified country and postal code
      tags:
      - TaxRates
  /api/v2/companies/{companyId}/taxrules/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxrulesByIdDelete
      parameters:
      - description: The ID of the company that owns this tax rule.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the tax rule you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single tax rule
      tags:
      - TaxRules
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxrulesByIdGet
      parameters:
      - description: The ID of the company that owns this tax rule
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this tax rule
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxRuleModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single tax rule
      tags:
      - TaxRules
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxrulesByIdPut
      parameters:
      - description: The ID of the company that this tax rule belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the tax rule you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
        description: The tax rule you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxRuleModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single tax rule
      tags:
      - TaxRules
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/taxrules:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxrulesGet
      parameters:
      - description: The ID of the company that owns these tax rules
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxRuleModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve tax rules for this company
      tags:
      - TaxRules
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdTaxrulesPost
      parameters:
      - description: The ID of the company that owns this tax rule.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TaxRuleModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/TaxRuleModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/TaxRuleModel'
              type: array
        description: The tax rule you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/TaxRuleModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new tax rule
      tags:
      - TaxRules
      x-codegen-request-body-name: models
  /api/v2/taxrules:
    get:
      deprecated: false
      operationId: ApiV2TaxrulesGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TaxRuleModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all tax rules
      tags:
      - TaxRules
  /api/v2/companies/{companyCode}/transactions/{transactionCode}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeDelete
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to post
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorDetail'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single transaction
      tags:
      - Transactions
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeGet
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to retrieve
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single transaction
      tags:
      - Transactions
  /api/v2/companies/{companyCode}/transactions:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsGet
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[TransactionModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all transactions
      tags:
      - Transactions
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/adjust:
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeAdjustPost
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to adjust
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
        description: The adjustment you wish to make
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Correct a previously created transaction
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/commit:
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeCommitPost
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to commit
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
        description: The commit request you wish to execute
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Convert an invoice into a sale or purchase
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/cancel:
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeCancelPost
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to cancel
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
        description: The cancel request you wish to execute
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Cancel a transaction
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/post:
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodePostPost
      parameters:
      - description: The company code of the company that recorded this transaction
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: The transaction code to post
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
        description: The post request you wish to execute
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Mark a transaction as posted to the ledger
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/companies/{companyCode}/transactions/create:
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyCodeTransactionsCreatePost
      parameters:
      - description: The company code of the company that recorded these transactions
        in: path
        name: companyCode
        required: true
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
        description: The transaction or transactions you wish to create
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/TransactionModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new transaction
      tags:
      - Transactions
      x-codegen-request-body-name: models
  /api/v2/transactions/{id}:
    delete:
      deprecated: false
      operationId: ApiV2TransactionsByIdDelete
      parameters:
      - description: The ID of the transaction you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorDetail'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single transaction
      tags:
      - Transactions
    get:
      deprecated: false
      operationId: ApiV2TransactionsByIdGet
      parameters:
      - description: The id of this transaction
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single transaction
      tags:
      - Transactions
  /api/v2/transactions/{id}/adjust:
    post:
      deprecated: false
      operationId: ApiV2TransactionsByIdAdjustPost
      parameters:
      - description: The ID of the transaction you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
        description: The transaction you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Correct a previously created transaction
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/transactions/{id}/commit:
    post:
      deprecated: false
      operationId: ApiV2TransactionsByIdCommitPost
      parameters:
      - description: The ID of the transaction you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
        description: The transaction you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Convert an invoice into a sale or purchase
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/transactions/{id}/cancel:
    post:
      deprecated: false
      operationId: ApiV2TransactionsByIdCancelPost
      parameters:
      - description: The ID of the transaction you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CancelTransactionModel'
        description: The transaction you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Cancel a transaction
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/transactions/{id}/post:
    post:
      deprecated: false
      operationId: ApiV2TransactionsByIdPostPost
      parameters:
      - description: The ID of the transaction you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostTransactionModel'
        description: The transaction you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Mark a transaction as posted to the ledger
      tags:
      - Transactions
      x-codegen-request-body-name: model
  /api/v2/transactions/create:
    post:
      deprecated: false
      operationId: ApiV2TransactionsCreatePost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTransactionModel'
              type: array
        description: A list of transactions to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/TransactionModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new transaction
      tags:
      - Transactions
      x-codegen-request-body-name: models
  /api/v2/companies/{companyId}/upcs/{id}:
    delete:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdUpcsByIdDelete
      parameters:
      - description: The ID of the company that owns this UPC.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the UPC you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single UPC
      tags:
      - Upcs
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdUpcsByIdGet
      parameters:
      - description: The ID of the company that owns this UPC
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The primary key of this UPC
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UPCModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single UPC
      tags:
      - Upcs
    put:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdUpcsByIdPut
      parameters:
      - description: The ID of the company that this UPC belongs to.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the UPC you wish to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UPCModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UPCModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UPCModel'
        description: The UPC you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UPCModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single UPC
      tags:
      - Upcs
      x-codegen-request-body-name: model
  /api/v2/companies/{companyId}/upcs:
    get:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdUpcsGet
      parameters:
      - description: The ID of the company that owns these UPCs
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[UPCModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve UPCs for this company
      tags:
      - Upcs
    post:
      deprecated: false
      operationId: ApiV2CompaniesByCompanyIdUpcsPost
      parameters:
      - description: The ID of the company that owns this UPC.
        in: path
        name: companyId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UPCModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/UPCModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/UPCModel'
              type: array
        description: The UPC you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/UPCModel'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new UPC
      tags:
      - Upcs
      x-codegen-request-body-name: models
  /api/v2/upcs:
    get:
      deprecated: false
      operationId: ApiV2UpcsGet
      parameters:
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[UPCModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all UPCs
      tags:
      - Upcs
  /api/v2/accounts/{accountId}/users/{id}:
    delete:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersByIdDelete
      parameters:
      - description: The ID of the user you wish to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The accountID of the user you wish to delete.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Delete a single user
      tags:
      - Users
    get:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersByIdGet
      parameters:
      - description: The ID of the user to retrieve.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The accountID of the user you wish to get.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve a single user
      tags:
      - Users
    put:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersByIdPut
      parameters:
      - description: The ID of the user you wish to update.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The accountID of the user you wish to update.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserModel'
        description: The user object you wish to update.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Update a single user
      tags:
      - Users
      x-codegen-request-body-name: model
  /api/v2/accounts/{accountId}/users:
    get:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersGet
      parameters:
      - description: The accountID of the user you wish to list.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[UserModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve users for this account
      tags:
      - Users
    post:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersPost
      parameters:
      - description: The accountID of the user you wish to create.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserModel'
        description: The user you wish to create.
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Create a new user
      tags:
      - Users
      x-codegen-request-body-name: model
  /api/v2/users:
    get:
      deprecated: false
      operationId: ApiV2UsersGet
      parameters:
      - description: A comma separated list of child objects to return underneath
          the primary object.
        in: query
        name: $include
        schema:
          type: string
      - description: "A filter statement to identify specific records to retrieve,\
          \ as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering\
          \ ."
        in: query
        name: $filter
        schema:
          type: string
      - description: "If nonzero, return no more than this number of results."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "A comma separated list of sort statements in the format '(fieldname)\
          \ [ASC|DESC]', for example 'id ASC'."
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FetchResult[UserModel]"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all users
      tags:
      - Users
  /api/v2/accounts/{accountId}/users/{id}/entitlements:
    get:
      deprecated: false
      operationId: ApiV2AccountsByAccountIdUsersByIdEntitlementsGet
      parameters:
      - description: The ID of the user to retrieve.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The accountID of the user you wish to get.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntitlementModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Retrieve all entitlements for a single user
      tags:
      - Users
  /utilities/ping:
    get:
      deprecated: false
      operationId: UtilitiesPingGet
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PingResultModel'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Tests connectivity and version of the service
      tags:
      - Utilities
  /utilities/isauthorized:
    post:
      deprecated: false
      operationId: UtilitiesIsauthorizedPost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          text/json:
            schema:
              items:
                type: string
              type: array
          application/json-patch+json:
            schema:
              items:
                type: string
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content: {}
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Checks authentication and authorization to one or more operations on
        the service.
      tags:
      - Utilities
      x-codegen-request-body-name: operations
  /utilities/isserviceauthorized:
    post:
      deprecated: false
      operationId: UtilitiesIsserviceauthorizedPost
      parameters:
      - description: "Account Services v2 supports three types of authentication:\
          \ OpenID bearer token (recommended), basic license key, and basic password:\r\
          \n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\
          \n                        <li>Basic [accountId]:[licenseKey]</li>\r\n  \
          \                      <li>Basic [userName]:[password]</li>\r\n        \
          \            </ul>\r\n                    Please note that for Basic methods,\
          \ you must encode the right side of the string in Base64."
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckServiceAuthorizedModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckServiceAuthorizedModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckServiceAuthorizedModel'
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "200":
          content: {}
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: NotFound
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: BadRequest
      security:
      - UserSecurity: []
        ApiKeySecurity: []
        OauthSecurity: []
      summary: Checks if service is authorized for given service type
      tags:
      - Utilities
      x-codegen-request-body-name: model
components:
  schemas:
    AccountModel:
      description: Account Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        name:
          description: Name
          maxLength: 50
          minLength: 0
          type: string
        effectiveDate:
          description: Effective Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        accountStatusId:
          description: Account Status Id
          enum:
          - Inactive
          - Active
          - Test
          - New
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
        subscriptions:
          description: Subscriptions
          items:
            $ref: '#/components/schemas/SubscriptionModel'
          type: array
        users:
          description: Users
          items:
            $ref: '#/components/schemas/UserModel'
          type: array
      required:
      - name
      type: object
    SubscriptionModel:
      description: Subscription Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        accountId:
          description: Account Id
          format: int32
          type: integer
        subscriptionTypeId:
          description: Subscription Type Id
          format: int32
          type: integer
        subscriptionDescription:
          description: Subscription Description
          maxLength: 25
          minLength: 0
          type: string
        effectiveDate:
          description: Effective Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      type: object
    UserModel:
      description: User Model
      properties:
        id:
          description: id
          format: int32
          type: integer
        accountId:
          description: accountId
          format: int32
          type: integer
        userName:
          description: userName
          maxLength: 50
          minLength: 5
          type: string
        firstName:
          description: firstName
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: lastName
          maxLength: 50
          minLength: 0
          type: string
        email:
          description: email
          maxLength: 50
          minLength: 0
          type: string
        postalCode:
          description: postalCode
          maxLength: 10
          minLength: 0
          type: string
        securityRoleId:
          description: securityRoleId
          enum:
          - NoAccess
          - SiteAdmin
          - AccountOperator
          - AccountAdmin
          - AccountUser
          - SystemAdmin
          - Registrar
          - CSPTester
          - CSPAdmin
          - SystemOperator
          - TechnicalSupportUser
          - TechnicalSupportAdmin
          - TreasuryUser
          - TreasuryAdmin
          - ComplianceUser
          - ComplianceAdmin
          - ProStoresOperator
          - CompanyUser
          - CompanyAdmin
          - ComplianceTempUser
          - ComplianceRootUser
          - ComplianceOperator
          - SSTAdmin
          type: string
        companyId:
          description: companyId
          format: int32
          type: integer
        passwordStatus:
          description: passwordStatus
          enum:
          - UserCannotChange
          - UserCanChange
          - UserMustChange
          type: string
        isActive:
          description: isActive
          type: boolean
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - email
      - postalCode
      - userName
      type: object
    ErrorResult:
      description: Helper function for throwing known error response
      properties:
        error:
          $ref: '#/components/schemas/ErrorInfo'
      type: object
    ErrorInfo:
      description: Information about the error that occurred
      properties:
        code:
          description: Category of the error
          enum:
          - Unknown
          - Authentication
          - RequestParsing
          - IncorrectData
          - InternalError
          type: string
        message:
          description: Short one-line message to summaryize what went wrong
          type: string
        target:
          description: What object or service caused the error?
          enum:
          - Unknown
          - HttpRequest
          - HttpRequestHeaders
          - IncorrectData
          - AvaTaxApiServer
          - AvalaraIdentityServer
          type: string
        details:
          description: Array of detailed error messages
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      type: object
    ErrorDetail:
      description: Message object
      properties:
        errorCode:
          description: Error message identifier
          format: int32
          type: integer
        summary:
          description: Concise summary of the message
          type: string
        details:
          description: Message details
          type: string
        faultCode:
          description: Indicates the SoapFault code
          type: string
        helpLink:
          description: URL to help for this message
          type: string
        name:
          description: Name of the message.
          type: string
        refersTo:
          description: "Item the message refers to, if applicable.  This is used to\
            \ indicate a missing or incorrect value."
          type: string
        severity:
          description: Severity of the message
          enum:
          - Success
          - Warning
          - Error
          - Exception
          type: string
        source:
          description: Source of the message
          type: string
        documentation:
          description: Documentation of the message
          type: string
      type: object
    FetchResult[AccountModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/AccountModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    AddressInfo:
      description: "Represents an address to resolve.  \r\n            Note that there\
        \ are no data validations on this model since malformed addresses will get\
        \ \"best-guess\" resolution."
      properties:
        line1:
          description: Line1
          maxLength: 50
          minLength: 0
          type: string
        line2:
          description: Line2
          maxLength: 50
          minLength: 0
          type: string
        line3:
          description: Line3
          maxLength: 50
          minLength: 0
          type: string
        city:
          description: City
          maxLength: 50
          minLength: 0
          type: string
        region:
          description: State / Province / Region
          maxLength: 3
          minLength: 0
          type: string
        country:
          description: Two character ISO 3166 Country Code
          maxLength: 2
          minLength: 0
          type: string
        postalCode:
          description: Postal Code / Zip Code
          maxLength: 11
          minLength: 0
          type: string
        latitude:
          description: Geospatial latitude measurement
          format: double
          type: number
        longitude:
          description: Geospatial longitude measurement
          format: double
          type: number
      type: object
    AddressResolutionModel:
      description: Address Resolution Model
      properties:
        address:
          $ref: '#/components/schemas/AddressInfo'
        coordinates:
          $ref: '#/components/schemas/CoordinateInfo'
        resolutionQuality:
          description: The resolution quality of the geospatial coordinates
          enum:
          - NotCoded
          - External
          - CountryCentroid
          - RegionCentroid
          - PartialCentroid
          - PostalCentroidGood
          - PostalCentroidBetter
          - PostalCentroidBest
          - Intersection
          - Interpolated
          - Rooftop
          - Constant
          type: string
        taxAuthorities:
          description: List of tax authorities that apply to this geospatial coordinate
          items:
            $ref: '#/components/schemas/TaxAuthorityInfo'
          type: array
      type: object
    CoordinateInfo:
      description: Coordinate Info
      properties:
        latitude:
          description: Latitude
          format: double
          type: number
        longitude:
          description: Longitude
          format: double
          type: number
      type: object
    TaxAuthorityInfo:
      description: Tax Authority Info
      properties:
        avalaraId:
          description: Avalara Id
          type: string
        jurisdictionName:
          description: Jurisdiction Name
          maxLength: 128
          minLength: 0
          type: string
        jurisdictionType:
          description: Jurisdiction Type
          enum:
          - Country
          - Composite
          - State
          - County
          - City
          - Special
          type: string
        signatureCode:
          description: Signature Code
          maxLength: 4
          minLength: 0
          type: string
      required:
      - jurisdictionName
      type: object
    BatchModel:
      description: Represents a batch of uploaded documents
      properties:
        id:
          description: The ID number of this batch
          format: int32
          type: integer
        name:
          description: The user-friendly readable name for this batch
          maxLength: 194
          minLength: 0
          type: string
        accountId:
          description: The Account ID number of the account that owns this batch
          format: int32
          type: integer
        companyId:
          description: The Company ID number of the company that owns this batch
          format: int32
          type: integer
        type:
          description: The type of this batch
          enum:
          - AvaCertUpdate
          - AvaCertUpdateAll
          - BatchMaintenance
          - CompanyLocationImport
          - DocumentImport
          - ExemptCertImport
          - ItemImport
          - SalesAuditExport
          - SstpTestDeckImport
          - TaxRuleImport
          - TransactionImport
          - UPCBulkImport
          - UPCValidationImport
          type: string
        status:
          description: This batch's current processing status
          enum:
          - Waiting
          - SystemErrors
          - Cancelled
          - Completed
          - Creating
          - Deleted
          - Errors
          - Paused
          - Processing
          type: string
        options:
          description: Any optional flags provided for this batch
          maxLength: 200
          minLength: 0
          type: string
        batchAgent:
          description: The agent used to create this batch
          maxLength: 50
          minLength: 0
          type: string
        startedDate:
          description: The date/time when this batch started processing
          format: date-time
          type: string
        recordCount:
          description: The number of records in this batch
          format: int32
          type: integer
        currentRecord:
          description: The current record being processed
          format: int32
          type: integer
        completedDate:
          description: The date/time when this batch was completely processed
          format: date-time
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
        files:
          description: The list of files contained in this batch
          items:
            $ref: '#/components/schemas/BatchFileModel'
          type: array
      required:
      - accountId
      - companyId
      - name
      - type
      type: object
    BatchFileModel:
      description: Represents one file in a batch upload
      properties:
        id:
          description: Unique BatchFile identifier
          format: int32
          type: integer
        batchId:
          description: BatchId that this BatchFile is associated with.
          format: int32
          type: integer
        name:
          description: Logical Name of file (e.g. "Input" or "Error")
          maxLength: 50
          minLength: 0
          type: string
        content:
          description: BatchFile content
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        contentLength:
          description: Size of content in bytes
          format: int32
          type: integer
        contentType:
          description: Content mime type (e.g. text/csv).  This is used for HTTP downloading.
          maxLength: 100
          minLength: 0
          type: string
        fileExtension:
          description: File extension (e.g. CSV)
          maxLength: 10
          minLength: 0
          type: string
        errorCount:
          description: Number of errors that occurred when processing this file.
          format: int32
          type: integer
      required:
      - content
      - contentType
      - fileExtension
      - name
      type: object
    FetchResult[BatchModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/BatchModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    CompanyModel:
      description: Company Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        accountId:
          description: Account Id
          format: int32
          type: integer
        parentCompanyId:
          description: Parent Company Id
          format: int32
          type: integer
        sstPid:
          description: SST Pid
          maxLength: 9
          minLength: 0
          type: string
        companyCode:
          description: Company Code
          maxLength: 25
          minLength: 0
          type: string
        name:
          description: Name
          maxLength: 50
          minLength: 0
          type: string
        isDefault:
          description: Is Default
          type: boolean
        defaultLocationId:
          description: Default Location Id
          format: int32
          type: integer
        isActive:
          description: Is Active
          type: boolean
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
        taxpayerIdNumber:
          description: Tax Payer Id Number
          maxLength: 11
          minLength: 0
          type: string
        hasProfile:
          description: Has Profile
          type: boolean
        isReportingEntity:
          description: Is Reporting Entity
          type: boolean
        sstEffectiveDate:
          description: SST Effective Date
          format: date-time
          type: string
        entityNo:
          description: Entity No
          format: int32
          type: integer
        defaultCountry:
          description: Default Country
          maxLength: 2
          minLength: 0
          type: string
        baseCurrencyCode:
          description: Base Currency Code
          maxLength: 3
          minLength: 0
          type: string
        roundingLevelId:
          description: Rounding Level Id
          enum:
          - Line
          - Document
          type: string
        cashBasisAccountingEnabled:
          description: Cash Basis Accounting Enabled
          type: boolean
        warningsEnabled:
          description: Warnings Enabled
          type: boolean
        isTest:
          description: Is Test
          type: boolean
        taxDependencyLevelId:
          description: Tax dependency Level Id
          enum:
          - Document
          - State
          - TaxRegion
          - Address
          type: string
        inProgress:
          description: In Progress
          type: boolean
        businessIdentificationNo:
          description: Business Identification No
          maxLength: 25
          minLength: 0
          type: string
        contacts:
          description: Contacts
          items:
            $ref: '#/components/schemas/ContactModel'
          type: array
        filingCalendars:
          description: Filing Calendars
          items:
            $ref: '#/components/schemas/FilingCalendarModel'
          type: array
        items:
          description: Items
          items:
            $ref: '#/components/schemas/ItemModel'
          type: array
        locations:
          description: Locations
          items:
            $ref: '#/components/schemas/LocationModel'
          type: array
        nexus:
          description: Nexus
          items:
            $ref: '#/components/schemas/NexusModel'
          type: array
        settings:
          description: Settings
          items:
            $ref: '#/components/schemas/SettingModel'
          type: array
        taxCodes:
          description: Tax Codes
          items:
            $ref: '#/components/schemas/TaxCodeModel'
          type: array
        taxRules:
          description: Tax Rules
          items:
            $ref: '#/components/schemas/TaxRuleModel'
          type: array
        upcs:
          description: UPCs
          items:
            $ref: '#/components/schemas/UPCModel'
          type: array
      required:
      - accountId
      - companyCode
      - name
      - taxpayerIdNumber
      type: object
    ContactModel:
      description: Contact Model
      properties:
        id:
          description: id
          format: int32
          type: integer
        companyId:
          description: companyId
          format: int32
          type: integer
        contactCode:
          description: contactCode
          maxLength: 25
          minLength: 0
          type: string
        firstName:
          description: firstName
          maxLength: 50
          minLength: 0
          type: string
        middleName:
          description: middleName
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: lastName
          maxLength: 50
          minLength: 0
          type: string
        title:
          description: title
          maxLength: 50
          minLength: 0
          type: string
        line1:
          description: line1
          maxLength: 50
          minLength: 0
          type: string
        line2:
          description: line2
          maxLength: 50
          minLength: 0
          type: string
        line3:
          description: line3
          maxLength: 50
          minLength: 0
          type: string
        city:
          description: city
          maxLength: 50
          minLength: 0
          type: string
        region:
          description: region
          maxLength: 3
          minLength: 0
          type: string
        postalCode:
          description: postalCode
          maxLength: 10
          minLength: 0
          type: string
        country:
          description: country
          maxLength: 50
          minLength: 0
          type: string
        email:
          description: email
          maxLength: 50
          minLength: 0
          type: string
        phone:
          description: phone
          maxLength: 50
          minLength: 0
          type: string
        phone2:
          description: phone2
          maxLength: 50
          minLength: 0
          type: string
        fax:
          description: fax
          maxLength: 50
          minLength: 0
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - contactCode
      type: object
    FilingCalendarModel:
      description: Filing Calendar
      properties:
        id:
          description: Id
          format: int64
          type: integer
        companyId:
          description: Company Id
          format: int32
          type: integer
        returnName:
          description: Return Name
          maxLength: 50
          minLength: 0
          type: string
        locationCode:
          description: "If this calendar is for a location-specific tax return, specify\
            \ the location code here.  To file for all locations, leave this value\
            \ NULL."
          maxLength: 50
          minLength: 0
          type: string
        outletTypeId:
          description: "If this calendar is for a location-specific tax return, specify\
            \ the location-specific behavior here."
          enum:
          - None
          - Schedule
          - Duplicate
          type: string
        paymentCurrency:
          description: "Specify the ISO 4217 currency code for the currency to remit\
            \ for this tax return.  For all tax returns in the United States, specify\
            \ \"USD\"."
          maxLength: 3
          minLength: 0
          type: string
        filingFrequencyId:
          description: Filing Frequency Id
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          type: string
        months:
          description: Months
          format: int32
          type: integer
        stateRegistrationId:
          description: "Tax Registration ID for this Region - in the U.S., this is\
            \ for your state."
          maxLength: 50
          minLength: 0
          type: string
        localRegistrationId:
          description: "Tax Registration ID for the local jurisdiction, if any."
          maxLength: 50
          minLength: 0
          type: string
        employerIdentificationNumber:
          description: Employer Identification Number
          maxLength: 50
          minLength: 0
          type: string
        line1:
          description: Line1
          maxLength: 50
          minLength: 0
          type: string
        line2:
          description: Line2
          maxLength: 50
          minLength: 0
          type: string
        city:
          description: City
          maxLength: 50
          minLength: 0
          type: string
        region:
          description: Region
          maxLength: 3
          minLength: 0
          type: string
        postalCode:
          description: Postal Code
          maxLength: 25
          minLength: 0
          type: string
        country:
          description: Country
          maxLength: 2
          minLength: 0
          type: string
        phone:
          description: Phone
          maxLength: 50
          minLength: 0
          type: string
        customerFilingInstructions:
          description: Customer Filing Instructions
          maxLength: 1000
          minLength: 0
          type: string
        legalEntityName:
          description: Legal Entity Name
          maxLength: 75
          minLength: 0
          type: string
        effectiveDate:
          description: Effective Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        filingTypeId:
          description: Filing Type Id
          enum:
          - PaperReturn
          - ElectronicReturn
          - SER
          - EFTPaper
          - PhonePaper
          - SignatureReady
          - EfileCheck
          type: string
        eFileUsername:
          description: "If you file electronically, this is the username you use to\
            \ log in to the tax authority's website."
          maxLength: 254
          minLength: 0
          type: string
        eFilePassword:
          description: "If you file electronically, this is the password or pass code\
            \ you use to log in to the tax authority's website."
          maxLength: 40
          minLength: 0
          type: string
        prepayPercentage:
          description: Prepay Percentage
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        taxTypeId:
          description: Tax Type Id
          enum:
          - All
          - BothSalesAndUseTax
          - ConsumerUseTax
          - MedicalExcise
          - Fee
          - VATInputTax
          - VATNonrecoverableInputTax
          - VATOutputTax
          - Rental
          - SalesTax
          - UseTax
          type: string
        internalNotes:
          description: Internal Notes
          maxLength: 1000
          minLength: 0
          type: string
        alSignOn:
          description: Al Sign On
          maxLength: 25
          minLength: 0
          type: string
        alAccessCode:
          description: Al Access Code
          maxLength: 25
          minLength: 0
          type: string
        meBusinessCode:
          description: Me Business Code
          maxLength: 50
          minLength: 0
          type: string
        iaBen:
          description: Ia Ben
          maxLength: 50
          minLength: 0
          type: string
        ctReg:
          description: Ct Reg
          maxLength: 50
          minLength: 0
          type: string
        other1Name:
          description: Other 1 Name
          maxLength: 50
          minLength: 0
          type: string
        other1Value:
          description: Other 1 Value
          maxLength: 50
          minLength: 0
          type: string
        other2Name:
          description: Other 2 Name
          maxLength: 50
          minLength: 0
          type: string
        other2Value:
          description: Other 2 Value
          maxLength: 50
          minLength: 0
          type: string
        other3Name:
          description: Other 3 Name
          maxLength: 50
          minLength: 0
          type: string
        other3Value:
          description: Other 3 Value
          maxLength: 50
          minLength: 0
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - returnName
      - stateRegistrationId
      - taxTypeId
      type: object
    ItemModel:
      description: Item Model
      properties:
        id:
          description: Id
          format: int64
          type: integer
        itemCode:
          description: Item Code
          maxLength: 50
          minLength: 0
          type: string
        companyId:
          description: Company Id
          format: int32
          type: integer
        taxCodeId:
          description: Tax Code Id
          format: int32
          type: integer
        taxCode:
          description: Tax Code
          maxLength: 25
          minLength: 0
          type: string
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - description
      - itemCode
      type: object
    LocationModel:
      description: Location Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        companyId:
          description: Company Id
          format: int32
          type: integer
        locationCode:
          description: Location Code
          maxLength: 50
          minLength: 0
          type: string
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
        addressTypeId:
          description: Address Type Id
          enum:
          - Location
          - Salesperson
          type: string
        addressCategoryId:
          description: Address Category Id
          enum:
          - Storefront
          - MainOffice
          - Warehouse
          - Salesperson
          - Other
          type: string
        line1:
          description: Line1
          maxLength: 50
          minLength: 0
          type: string
        line2:
          description: Line2
          maxLength: 50
          minLength: 0
          type: string
        line3:
          description: Line3
          maxLength: 50
          minLength: 0
          type: string
        city:
          description: City
          maxLength: 50
          minLength: 0
          type: string
        region:
          description: Region
          maxLength: 3
          minLength: 0
          type: string
        postalCode:
          description: Postal Code
          maxLength: 10
          minLength: 0
          type: string
        country:
          description: Country
          maxLength: 2
          minLength: 0
          type: string
        stateAssignedCode:
          description: State Assigned Code
          maxLength: 13
          minLength: 0
          type: string
        isDefault:
          description: Is Default
          type: boolean
        county:
          description: County
          maxLength: 50
          minLength: 0
          type: string
        isRegistered:
          description: Is Registered
          type: boolean
        dbaName:
          description: Dba Name
          maxLength: 100
          minLength: 0
          type: string
        outletName:
          description: Outlet Name
          maxLength: 100
          minLength: 0
          type: string
        effectiveDate:
          description: Start Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        lastTransactionDate:
          description: Last Transaction Date
          format: date-time
          type: string
        registeredDate:
          description: Registered Date
          format: date-time
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - line1
      - locationCode
      type: object
    NexusModel:
      description: Nexus Model
      properties:
        id:
          description: id
          format: int32
          type: integer
        companyId:
          description: companyId
          format: int32
          type: integer
        state:
          description: state
          maxLength: 3
          minLength: 0
          type: string
        jurisTypeId:
          description: jurisTypeId
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          type: string
        jurisCode:
          description: jurisCode
          maxLength: 10
          minLength: 0
          type: string
        jurisName:
          description: jurisName
          maxLength: 200
          minLength: 0
          type: string
        effectiveDate:
          description: effectiveDate
          format: date-time
          type: string
        endDate:
          description: endDate
          format: date-time
          type: string
        shortName:
          description: shortName
          maxLength: 15
          minLength: 0
          type: string
        signatureCode:
          description: signatureCode
          maxLength: 4
          minLength: 0
          type: string
        stateAssignedNo:
          description: stateAssignedNo
          maxLength: 50
          minLength: 0
          type: string
        nexusTypeId:
          description: nexusTypeId
          enum:
          - None
          - Volunteer
          - Collect
          - NonVolunteer
          - Legal
          - SSTVolunteer
          - SSTNonVolunteer
          type: string
        country:
          description: country
          maxLength: 2
          minLength: 0
          type: string
        sourcing:
          description: sourcing
          enum:
          - Destination
          - Origin
          type: string
        accountingMethodId:
          description: accountingMethodId
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        hasLocalNexus:
          description: hasLocalNexus
          type: boolean
        localNexusTypeId:
          description: localNexusTypeId
          enum:
          - Selected
          - StateAdministered
          - All
          type: string
        hasPermanentEstablishment:
          description: hasPermanentEstablishment
          type: boolean
        taxId:
          description: taxId
          maxLength: 25
          minLength: 0
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - jurisCode
      - jurisName
      - state
      type: object
    SettingModel:
      description: Setting Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        companyId:
          description: Company Id
          format: int32
          type: integer
        set:
          description: Set
          maxLength: 25
          minLength: 0
          type: string
        name:
          description: Name
          maxLength: 50
          minLength: 0
          type: string
        value:
          description: Value
          maxLength: 200
          minLength: 0
          type: string
      required:
      - name
      - set
      type: object
    TaxCodeModel:
      description: Tax Code Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        taxCode:
          description: Tax Code
          maxLength: 25
          minLength: 0
          type: string
        taxCodeTypeId:
          description: Tax Code Type Id
          maxLength: 2
          minLength: 0
          type: string
        companyId:
          description: Company Id
          format: int32
          type: integer
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
        parentTaxCode:
          description: Parent Tax Code
          maxLength: 25
          minLength: 0
          type: string
        isPhysical:
          description: Is Physical
          type: boolean
        goodsServiceCode:
          description: Good Service Code
          format: int64
          type: integer
        entityUseCode:
          description: Entity Use Code
          maxLength: 40
          minLength: 0
          type: string
        isActive:
          description: Is Active
          type: boolean
        isSSTCertified:
          description: Is SST Certified
          type: boolean
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - taxCode
      - taxCodeTypeId
      type: object
    TaxRuleModel:
      description: Tax Rule Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        companyId:
          description: CompanyId
          format: int32
          type: integer
        stateFIPS:
          description: State FIPS
          maxLength: 2
          minLength: 0
          type: string
        jurisName:
          description: Jurisdiction Name
          maxLength: 200
          minLength: 0
          type: string
        jurisCode:
          description: Jurisdiction Code
          maxLength: 10
          minLength: 0
          type: string
        jurisTypeId:
          description: Jurisdiction Type Id
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          type: string
        taxCodeId:
          description: Tax Code Id
          format: int32
          type: integer
        taxCode:
          description: Tax Code
          maxLength: 25
          minLength: 0
          type: string
        customerUsageType:
          description: Customer Usage Type
          maxLength: 25
          minLength: 0
          type: string
        taxTypeId:
          description: Tax Type Id
          enum:
          - All
          - BothSalesAndUseTax
          - ConsumerUseTax
          - MedicalExcise
          - Fee
          - VATInputTax
          - VATNonrecoverableInputTax
          - VATOutputTax
          - Rental
          - SalesTax
          - UseTax
          type: string
        rateTypeId:
          description: Rate Type Id
          enum:
          - ReducedA
          - ReducedB
          - Food
          - General
          - IncreasedStandard
          - LinenRental
          - Medical
          - Parking
          - SuperReduced
          - ReducedR
          - Standard
          - Zero
          type: string
        taxRuleTypeId:
          description: Tax Rule Type Id
          enum:
          - RateRule
          - RateOverrideRule
          - BaseRule
          - ExemptEntityRule
          - ProductTaxabilityRule
          - NexusRule
          type: string
        isAllJuris:
          description: Is All Juris
          type: boolean
        value:
          description: Value
          format: double
          type: number
        cap:
          description: Cap
          format: double
          type: number
        threshold:
          description: Threshold
          format: double
          type: number
        options:
          description: Options
          maxLength: 100
          minLength: 0
          type: string
        effectiveDate:
          description: Effective Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
        countyFIPS:
          description: County FIPS
          maxLength: 3
          minLength: 0
          type: string
        isSTPro:
          description: Is STPro
          type: boolean
        country:
          description: Country
          maxLength: 2
          minLength: 0
          type: string
        region:
          description: Region
          maxLength: 3
          minLength: 0
          type: string
        sourcing:
          description: Sourcing
          enum:
          - Destination
          - Origin
          type: string
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - country
      - jurisCode
      - region
      type: object
    UPCModel:
      description: UPC Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        companyId:
          description: CompanyId
          format: int32
          type: integer
        upc:
          description: UPC
          maxLength: 50
          minLength: 0
          type: string
        legacyTaxCode:
          description: Legacy Tax Code
          maxLength: 50
          minLength: 0
          type: string
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
        effectiveDate:
          description: Effective Date
          format: date-time
          type: string
        endDate:
          description: End Date
          format: date-time
          type: string
        usage:
          description: Usage
          format: int32
          type: integer
        isSystem:
          description: IsSystem
          format: int32
          type: integer
        createdDate:
          description: The date when this record was created (read only)
          format: date-time
          type: string
        createdUserId:
          description: The User ID of the user who created this record (read only)
          format: int32
          type: integer
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
      required:
      - description
      - upc
      type: object
    FetchResult[CompanyModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/CompanyModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    CompanyInitializationModel:
      description: Company Initialization Model
      properties:
        name:
          description: Company Name
          maxLength: 50
          minLength: 0
          type: string
        companyCode:
          description: Company Code - used to distinguish between companies within
            your accounting system
          maxLength: 25
          minLength: 0
          type: string
        vatRegistrationId:
          description: Vat Registration Id - leave blank if not known.
          maxLength: 25
          minLength: 0
          type: string
        taxpayerIdNumber:
          description: "United States Taxpayer ID number, usually your Employer Identification\
            \ Number if you are a business or your Social Security Number if you are\
            \ an individual."
          maxLength: 11
          minLength: 0
          type: string
        line1:
          description: Address Line1
          maxLength: 50
          minLength: 0
          type: string
        line2:
          description: Line2
          maxLength: 50
          minLength: 0
          type: string
        line3:
          description: Line3
          maxLength: 50
          minLength: 0
          type: string
        city:
          description: City
          maxLength: 50
          minLength: 0
          type: string
        region:
          description: Region
          maxLength: 3
          minLength: 0
          type: string
        postalCode:
          description: Postal Code
          maxLength: 10
          minLength: 0
          type: string
        country:
          description: Country
          maxLength: 3
          minLength: 0
          type: string
        firstName:
          description: First Name
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: Last Name
          maxLength: 50
          minLength: 0
          type: string
        title:
          description: Title
          maxLength: 50
          minLength: 0
          type: string
        email:
          description: Email
          maxLength: 50
          minLength: 0
          type: string
        phoneNumber:
          description: Phone Number
          maxLength: 25
          minLength: 0
          type: string
        mobileNumber:
          description: Mobile Number
          maxLength: 25
          minLength: 0
          type: string
        faxNumber:
          description: Fax Number
          maxLength: 25
          minLength: 0
          type: string
      required:
      - city
      - companyCode
      - country
      - email
      - firstName
      - lastName
      - line1
      - name
      - phoneNumber
      - postalCode
      - region
      type: object
    FetchResult[ContactModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/ContactModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[NexusModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/NexusModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[TaxCodeModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/TaxCodeModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[SubscriptionTypeModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/SubscriptionTypeModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    SubscriptionTypeModel:
      description: Subscription Type Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        description:
          description: Description
          maxLength: 255
          minLength: 0
          type: string
      required:
      - description
      type: object
    FetchResult[TaxAuthorityModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/TaxAuthorityModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    TaxAuthorityModel:
      description: Tax Authority Model
      properties:
        id:
          description: Id
          format: int32
          type: integer
        name:
          description: Name
          maxLength: 128
          minLength: 0
          type: string
        taxAuthorityTypeId:
          description: Tax Authority Type Id
          format: int32
          type: integer
        jurisdictionId:
          description: Jurisdiction Id
          format: int32
          type: integer
      required:
      - name
      type: object
    FetchResult[TaxAuthorityFormModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/TaxAuthorityFormModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    TaxAuthorityFormModel:
      description: Tax Authority Form Model
      properties:
        taxAuthorityId:
          description: Tax Authority Id
          format: int32
          type: integer
        formName:
          description: Form Name
          maxLength: 50
          minLength: 0
          type: string
      required:
      - formName
      type: object
    FetchResult[FilingCalendarModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/FilingCalendarModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[ItemModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/ItemModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[LocationModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/LocationModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    PasswordChangeModel:
      description: Password Change Model
      properties:
        oldPassword:
          description: Old Password
          maxLength: 50
          minLength: 0
          type: string
        newPassword:
          description: New Password
          maxLength: 50
          minLength: 8
          type: string
      required:
      - newPassword
      - oldPassword
      type: object
    FetchResult[SettingModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/SettingModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[SubscriptionModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/SubscriptionModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    TaxRateModel:
      description: Tax Rate Model
      properties:
        totalRate:
          description: Total Rate
          format: double
          type: number
        rates:
          description: Rates
          items:
            $ref: '#/components/schemas/RateModel'
          type: array
      type: object
    RateModel:
      description: Rate Model
      properties:
        rate:
          description: Rate
          format: double
          type: number
        name:
          description: Name
          type: string
        type:
          description: Type
          enum:
          - Country
          - Composite
          - State
          - County
          - City
          - Special
          type: string
      type: object
    FetchResult[TaxRuleModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/TaxRuleModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    TransactionModel:
      description: "A single transaction - for example, a sales invoice or purchase\
        \ order"
      properties:
        id:
          description: DocumentId
          format: int64
          type: integer
        code:
          description: DocumentCode
          type: string
        date:
          description: DocumentDate
          format: date-time
          type: string
        taxDate:
          description: TaxDate
          format: date-time
          type: string
        paymentDate:
          description: PaymentDate
          format: date-time
          type: string
        status:
          description: DocumentStatusId
          enum:
          - Temporary
          - Saved
          - Posted
          - Committed
          - Cancelled
          - Adjusted
          - Queued
          - PendingApproval
          - Any
          type: string
        type:
          description: DocumentTypeId
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - Any
          type: string
        companyId:
          description: CompanyId
          format: int32
          type: integer
        batchCode:
          description: BatchCode
          type: string
        currencyCode:
          description: CurrencyCode
          type: string
        customerUsageType:
          description: CustomerUsageType
          type: string
        customerVendorCode:
          description: CustomerVendorCode
          type: string
        exemptNo:
          description: ExemptNo
          type: string
        reconciled:
          description: IsReconciled
          type: boolean
        locationCode:
          description: LocationCode
          type: string
        purchaseOrderNo:
          description: PurchaseOrderNo
          type: string
        referenceCode:
          description: ReferenceCode
          type: string
        salespersonCode:
          description: SalespersonCode
          type: string
        taxOverrideType:
          description: TaxOverrideTypeId
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          type: string
        taxOverrideAmount:
          description: TaxOverrideAmount
          format: double
          type: number
        taxOverrideReason:
          description: TaxOverrideReason
          type: string
        totalAmount:
          description: TotalAmount
          format: double
          type: number
        totalExempt:
          description: TotalExempt
          format: double
          type: number
        totalTax:
          description: TotalTax
          format: double
          type: number
        totalTaxable:
          description: TotalTaxable
          format: double
          type: number
        totalTaxCalculated:
          description: TotalTaxCalculated
          format: double
          type: number
        adjustmentReason:
          description: AdjustmentReasonId
          enum:
          - NotAdusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          type: string
        adjustmentDescription:
          description: AdjustmentDescription
          type: string
        locked:
          description: IsLocked
          type: boolean
        region:
          description: Region
          type: string
        country:
          description: Country
          type: string
        version:
          description: Version
          format: int32
          type: integer
        softwareVersion:
          description: SoftwareVersion
          type: string
        originAddressId:
          description: OriginAddressId
          format: int64
          type: integer
        destinationAddressId:
          description: DestinationAddressId
          format: int64
          type: integer
        exchangeRateEffectiveDate:
          description: ExchangeRateEffDate
          format: date-time
          type: string
        exchangeRate:
          description: ExchangeRate
          format: double
          type: number
        isSellerImporterOfRecord:
          description: IsSellerImporterOfRecord
          type: boolean
        description:
          description: Description
          type: string
        email:
          description: Email
          type: string
        brBuyerType:
          description: BRBuyerType
          type: string
        brBuyer_IsExemptOrCannotWH_IRRF:
          description: BRBuyer_IsExemptOrCannotWH_IRRF
          type: boolean
        brBuyer_IsExemptOrCannotWH_PISRF:
          description: BRBuyer_IsExemptOrCannotWH_PISRF
          type: boolean
        brBuyer_IsExemptOrCannotWH_COFINSRF:
          description: BRBuyer_IsExemptOrCannotWH_COFINSRF
          type: boolean
        brBuyer_IsExemptOrCannotWH_CSLLRF:
          description: BRBuyer_IsExemptOrCannotWH_CSLLRF
          type: boolean
        brBuyer_IsExempt_PIS:
          description: BRBuyer_IsExempt_PIS
          type: boolean
        brBuyer_IsExempt_COFINS:
          description: BRBuyer_IsExempt_COFINS
          type: boolean
        brBuyer_IsExempt_CSLL:
          description: BRBuyer_IsExempt_CSLL
          type: boolean
        modifiedDate:
          description: The date/time when this record was last modified (read only)
          format: date-time
          type: string
        modifiedUserId:
          description: The user ID of the user who last modified this record (read
            only)
          format: int32
          type: integer
        lines:
          description: A list of lines in this transaction
          items:
            $ref: '#/components/schemas/TransactionLineModel'
          type: array
        addresses:
          description: A list of addresses used in this transaction
          items:
            $ref: '#/components/schemas/TransactionAddressModel'
          type: array
      type: object
    TransactionLineModel:
      description: One line item on this transaction
      properties:
        id:
          description: DocumentLineId
          format: int64
          type: integer
        transactionId:
          description: DocumentId
          format: int64
          type: integer
        lineNumber:
          description: LineNo
          type: string
        method:
          description: AccountingMethodId
          enum:
          - Accrual
          - Cash
          type: string
        boundaryOverrideId:
          description: BoundaryOverrideId
          format: int32
          type: integer
        customerUsageType:
          description: CustomerUsageType
          type: string
        description:
          description: Description
          type: string
        destinationAddressId:
          description: DestinationAddressId
          format: int64
          type: integer
        discountAmount:
          description: DiscountAmount
          format: double
          type: number
        discountTypeId:
          description: DiscountTypeId
          format: int32
          type: integer
        exemptAmount:
          description: ExemptAmount
          format: double
          type: number
        exemptCertId:
          description: ExemptCertId
          format: int32
          type: integer
        exemptNo:
          description: ExemptNo
          type: string
        isItemTaxable:
          description: IsItemTaxable
          type: boolean
        isSSTP:
          description: IsSSTP
          type: boolean
        itemCode:
          description: ItemCode
          type: string
        lineAmount:
          description: LineAmount
          format: double
          type: number
        originAddressId:
          description: OriginAddressId
          format: int64
          type: integer
        quantity:
          description: Quantity
          format: double
          type: number
        ref1:
          description: Ref1
          type: string
        ref2:
          description: Ref2
          type: string
        reportingDate:
          description: ReportingDate
          format: date-time
          type: string
        revAccount:
          description: RevAccount
          type: string
        sourcing:
          description: Sourcing
          enum:
          - Destination
          - Origin
          type: string
        tax:
          description: Tax
          format: double
          type: number
        taxableAmount:
          description: TaxableAmount
          format: double
          type: number
        taxCalculated:
          description: TaxCalculated
          format: double
          type: number
        taxCode:
          description: TaxCode
          type: string
        taxCodeId:
          description: TaxCodeId
          format: int32
          type: integer
        taxDate:
          description: TaxDate
          format: date-time
          type: string
        taxEngine:
          description: TaxEngine
          type: string
        taxOverrideType:
          description: TaxOverrideTypeId
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          type: string
        taxOverrideAmount:
          description: TaxOverrideAmount
          format: double
          type: number
        taxOverrideReason:
          description: TaxOverrideReason
          type: string
        taxIncluded:
          description: TaxIncluded
          type: boolean
        details:
          description: Details
          items:
            $ref: '#/components/schemas/TransactionLineDetailModel'
          type: array
      type: object
    TransactionAddressModel:
      description: An address used within this transaction
      properties:
        id:
          description: DocumentAddressId
          format: int64
          type: integer
        transactionId:
          description: DocumentId
          format: int64
          type: integer
        boundaryLevel:
          description: BoundaryLevel
          enum:
          - Address
          - Zip9
          - Zip5
          type: string
        line1:
          description: AddressLine1
          type: string
        line2:
          description: AddressLine2
          type: string
        line3:
          description: AddressLine3
          type: string
        city:
          description: City
          type: string
        region:
          description: Region
          type: string
        postalCode:
          description: PostalCode
          type: string
        country:
          description: Country
          type: string
        taxRegionId:
          description: TaxRegionId
          format: int32
          type: integer
      type: object
    TransactionLineDetailModel:
      description: An individual tax detail element for this line
      properties:
        id:
          description: DocumentLineDetailId
          format: int64
          type: integer
        transactionLineId:
          description: DocumentLineId
          format: int64
          type: integer
        transactionId:
          description: DocumentId
          format: int64
          type: integer
        addressId:
          description: AddressId
          format: int64
          type: integer
        country:
          description: Country
          type: string
        region:
          description: Region
          type: string
        countyFIPS:
          description: CountyFips
          type: string
        stateFIPS:
          description: StateFips
          type: string
        exemptAmount:
          description: ExemptAmount
          format: double
          type: number
        exemptReasonId:
          description: ExemptReasonId
          format: int32
          type: integer
        inState:
          description: InState
          type: boolean
        jurisCode:
          description: JurisCode
          type: string
        jurisName:
          description: JurisName
          type: string
        jurisdictionId:
          description: JurisdictionId
          format: int32
          type: integer
        jurisType:
          description: JurisTypeId
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          type: string
        nonTaxableAmount:
          description: NonTaxableAmount
          format: double
          type: number
        nonTaxableRuleId:
          description: NonTaxableRuleId
          format: int32
          type: integer
        nonTaxableType:
          description: NonTaxableTypeId
          enum:
          - RateRule
          - RateOverrideRule
          - BaseRule
          - ExemptEntityRule
          - ProductTaxabilityRule
          - NexusRule
          type: string
        rate:
          description: Rate
          format: double
          type: number
        rateRuleId:
          description: RateRuleId
          format: int32
          type: integer
        rateSourceId:
          description: RateSourceId
          format: int32
          type: integer
        signatureCode:
          description: SignatureCode
          type: string
        serCode:
          description: SERCode
          type: string
        sourcing:
          description: Sourcing
          enum:
          - Destination
          - Origin
          type: string
        stateAssignedNo:
          description: StateAssignedNo
          type: string
        tax:
          description: Tax
          format: double
          type: number
        taxableAmount:
          description: TaxableAmount
          format: double
          type: number
        taxType:
          description: TaxTypeId
          enum:
          - ConsumerUse
          - Excise
          - Fee
          - Input
          - Nonrecoverable
          - Output
          - Rental
          - Sales
          - Use
          type: string
        taxName:
          description: TaxName
          type: string
        taxAuthorityTypeId:
          description: TaxAuthorityTypeId
          format: int32
          type: integer
        taxRegionId:
          description: TaxRegionId
          format: int32
          type: integer
        taxCalculated:
          description: TaxCalculated
          format: double
          type: number
        taxOverride:
          description: TaxOverride
          format: double
          type: number
        rateType:
          description: RateTypeId
          enum:
          - ReducedA
          - ReducedB
          - Food
          - General
          - IncreasedStandard
          - LinenRental
          - Medical
          - Parking
          - SuperReduced
          - ReducedR
          - Standard
          - Zero
          type: string
      type: object
    FetchResult[TransactionModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/TransactionModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    AdjustTransactionModel:
      description: A request to adjust tax for a previously existing transaction
      properties:
        adjustmentReason:
          description: A reason code indicating why this adjustment was made
          enum:
          - NotAdusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          type: string
        adjustmentDescription:
          description: "If the AdjustmentReason is \"Other\", specify the reason here"
          type: string
        newTransaction:
          $ref: '#/components/schemas/CreateTransactionModel'
      type: object
    CreateTransactionModel:
      description: Create a transaction
      properties:
        companyCode:
          description: Company Code - The client application company reference code.
          maxLength: 25
          minLength: 0
          type: string
        type:
          description: Document Type
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - Any
          type: string
        code:
          description: "Transaction Code - the internal reference code used by the\
            \ client application.  This is used for operations such as\r\n       \
            \         Post and GetTaxHistory."
          maxLength: 50
          minLength: 0
          type: string
        date:
          description: "Transaction Date - The date on the invoice, purchase order,\
            \ etc."
          format: date-time
          type: string
        salespersonCode:
          description: Salesperson Code - The client application salesperson reference
            code.
          maxLength: 25
          minLength: 0
          type: string
        customerCode:
          description: Customer Code - The client application customer reference code.
          maxLength: 50
          minLength: 0
          type: string
        customerUsageType:
          description: Customer Usage Type - The client application customer or usage
            type.
          maxLength: 25
          minLength: 0
          type: string
        discount:
          description: Discount - The discount amount to apply to the document.
          format: double
          type: number
        purchaseOrderNo:
          description: Purchase Order Number for this document
          maxLength: 50
          minLength: 0
          type: string
        exemptionNo:
          description: Exemption Number for this document
          maxLength: 25
          minLength: 0
          type: string
        addresses:
          $ref: '#/components/schemas/CreateTransactionModel_addresses'
        lines:
          description: Document line items list
          items:
            $ref: '#/components/schemas/LineItemModel'
          type: array
        referenceCode:
          description: Reference Code used to reference the original document for
            a return invoice
          maxLength: 50
          minLength: 0
          type: string
        hashCode:
          description: "The hash code is computed by the client to determine whether\
            \ any changes have occured\r\n                since taxes were calculated."
          format: int32
          type: integer
        reportingLocationCode:
          description: Sets the sale location code (Outlet ID) for reporting this
            document to the tax authority.
          maxLength: 50
          minLength: 0
          type: string
        commit:
          description: Causes the document to be committed if true.
          type: boolean
        batchCode:
          description: BatchCode for batch operations.
          maxLength: 25
          minLength: 0
          type: string
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
        taxDate:
          description: Indicates the tax effectivity override date for the entire
            document.
          format: date-time
          type: string
        currencyCode:
          description: 3 character ISO 4217 currency code.
          maxLength: 3
          minLength: 0
          type: string
        serviceMode:
          description: "Specifies whether the tax calculation is handled Local, Remote,\
            \ or Automatic (default)"
          enum:
          - Automatic
          - Local
          - Remote
          type: string
        paymentDate:
          description: Indicates the date payment was applied to this document.  This
            is only for cash basis accounting.
          format: date-time
          type: string
        exchangeRate:
          description: Currency exchange rate from this transaction to the company
            base currency.
          format: double
          type: number
        exchangeRateEffectiveDate:
          description: Effective date of the exchange rate.
          format: date-time
          type: string
        posLaneCode:
          description: Sets the POS Lane Code sent by the User for this document.
          maxLength: 50
          minLength: 0
          type: string
        businessIdentificationNo:
          description: BusinessIdentificationNo
          maxLength: 25
          minLength: 0
          type: string
        isSellerImporterOfRecord:
          description: Specifies if the Transaction has the seller as IsSellerImporterOfRecord
          type: boolean
        description:
          description: Description
          maxLength: 2048
          minLength: 0
          type: string
        email:
          description: Email
          maxLength: 50
          minLength: 0
          type: string
      required:
      - code
      - companyCode
      - date
      type: object
    LineItemModel:
      description: Represents one line item in a transaction
      properties:
        number:
          description: Line number within this document
          maxLength: 50
          minLength: 0
          type: string
        quantity:
          description: Quantity of items in this line
          format: double
          type: number
        amount:
          description: Total amount for this line
          format: double
          type: number
        addresses:
          $ref: '#/components/schemas/LineItemModel_addresses'
        taxCode:
          description: Tax Code - System or Custom Tax Code.
          maxLength: 25
          minLength: 0
          type: string
        customerUsageType:
          description: Customer Usage Type - The client application customer or usage
            type.
          maxLength: 25
          minLength: 0
          type: string
        itemCode:
          description: Item Code (SKU)
          maxLength: 50
          minLength: 0
          type: string
        exemptionCode:
          description: Exemption number for this line
          type: string
        discounted:
          description: True if the document discount should be applied to this line
          type: boolean
        taxIncluded:
          description: Indicates if line has Tax Included; defaults to false
          type: boolean
        revenueAccount:
          description: Revenue Account
          maxLength: 50
          minLength: 0
          type: string
        ref1:
          description: Reference 1 - Client specific reference field
          maxLength: 250
          minLength: 0
          type: string
        ref2:
          description: Reference 2 - Client specific reference field
          maxLength: 250
          minLength: 0
          type: string
        description:
          description: Item description.  This is required for SST transactions if
            an unmapped ItemCode is used.
          maxLength: 2096
          minLength: 0
          type: string
        businessIdentificationNo:
          description: BusinessIdentificationNo
          maxLength: 25
          minLength: 0
          type: string
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
      required:
      - amount
      - quantity
      type: object
    TaxOverrideModel:
      description: Represents a tax override for a transaction
      properties:
        type:
          description: Identifies the type of tax override
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          - DeriveTaxable
          type: string
        taxAmount:
          description: "Indicates a total override of the calculated tax on the document.\
            \  AvaTax will distribute\r\n                the override across all the\
            \ lines."
          format: double
          type: number
        taxDate:
          description: The override tax date to use
          format: date-time
          type: string
        reason:
          description: This provides the reason for a tax override for audit purposes.  It
            is required for types 2-4.
          type: string
      type: object
    CommitTransactionModel:
      description: Commit this transaction as permanent
      properties:
        newTransactionCode:
          description: "If you wish to change the transaction code when committing\
            \ the transaction, specify the new transaction code here."
          type: string
      type: object
    CancelTransactionModel:
      description: A request to cancel a previously created transaction
      properties:
        code:
          description: Please specify the reason for cancelling this transaction
          enum:
          - Unspecified
          - PostFailed
          - DocDeleted
          - DocVoided
          - AdjustmentCancelled
          type: string
      type: object
    PostTransactionModel:
      description: Change the status of tax
      properties:
        verifyTransactionDate:
          description: "Transaction Date - The date on the invoice, purchase order,\
            \ etc."
          format: date-time
          type: string
        verifyTotalAmount:
          description: Total Amount - The total amount (not including tax) for the
            document.
          format: double
          type: number
        verifyTotalTax:
          description: Total Tax - The total tax for the document.
          format: double
          type: number
        verifyHashCode:
          description: The hash code for the document.
          format: int32
          type: integer
        commitTransaction:
          description: Allows committing immediately rather than requiring a subsequent
            call to CommitTax.
          type: boolean
        newTransactionCode:
          description: "If you wish to change the transaction code when committing\
            \ the transaction, specify the new transaction code here."
          type: string
      type: object
    FetchResult[UPCModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/UPCModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    FetchResult[UserModel]:
      description: Represents a fetch result
      properties:
        '@recordsetCount':
          description: "The number of rows returned by your query, prior to pagination."
          format: int32
          type: integer
        value:
          description: The paginated and filtered list of records matching the parameters
            you supplied.
          items:
            $ref: '#/components/schemas/UserModel'
          type: array
        '@nextLink':
          description: The link to the next page of results
          type: string
      type: object
    UserEntitlementModel:
      description: User Entitlement Model
      properties:
        permissions:
          description: Permissions
          items:
            type: string
          type: array
        company:
          description: Company
          type: string
        companies:
          description: Companies
          items:
            format: int32
            type: integer
          type: array
      type: object
    PingResultModel:
      description: Ping Result Model
      properties:
        version:
          description: Version number
          type: string
      type: object
    CheckServiceAuthorizedModel:
      description: Check Service Authorized Model
      properties:
        serviceTypeId:
          description: Service Type Id
          enum:
          - None
          - AvaTaxST
          - AvaTaxPro
          - AvaTaxGlobal
          - AutoAddress
          - AutoReturns
          - TaxSolver
          - AvaTaxCsp
          - Twe
          - Mrs
          - AvaCert
          - AuthorizationPartner
          - CertCapture
          - AvaUpc
          - AvaCUT
          type: string
        forDate:
          description: For Date
          format: date-time
          type: string
      required:
      - forDate
      - serviceTypeId
      type: object
    CreateTransactionModel_addresses:
      description: Default addresses for all lines in this document
      properties:
        Unknown:
          $ref: '#/components/schemas/AddressInfo'
        ShipFrom:
          $ref: '#/components/schemas/AddressInfo'
        ShipTo:
          $ref: '#/components/schemas/AddressInfo'
        PointOfOrderAcceptance:
          $ref: '#/components/schemas/AddressInfo'
        PointOfOrderOrigin:
          $ref: '#/components/schemas/AddressInfo'
        SingleLocation:
          $ref: '#/components/schemas/AddressInfo'
        Other:
          $ref: '#/components/schemas/AddressInfo'
      type: object
    LineItemModel_addresses:
      description: Specify any differences for addresses between this line and the
        rest of the document
      properties:
        Unknown:
          $ref: '#/components/schemas/AddressInfo'
        ShipFrom:
          $ref: '#/components/schemas/AddressInfo'
        ShipTo:
          $ref: '#/components/schemas/AddressInfo'
        PointOfOrderAcceptance:
          $ref: '#/components/schemas/AddressInfo'
        PointOfOrderOrigin:
          $ref: '#/components/schemas/AddressInfo'
        SingleLocation:
          $ref: '#/components/schemas/AddressInfo'
        Other:
          $ref: '#/components/schemas/AddressInfo'
      type: object
  securitySchemes:
    UserSecurity:
      description: Basic Username:Password HTTP authentication using Base64 encoding.
      scheme: basic
      type: http
    ApiKeySecurity:
      description: "Basic AccountId:PrivateLicenseKey authentication using Base64\
        \ encoding.  This is identical to Username/Password authentication, except\
        \ that you provide your AccountID as your username and your API key as your\
        \ password."
      in: header
      name: Authorization
      type: apiKey
    OauthSecurity:
      description: A bearer token provided by the Avalara Identity server.
      flows:
        authorizationCode:
          authorizationUrl: http://doesnotexist.com//connect/authorize
          scopes: {}
          tokenUrl: http://doesnotexist.com//connect/token
      type: oauth2
x-original-swagger-version: "2.0"
