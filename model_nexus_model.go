/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the NexusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NexusModel{}

// NexusModel Nexus Model
type NexusModel struct {
	// id
	Id *int32 `json:"id,omitempty"`
	// companyId
	CompanyId *int32 `json:"companyId,omitempty"`
	// state
	State string `json:"state"`
	// jurisTypeId
	JurisTypeId *string `json:"jurisTypeId,omitempty"`
	// jurisCode
	JurisCode string `json:"jurisCode"`
	// jurisName
	JurisName string `json:"jurisName"`
	// effectiveDate
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// endDate
	EndDate *time.Time `json:"endDate,omitempty"`
	// shortName
	ShortName *string `json:"shortName,omitempty"`
	// signatureCode
	SignatureCode *string `json:"signatureCode,omitempty"`
	// stateAssignedNo
	StateAssignedNo *string `json:"stateAssignedNo,omitempty"`
	// nexusTypeId
	NexusTypeId *string `json:"nexusTypeId,omitempty"`
	// country
	Country *string `json:"country,omitempty"`
	// sourcing
	Sourcing *string `json:"sourcing,omitempty"`
	// accountingMethodId
	AccountingMethodId *string `json:"accountingMethodId,omitempty"`
	// hasLocalNexus
	HasLocalNexus *bool `json:"hasLocalNexus,omitempty"`
	// localNexusTypeId
	LocalNexusTypeId *string `json:"localNexusTypeId,omitempty"`
	// hasPermanentEstablishment
	HasPermanentEstablishment *bool `json:"hasPermanentEstablishment,omitempty"`
	// taxId
	TaxId *string `json:"taxId,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewNexusModel instantiates a new NexusModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexusModel(state string, jurisCode string, jurisName string) *NexusModel {
	this := NexusModel{}
	this.State = state
	this.JurisCode = jurisCode
	this.JurisName = jurisName
	return &this
}

// NewNexusModelWithDefaults instantiates a new NexusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexusModelWithDefaults() *NexusModel {
	this := NexusModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NexusModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NexusModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NexusModel) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *NexusModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *NexusModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *NexusModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetState returns the State field value
func (o *NexusModel) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *NexusModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *NexusModel) SetState(v string) {
	o.State = v
}

// GetJurisTypeId returns the JurisTypeId field value if set, zero value otherwise.
func (o *NexusModel) GetJurisTypeId() string {
	if o == nil || IsNil(o.JurisTypeId) {
		var ret string
		return ret
	}
	return *o.JurisTypeId
}

// GetJurisTypeIdOk returns a tuple with the JurisTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetJurisTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.JurisTypeId) {
		return nil, false
	}
	return o.JurisTypeId, true
}

// HasJurisTypeId returns a boolean if a field has been set.
func (o *NexusModel) HasJurisTypeId() bool {
	if o != nil && !IsNil(o.JurisTypeId) {
		return true
	}

	return false
}

// SetJurisTypeId gets a reference to the given string and assigns it to the JurisTypeId field.
func (o *NexusModel) SetJurisTypeId(v string) {
	o.JurisTypeId = &v
}

// GetJurisCode returns the JurisCode field value
func (o *NexusModel) GetJurisCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JurisCode
}

// GetJurisCodeOk returns a tuple with the JurisCode field value
// and a boolean to check if the value has been set.
func (o *NexusModel) GetJurisCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JurisCode, true
}

// SetJurisCode sets field value
func (o *NexusModel) SetJurisCode(v string) {
	o.JurisCode = v
}

// GetJurisName returns the JurisName field value
func (o *NexusModel) GetJurisName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JurisName
}

// GetJurisNameOk returns a tuple with the JurisName field value
// and a boolean to check if the value has been set.
func (o *NexusModel) GetJurisNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JurisName, true
}

// SetJurisName sets field value
func (o *NexusModel) SetJurisName(v string) {
	o.JurisName = v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *NexusModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *NexusModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *NexusModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *NexusModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *NexusModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *NexusModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *NexusModel) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *NexusModel) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *NexusModel) SetShortName(v string) {
	o.ShortName = &v
}

// GetSignatureCode returns the SignatureCode field value if set, zero value otherwise.
func (o *NexusModel) GetSignatureCode() string {
	if o == nil || IsNil(o.SignatureCode) {
		var ret string
		return ret
	}
	return *o.SignatureCode
}

// GetSignatureCodeOk returns a tuple with the SignatureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetSignatureCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureCode) {
		return nil, false
	}
	return o.SignatureCode, true
}

// HasSignatureCode returns a boolean if a field has been set.
func (o *NexusModel) HasSignatureCode() bool {
	if o != nil && !IsNil(o.SignatureCode) {
		return true
	}

	return false
}

// SetSignatureCode gets a reference to the given string and assigns it to the SignatureCode field.
func (o *NexusModel) SetSignatureCode(v string) {
	o.SignatureCode = &v
}

// GetStateAssignedNo returns the StateAssignedNo field value if set, zero value otherwise.
func (o *NexusModel) GetStateAssignedNo() string {
	if o == nil || IsNil(o.StateAssignedNo) {
		var ret string
		return ret
	}
	return *o.StateAssignedNo
}

// GetStateAssignedNoOk returns a tuple with the StateAssignedNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetStateAssignedNoOk() (*string, bool) {
	if o == nil || IsNil(o.StateAssignedNo) {
		return nil, false
	}
	return o.StateAssignedNo, true
}

// HasStateAssignedNo returns a boolean if a field has been set.
func (o *NexusModel) HasStateAssignedNo() bool {
	if o != nil && !IsNil(o.StateAssignedNo) {
		return true
	}

	return false
}

// SetStateAssignedNo gets a reference to the given string and assigns it to the StateAssignedNo field.
func (o *NexusModel) SetStateAssignedNo(v string) {
	o.StateAssignedNo = &v
}

// GetNexusTypeId returns the NexusTypeId field value if set, zero value otherwise.
func (o *NexusModel) GetNexusTypeId() string {
	if o == nil || IsNil(o.NexusTypeId) {
		var ret string
		return ret
	}
	return *o.NexusTypeId
}

// GetNexusTypeIdOk returns a tuple with the NexusTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetNexusTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NexusTypeId) {
		return nil, false
	}
	return o.NexusTypeId, true
}

// HasNexusTypeId returns a boolean if a field has been set.
func (o *NexusModel) HasNexusTypeId() bool {
	if o != nil && !IsNil(o.NexusTypeId) {
		return true
	}

	return false
}

// SetNexusTypeId gets a reference to the given string and assigns it to the NexusTypeId field.
func (o *NexusModel) SetNexusTypeId(v string) {
	o.NexusTypeId = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *NexusModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *NexusModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *NexusModel) SetCountry(v string) {
	o.Country = &v
}

// GetSourcing returns the Sourcing field value if set, zero value otherwise.
func (o *NexusModel) GetSourcing() string {
	if o == nil || IsNil(o.Sourcing) {
		var ret string
		return ret
	}
	return *o.Sourcing
}

// GetSourcingOk returns a tuple with the Sourcing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetSourcingOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcing) {
		return nil, false
	}
	return o.Sourcing, true
}

// HasSourcing returns a boolean if a field has been set.
func (o *NexusModel) HasSourcing() bool {
	if o != nil && !IsNil(o.Sourcing) {
		return true
	}

	return false
}

// SetSourcing gets a reference to the given string and assigns it to the Sourcing field.
func (o *NexusModel) SetSourcing(v string) {
	o.Sourcing = &v
}

// GetAccountingMethodId returns the AccountingMethodId field value if set, zero value otherwise.
func (o *NexusModel) GetAccountingMethodId() string {
	if o == nil || IsNil(o.AccountingMethodId) {
		var ret string
		return ret
	}
	return *o.AccountingMethodId
}

// GetAccountingMethodIdOk returns a tuple with the AccountingMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetAccountingMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountingMethodId) {
		return nil, false
	}
	return o.AccountingMethodId, true
}

// HasAccountingMethodId returns a boolean if a field has been set.
func (o *NexusModel) HasAccountingMethodId() bool {
	if o != nil && !IsNil(o.AccountingMethodId) {
		return true
	}

	return false
}

// SetAccountingMethodId gets a reference to the given string and assigns it to the AccountingMethodId field.
func (o *NexusModel) SetAccountingMethodId(v string) {
	o.AccountingMethodId = &v
}

// GetHasLocalNexus returns the HasLocalNexus field value if set, zero value otherwise.
func (o *NexusModel) GetHasLocalNexus() bool {
	if o == nil || IsNil(o.HasLocalNexus) {
		var ret bool
		return ret
	}
	return *o.HasLocalNexus
}

// GetHasLocalNexusOk returns a tuple with the HasLocalNexus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetHasLocalNexusOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLocalNexus) {
		return nil, false
	}
	return o.HasLocalNexus, true
}

// HasHasLocalNexus returns a boolean if a field has been set.
func (o *NexusModel) HasHasLocalNexus() bool {
	if o != nil && !IsNil(o.HasLocalNexus) {
		return true
	}

	return false
}

// SetHasLocalNexus gets a reference to the given bool and assigns it to the HasLocalNexus field.
func (o *NexusModel) SetHasLocalNexus(v bool) {
	o.HasLocalNexus = &v
}

// GetLocalNexusTypeId returns the LocalNexusTypeId field value if set, zero value otherwise.
func (o *NexusModel) GetLocalNexusTypeId() string {
	if o == nil || IsNil(o.LocalNexusTypeId) {
		var ret string
		return ret
	}
	return *o.LocalNexusTypeId
}

// GetLocalNexusTypeIdOk returns a tuple with the LocalNexusTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetLocalNexusTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalNexusTypeId) {
		return nil, false
	}
	return o.LocalNexusTypeId, true
}

// HasLocalNexusTypeId returns a boolean if a field has been set.
func (o *NexusModel) HasLocalNexusTypeId() bool {
	if o != nil && !IsNil(o.LocalNexusTypeId) {
		return true
	}

	return false
}

// SetLocalNexusTypeId gets a reference to the given string and assigns it to the LocalNexusTypeId field.
func (o *NexusModel) SetLocalNexusTypeId(v string) {
	o.LocalNexusTypeId = &v
}

// GetHasPermanentEstablishment returns the HasPermanentEstablishment field value if set, zero value otherwise.
func (o *NexusModel) GetHasPermanentEstablishment() bool {
	if o == nil || IsNil(o.HasPermanentEstablishment) {
		var ret bool
		return ret
	}
	return *o.HasPermanentEstablishment
}

// GetHasPermanentEstablishmentOk returns a tuple with the HasPermanentEstablishment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetHasPermanentEstablishmentOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPermanentEstablishment) {
		return nil, false
	}
	return o.HasPermanentEstablishment, true
}

// HasHasPermanentEstablishment returns a boolean if a field has been set.
func (o *NexusModel) HasHasPermanentEstablishment() bool {
	if o != nil && !IsNil(o.HasPermanentEstablishment) {
		return true
	}

	return false
}

// SetHasPermanentEstablishment gets a reference to the given bool and assigns it to the HasPermanentEstablishment field.
func (o *NexusModel) SetHasPermanentEstablishment(v bool) {
	o.HasPermanentEstablishment = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *NexusModel) GetTaxId() string {
	if o == nil || IsNil(o.TaxId) {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxId) {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *NexusModel) HasTaxId() bool {
	if o != nil && !IsNil(o.TaxId) {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *NexusModel) SetTaxId(v string) {
	o.TaxId = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *NexusModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *NexusModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *NexusModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *NexusModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *NexusModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *NexusModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *NexusModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *NexusModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *NexusModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *NexusModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *NexusModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *NexusModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o NexusModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NexusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	toSerialize["state"] = o.State
	if !IsNil(o.JurisTypeId) {
		toSerialize["jurisTypeId"] = o.JurisTypeId
	}
	toSerialize["jurisCode"] = o.JurisCode
	toSerialize["jurisName"] = o.JurisName
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.SignatureCode) {
		toSerialize["signatureCode"] = o.SignatureCode
	}
	if !IsNil(o.StateAssignedNo) {
		toSerialize["stateAssignedNo"] = o.StateAssignedNo
	}
	if !IsNil(o.NexusTypeId) {
		toSerialize["nexusTypeId"] = o.NexusTypeId
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Sourcing) {
		toSerialize["sourcing"] = o.Sourcing
	}
	if !IsNil(o.AccountingMethodId) {
		toSerialize["accountingMethodId"] = o.AccountingMethodId
	}
	if !IsNil(o.HasLocalNexus) {
		toSerialize["hasLocalNexus"] = o.HasLocalNexus
	}
	if !IsNil(o.LocalNexusTypeId) {
		toSerialize["localNexusTypeId"] = o.LocalNexusTypeId
	}
	if !IsNil(o.HasPermanentEstablishment) {
		toSerialize["hasPermanentEstablishment"] = o.HasPermanentEstablishment
	}
	if !IsNil(o.TaxId) {
		toSerialize["taxId"] = o.TaxId
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableNexusModel struct {
	value *NexusModel
	isSet bool
}

func (v NullableNexusModel) Get() *NexusModel {
	return v.value
}

func (v *NullableNexusModel) Set(val *NexusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNexusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNexusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexusModel(val *NexusModel) *NullableNexusModel {
	return &NullableNexusModel{value: val, isSet: true}
}

func (v NullableNexusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


