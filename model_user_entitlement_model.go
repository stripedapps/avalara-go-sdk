/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserEntitlementModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserEntitlementModel{}

// UserEntitlementModel User Entitlement Model
type UserEntitlementModel struct {
	// Permissions
	Permissions []string `json:"permissions,omitempty"`
	// Company
	Company *string `json:"company,omitempty"`
	// Companies
	Companies []int32 `json:"companies,omitempty"`
}

// NewUserEntitlementModel instantiates a new UserEntitlementModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserEntitlementModel() *UserEntitlementModel {
	this := UserEntitlementModel{}
	return &this
}

// NewUserEntitlementModelWithDefaults instantiates a new UserEntitlementModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserEntitlementModelWithDefaults() *UserEntitlementModel {
	this := UserEntitlementModel{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UserEntitlementModel) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEntitlementModel) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UserEntitlementModel) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UserEntitlementModel) SetPermissions(v []string) {
	o.Permissions = v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *UserEntitlementModel) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEntitlementModel) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *UserEntitlementModel) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *UserEntitlementModel) SetCompany(v string) {
	o.Company = &v
}

// GetCompanies returns the Companies field value if set, zero value otherwise.
func (o *UserEntitlementModel) GetCompanies() []int32 {
	if o == nil || IsNil(o.Companies) {
		var ret []int32
		return ret
	}
	return o.Companies
}

// GetCompaniesOk returns a tuple with the Companies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEntitlementModel) GetCompaniesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Companies) {
		return nil, false
	}
	return o.Companies, true
}

// HasCompanies returns a boolean if a field has been set.
func (o *UserEntitlementModel) HasCompanies() bool {
	if o != nil && !IsNil(o.Companies) {
		return true
	}

	return false
}

// SetCompanies gets a reference to the given []int32 and assigns it to the Companies field.
func (o *UserEntitlementModel) SetCompanies(v []int32) {
	o.Companies = v
}

func (o UserEntitlementModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserEntitlementModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Companies) {
		toSerialize["companies"] = o.Companies
	}
	return toSerialize, nil
}

type NullableUserEntitlementModel struct {
	value *UserEntitlementModel
	isSet bool
}

func (v NullableUserEntitlementModel) Get() *UserEntitlementModel {
	return v.value
}

func (v *NullableUserEntitlementModel) Set(val *UserEntitlementModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEntitlementModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEntitlementModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEntitlementModel(val *UserEntitlementModel) *NullableUserEntitlementModel {
	return &NullableUserEntitlementModel{value: val, isSet: true}
}

func (v NullableUserEntitlementModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEntitlementModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


