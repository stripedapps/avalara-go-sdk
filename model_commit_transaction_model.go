/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CommitTransactionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommitTransactionModel{}

// CommitTransactionModel Commit this transaction as permanent
type CommitTransactionModel struct {
	// If you wish to change the transaction code when committing the transaction, specify the new transaction code here.
	NewTransactionCode *string `json:"newTransactionCode,omitempty"`
}

// NewCommitTransactionModel instantiates a new CommitTransactionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommitTransactionModel() *CommitTransactionModel {
	this := CommitTransactionModel{}
	return &this
}

// NewCommitTransactionModelWithDefaults instantiates a new CommitTransactionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommitTransactionModelWithDefaults() *CommitTransactionModel {
	this := CommitTransactionModel{}
	return &this
}

// GetNewTransactionCode returns the NewTransactionCode field value if set, zero value otherwise.
func (o *CommitTransactionModel) GetNewTransactionCode() string {
	if o == nil || IsNil(o.NewTransactionCode) {
		var ret string
		return ret
	}
	return *o.NewTransactionCode
}

// GetNewTransactionCodeOk returns a tuple with the NewTransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommitTransactionModel) GetNewTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.NewTransactionCode) {
		return nil, false
	}
	return o.NewTransactionCode, true
}

// HasNewTransactionCode returns a boolean if a field has been set.
func (o *CommitTransactionModel) HasNewTransactionCode() bool {
	if o != nil && !IsNil(o.NewTransactionCode) {
		return true
	}

	return false
}

// SetNewTransactionCode gets a reference to the given string and assigns it to the NewTransactionCode field.
func (o *CommitTransactionModel) SetNewTransactionCode(v string) {
	o.NewTransactionCode = &v
}

func (o CommitTransactionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommitTransactionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewTransactionCode) {
		toSerialize["newTransactionCode"] = o.NewTransactionCode
	}
	return toSerialize, nil
}

type NullableCommitTransactionModel struct {
	value *CommitTransactionModel
	isSet bool
}

func (v NullableCommitTransactionModel) Get() *CommitTransactionModel {
	return v.value
}

func (v *NullableCommitTransactionModel) Set(val *CommitTransactionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCommitTransactionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCommitTransactionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommitTransactionModel(val *CommitTransactionModel) *NullableCommitTransactionModel {
	return &NullableCommitTransactionModel{value: val, isSet: true}
}

func (v NullableCommitTransactionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommitTransactionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


