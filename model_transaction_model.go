/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TransactionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionModel{}

// TransactionModel A single transaction - for example, a sales invoice or purchase order
type TransactionModel struct {
	// DocumentId
	Id *int64 `json:"id,omitempty"`
	// DocumentCode
	Code *string `json:"code,omitempty"`
	// DocumentDate
	Date *time.Time `json:"date,omitempty"`
	// TaxDate
	TaxDate *time.Time `json:"taxDate,omitempty"`
	// PaymentDate
	PaymentDate *time.Time `json:"paymentDate,omitempty"`
	// DocumentStatusId
	Status *string `json:"status,omitempty"`
	// DocumentTypeId
	Type *string `json:"type,omitempty"`
	// CompanyId
	CompanyId *int32 `json:"companyId,omitempty"`
	// BatchCode
	BatchCode *string `json:"batchCode,omitempty"`
	// CurrencyCode
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// CustomerUsageType
	CustomerUsageType *string `json:"customerUsageType,omitempty"`
	// CustomerVendorCode
	CustomerVendorCode *string `json:"customerVendorCode,omitempty"`
	// ExemptNo
	ExemptNo *string `json:"exemptNo,omitempty"`
	// IsReconciled
	Reconciled *bool `json:"reconciled,omitempty"`
	// LocationCode
	LocationCode *string `json:"locationCode,omitempty"`
	// PurchaseOrderNo
	PurchaseOrderNo *string `json:"purchaseOrderNo,omitempty"`
	// ReferenceCode
	ReferenceCode *string `json:"referenceCode,omitempty"`
	// SalespersonCode
	SalespersonCode *string `json:"salespersonCode,omitempty"`
	// TaxOverrideTypeId
	TaxOverrideType *string `json:"taxOverrideType,omitempty"`
	// TaxOverrideAmount
	TaxOverrideAmount *float64 `json:"taxOverrideAmount,omitempty"`
	// TaxOverrideReason
	TaxOverrideReason *string `json:"taxOverrideReason,omitempty"`
	// TotalAmount
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// TotalExempt
	TotalExempt *float64 `json:"totalExempt,omitempty"`
	// TotalTax
	TotalTax *float64 `json:"totalTax,omitempty"`
	// TotalTaxable
	TotalTaxable *float64 `json:"totalTaxable,omitempty"`
	// TotalTaxCalculated
	TotalTaxCalculated *float64 `json:"totalTaxCalculated,omitempty"`
	// AdjustmentReasonId
	AdjustmentReason *string `json:"adjustmentReason,omitempty"`
	// AdjustmentDescription
	AdjustmentDescription *string `json:"adjustmentDescription,omitempty"`
	// IsLocked
	Locked *bool `json:"locked,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// Country
	Country *string `json:"country,omitempty"`
	// Version
	Version *int32 `json:"version,omitempty"`
	// SoftwareVersion
	SoftwareVersion *string `json:"softwareVersion,omitempty"`
	// OriginAddressId
	OriginAddressId *int64 `json:"originAddressId,omitempty"`
	// DestinationAddressId
	DestinationAddressId *int64 `json:"destinationAddressId,omitempty"`
	// ExchangeRateEffDate
	ExchangeRateEffectiveDate *time.Time `json:"exchangeRateEffectiveDate,omitempty"`
	// ExchangeRate
	ExchangeRate *float64 `json:"exchangeRate,omitempty"`
	// IsSellerImporterOfRecord
	IsSellerImporterOfRecord *bool `json:"isSellerImporterOfRecord,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Email
	Email *string `json:"email,omitempty"`
	// BRBuyerType
	BrBuyerType *string `json:"brBuyerType,omitempty"`
	// BRBuyer_IsExemptOrCannotWH_IRRF
	BrBuyerIsExemptOrCannotWHIRRF *bool `json:"brBuyer_IsExemptOrCannotWH_IRRF,omitempty"`
	// BRBuyer_IsExemptOrCannotWH_PISRF
	BrBuyerIsExemptOrCannotWHPISRF *bool `json:"brBuyer_IsExemptOrCannotWH_PISRF,omitempty"`
	// BRBuyer_IsExemptOrCannotWH_COFINSRF
	BrBuyerIsExemptOrCannotWHCOFINSRF *bool `json:"brBuyer_IsExemptOrCannotWH_COFINSRF,omitempty"`
	// BRBuyer_IsExemptOrCannotWH_CSLLRF
	BrBuyerIsExemptOrCannotWHCSLLRF *bool `json:"brBuyer_IsExemptOrCannotWH_CSLLRF,omitempty"`
	// BRBuyer_IsExempt_PIS
	BrBuyerIsExemptPIS *bool `json:"brBuyer_IsExempt_PIS,omitempty"`
	// BRBuyer_IsExempt_COFINS
	BrBuyerIsExemptCOFINS *bool `json:"brBuyer_IsExempt_COFINS,omitempty"`
	// BRBuyer_IsExempt_CSLL
	BrBuyerIsExemptCSLL *bool `json:"brBuyer_IsExempt_CSLL,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
	// A list of lines in this transaction
	Lines []TransactionLineModel `json:"lines,omitempty"`
	// A list of addresses used in this transaction
	Addresses []TransactionAddressModel `json:"addresses,omitempty"`
}

// NewTransactionModel instantiates a new TransactionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionModel() *TransactionModel {
	this := TransactionModel{}
	return &this
}

// NewTransactionModelWithDefaults instantiates a new TransactionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionModelWithDefaults() *TransactionModel {
	this := TransactionModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TransactionModel) SetId(v int64) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TransactionModel) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TransactionModel) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TransactionModel) SetCode(v string) {
	o.Code = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *TransactionModel) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *TransactionModel) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *TransactionModel) SetDate(v time.Time) {
	o.Date = &v
}

// GetTaxDate returns the TaxDate field value if set, zero value otherwise.
func (o *TransactionModel) GetTaxDate() time.Time {
	if o == nil || IsNil(o.TaxDate) {
		var ret time.Time
		return ret
	}
	return *o.TaxDate
}

// GetTaxDateOk returns a tuple with the TaxDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTaxDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TaxDate) {
		return nil, false
	}
	return o.TaxDate, true
}

// HasTaxDate returns a boolean if a field has been set.
func (o *TransactionModel) HasTaxDate() bool {
	if o != nil && !IsNil(o.TaxDate) {
		return true
	}

	return false
}

// SetTaxDate gets a reference to the given time.Time and assigns it to the TaxDate field.
func (o *TransactionModel) SetTaxDate(v time.Time) {
	o.TaxDate = &v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise.
func (o *TransactionModel) GetPaymentDate() time.Time {
	if o == nil || IsNil(o.PaymentDate) {
		var ret time.Time
		return ret
	}
	return *o.PaymentDate
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetPaymentDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PaymentDate) {
		return nil, false
	}
	return o.PaymentDate, true
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *TransactionModel) HasPaymentDate() bool {
	if o != nil && !IsNil(o.PaymentDate) {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given time.Time and assigns it to the PaymentDate field.
func (o *TransactionModel) SetPaymentDate(v time.Time) {
	o.PaymentDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TransactionModel) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TransactionModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TransactionModel) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransactionModel) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransactionModel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransactionModel) SetType(v string) {
	o.Type = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *TransactionModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *TransactionModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *TransactionModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetBatchCode returns the BatchCode field value if set, zero value otherwise.
func (o *TransactionModel) GetBatchCode() string {
	if o == nil || IsNil(o.BatchCode) {
		var ret string
		return ret
	}
	return *o.BatchCode
}

// GetBatchCodeOk returns a tuple with the BatchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBatchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BatchCode) {
		return nil, false
	}
	return o.BatchCode, true
}

// HasBatchCode returns a boolean if a field has been set.
func (o *TransactionModel) HasBatchCode() bool {
	if o != nil && !IsNil(o.BatchCode) {
		return true
	}

	return false
}

// SetBatchCode gets a reference to the given string and assigns it to the BatchCode field.
func (o *TransactionModel) SetBatchCode(v string) {
	o.BatchCode = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *TransactionModel) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *TransactionModel) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *TransactionModel) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCustomerUsageType returns the CustomerUsageType field value if set, zero value otherwise.
func (o *TransactionModel) GetCustomerUsageType() string {
	if o == nil || IsNil(o.CustomerUsageType) {
		var ret string
		return ret
	}
	return *o.CustomerUsageType
}

// GetCustomerUsageTypeOk returns a tuple with the CustomerUsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCustomerUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerUsageType) {
		return nil, false
	}
	return o.CustomerUsageType, true
}

// HasCustomerUsageType returns a boolean if a field has been set.
func (o *TransactionModel) HasCustomerUsageType() bool {
	if o != nil && !IsNil(o.CustomerUsageType) {
		return true
	}

	return false
}

// SetCustomerUsageType gets a reference to the given string and assigns it to the CustomerUsageType field.
func (o *TransactionModel) SetCustomerUsageType(v string) {
	o.CustomerUsageType = &v
}

// GetCustomerVendorCode returns the CustomerVendorCode field value if set, zero value otherwise.
func (o *TransactionModel) GetCustomerVendorCode() string {
	if o == nil || IsNil(o.CustomerVendorCode) {
		var ret string
		return ret
	}
	return *o.CustomerVendorCode
}

// GetCustomerVendorCodeOk returns a tuple with the CustomerVendorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCustomerVendorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerVendorCode) {
		return nil, false
	}
	return o.CustomerVendorCode, true
}

// HasCustomerVendorCode returns a boolean if a field has been set.
func (o *TransactionModel) HasCustomerVendorCode() bool {
	if o != nil && !IsNil(o.CustomerVendorCode) {
		return true
	}

	return false
}

// SetCustomerVendorCode gets a reference to the given string and assigns it to the CustomerVendorCode field.
func (o *TransactionModel) SetCustomerVendorCode(v string) {
	o.CustomerVendorCode = &v
}

// GetExemptNo returns the ExemptNo field value if set, zero value otherwise.
func (o *TransactionModel) GetExemptNo() string {
	if o == nil || IsNil(o.ExemptNo) {
		var ret string
		return ret
	}
	return *o.ExemptNo
}

// GetExemptNoOk returns a tuple with the ExemptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetExemptNoOk() (*string, bool) {
	if o == nil || IsNil(o.ExemptNo) {
		return nil, false
	}
	return o.ExemptNo, true
}

// HasExemptNo returns a boolean if a field has been set.
func (o *TransactionModel) HasExemptNo() bool {
	if o != nil && !IsNil(o.ExemptNo) {
		return true
	}

	return false
}

// SetExemptNo gets a reference to the given string and assigns it to the ExemptNo field.
func (o *TransactionModel) SetExemptNo(v string) {
	o.ExemptNo = &v
}

// GetReconciled returns the Reconciled field value if set, zero value otherwise.
func (o *TransactionModel) GetReconciled() bool {
	if o == nil || IsNil(o.Reconciled) {
		var ret bool
		return ret
	}
	return *o.Reconciled
}

// GetReconciledOk returns a tuple with the Reconciled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetReconciledOk() (*bool, bool) {
	if o == nil || IsNil(o.Reconciled) {
		return nil, false
	}
	return o.Reconciled, true
}

// HasReconciled returns a boolean if a field has been set.
func (o *TransactionModel) HasReconciled() bool {
	if o != nil && !IsNil(o.Reconciled) {
		return true
	}

	return false
}

// SetReconciled gets a reference to the given bool and assigns it to the Reconciled field.
func (o *TransactionModel) SetReconciled(v bool) {
	o.Reconciled = &v
}

// GetLocationCode returns the LocationCode field value if set, zero value otherwise.
func (o *TransactionModel) GetLocationCode() string {
	if o == nil || IsNil(o.LocationCode) {
		var ret string
		return ret
	}
	return *o.LocationCode
}

// GetLocationCodeOk returns a tuple with the LocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationCode) {
		return nil, false
	}
	return o.LocationCode, true
}

// HasLocationCode returns a boolean if a field has been set.
func (o *TransactionModel) HasLocationCode() bool {
	if o != nil && !IsNil(o.LocationCode) {
		return true
	}

	return false
}

// SetLocationCode gets a reference to the given string and assigns it to the LocationCode field.
func (o *TransactionModel) SetLocationCode(v string) {
	o.LocationCode = &v
}

// GetPurchaseOrderNo returns the PurchaseOrderNo field value if set, zero value otherwise.
func (o *TransactionModel) GetPurchaseOrderNo() string {
	if o == nil || IsNil(o.PurchaseOrderNo) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNo
}

// GetPurchaseOrderNoOk returns a tuple with the PurchaseOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetPurchaseOrderNoOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNo) {
		return nil, false
	}
	return o.PurchaseOrderNo, true
}

// HasPurchaseOrderNo returns a boolean if a field has been set.
func (o *TransactionModel) HasPurchaseOrderNo() bool {
	if o != nil && !IsNil(o.PurchaseOrderNo) {
		return true
	}

	return false
}

// SetPurchaseOrderNo gets a reference to the given string and assigns it to the PurchaseOrderNo field.
func (o *TransactionModel) SetPurchaseOrderNo(v string) {
	o.PurchaseOrderNo = &v
}

// GetReferenceCode returns the ReferenceCode field value if set, zero value otherwise.
func (o *TransactionModel) GetReferenceCode() string {
	if o == nil || IsNil(o.ReferenceCode) {
		var ret string
		return ret
	}
	return *o.ReferenceCode
}

// GetReferenceCodeOk returns a tuple with the ReferenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetReferenceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceCode) {
		return nil, false
	}
	return o.ReferenceCode, true
}

// HasReferenceCode returns a boolean if a field has been set.
func (o *TransactionModel) HasReferenceCode() bool {
	if o != nil && !IsNil(o.ReferenceCode) {
		return true
	}

	return false
}

// SetReferenceCode gets a reference to the given string and assigns it to the ReferenceCode field.
func (o *TransactionModel) SetReferenceCode(v string) {
	o.ReferenceCode = &v
}

// GetSalespersonCode returns the SalespersonCode field value if set, zero value otherwise.
func (o *TransactionModel) GetSalespersonCode() string {
	if o == nil || IsNil(o.SalespersonCode) {
		var ret string
		return ret
	}
	return *o.SalespersonCode
}

// GetSalespersonCodeOk returns a tuple with the SalespersonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetSalespersonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SalespersonCode) {
		return nil, false
	}
	return o.SalespersonCode, true
}

// HasSalespersonCode returns a boolean if a field has been set.
func (o *TransactionModel) HasSalespersonCode() bool {
	if o != nil && !IsNil(o.SalespersonCode) {
		return true
	}

	return false
}

// SetSalespersonCode gets a reference to the given string and assigns it to the SalespersonCode field.
func (o *TransactionModel) SetSalespersonCode(v string) {
	o.SalespersonCode = &v
}

// GetTaxOverrideType returns the TaxOverrideType field value if set, zero value otherwise.
func (o *TransactionModel) GetTaxOverrideType() string {
	if o == nil || IsNil(o.TaxOverrideType) {
		var ret string
		return ret
	}
	return *o.TaxOverrideType
}

// GetTaxOverrideTypeOk returns a tuple with the TaxOverrideType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTaxOverrideTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxOverrideType) {
		return nil, false
	}
	return o.TaxOverrideType, true
}

// HasTaxOverrideType returns a boolean if a field has been set.
func (o *TransactionModel) HasTaxOverrideType() bool {
	if o != nil && !IsNil(o.TaxOverrideType) {
		return true
	}

	return false
}

// SetTaxOverrideType gets a reference to the given string and assigns it to the TaxOverrideType field.
func (o *TransactionModel) SetTaxOverrideType(v string) {
	o.TaxOverrideType = &v
}

// GetTaxOverrideAmount returns the TaxOverrideAmount field value if set, zero value otherwise.
func (o *TransactionModel) GetTaxOverrideAmount() float64 {
	if o == nil || IsNil(o.TaxOverrideAmount) {
		var ret float64
		return ret
	}
	return *o.TaxOverrideAmount
}

// GetTaxOverrideAmountOk returns a tuple with the TaxOverrideAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTaxOverrideAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxOverrideAmount) {
		return nil, false
	}
	return o.TaxOverrideAmount, true
}

// HasTaxOverrideAmount returns a boolean if a field has been set.
func (o *TransactionModel) HasTaxOverrideAmount() bool {
	if o != nil && !IsNil(o.TaxOverrideAmount) {
		return true
	}

	return false
}

// SetTaxOverrideAmount gets a reference to the given float64 and assigns it to the TaxOverrideAmount field.
func (o *TransactionModel) SetTaxOverrideAmount(v float64) {
	o.TaxOverrideAmount = &v
}

// GetTaxOverrideReason returns the TaxOverrideReason field value if set, zero value otherwise.
func (o *TransactionModel) GetTaxOverrideReason() string {
	if o == nil || IsNil(o.TaxOverrideReason) {
		var ret string
		return ret
	}
	return *o.TaxOverrideReason
}

// GetTaxOverrideReasonOk returns a tuple with the TaxOverrideReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTaxOverrideReasonOk() (*string, bool) {
	if o == nil || IsNil(o.TaxOverrideReason) {
		return nil, false
	}
	return o.TaxOverrideReason, true
}

// HasTaxOverrideReason returns a boolean if a field has been set.
func (o *TransactionModel) HasTaxOverrideReason() bool {
	if o != nil && !IsNil(o.TaxOverrideReason) {
		return true
	}

	return false
}

// SetTaxOverrideReason gets a reference to the given string and assigns it to the TaxOverrideReason field.
func (o *TransactionModel) SetTaxOverrideReason(v string) {
	o.TaxOverrideReason = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *TransactionModel) GetTotalAmount() float64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret float64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *TransactionModel) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float64 and assigns it to the TotalAmount field.
func (o *TransactionModel) SetTotalAmount(v float64) {
	o.TotalAmount = &v
}

// GetTotalExempt returns the TotalExempt field value if set, zero value otherwise.
func (o *TransactionModel) GetTotalExempt() float64 {
	if o == nil || IsNil(o.TotalExempt) {
		var ret float64
		return ret
	}
	return *o.TotalExempt
}

// GetTotalExemptOk returns a tuple with the TotalExempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTotalExemptOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalExempt) {
		return nil, false
	}
	return o.TotalExempt, true
}

// HasTotalExempt returns a boolean if a field has been set.
func (o *TransactionModel) HasTotalExempt() bool {
	if o != nil && !IsNil(o.TotalExempt) {
		return true
	}

	return false
}

// SetTotalExempt gets a reference to the given float64 and assigns it to the TotalExempt field.
func (o *TransactionModel) SetTotalExempt(v float64) {
	o.TotalExempt = &v
}

// GetTotalTax returns the TotalTax field value if set, zero value otherwise.
func (o *TransactionModel) GetTotalTax() float64 {
	if o == nil || IsNil(o.TotalTax) {
		var ret float64
		return ret
	}
	return *o.TotalTax
}

// GetTotalTaxOk returns a tuple with the TotalTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTotalTaxOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTax) {
		return nil, false
	}
	return o.TotalTax, true
}

// HasTotalTax returns a boolean if a field has been set.
func (o *TransactionModel) HasTotalTax() bool {
	if o != nil && !IsNil(o.TotalTax) {
		return true
	}

	return false
}

// SetTotalTax gets a reference to the given float64 and assigns it to the TotalTax field.
func (o *TransactionModel) SetTotalTax(v float64) {
	o.TotalTax = &v
}

// GetTotalTaxable returns the TotalTaxable field value if set, zero value otherwise.
func (o *TransactionModel) GetTotalTaxable() float64 {
	if o == nil || IsNil(o.TotalTaxable) {
		var ret float64
		return ret
	}
	return *o.TotalTaxable
}

// GetTotalTaxableOk returns a tuple with the TotalTaxable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTotalTaxableOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxable) {
		return nil, false
	}
	return o.TotalTaxable, true
}

// HasTotalTaxable returns a boolean if a field has been set.
func (o *TransactionModel) HasTotalTaxable() bool {
	if o != nil && !IsNil(o.TotalTaxable) {
		return true
	}

	return false
}

// SetTotalTaxable gets a reference to the given float64 and assigns it to the TotalTaxable field.
func (o *TransactionModel) SetTotalTaxable(v float64) {
	o.TotalTaxable = &v
}

// GetTotalTaxCalculated returns the TotalTaxCalculated field value if set, zero value otherwise.
func (o *TransactionModel) GetTotalTaxCalculated() float64 {
	if o == nil || IsNil(o.TotalTaxCalculated) {
		var ret float64
		return ret
	}
	return *o.TotalTaxCalculated
}

// GetTotalTaxCalculatedOk returns a tuple with the TotalTaxCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetTotalTaxCalculatedOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxCalculated) {
		return nil, false
	}
	return o.TotalTaxCalculated, true
}

// HasTotalTaxCalculated returns a boolean if a field has been set.
func (o *TransactionModel) HasTotalTaxCalculated() bool {
	if o != nil && !IsNil(o.TotalTaxCalculated) {
		return true
	}

	return false
}

// SetTotalTaxCalculated gets a reference to the given float64 and assigns it to the TotalTaxCalculated field.
func (o *TransactionModel) SetTotalTaxCalculated(v float64) {
	o.TotalTaxCalculated = &v
}

// GetAdjustmentReason returns the AdjustmentReason field value if set, zero value otherwise.
func (o *TransactionModel) GetAdjustmentReason() string {
	if o == nil || IsNil(o.AdjustmentReason) {
		var ret string
		return ret
	}
	return *o.AdjustmentReason
}

// GetAdjustmentReasonOk returns a tuple with the AdjustmentReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetAdjustmentReasonOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustmentReason) {
		return nil, false
	}
	return o.AdjustmentReason, true
}

// HasAdjustmentReason returns a boolean if a field has been set.
func (o *TransactionModel) HasAdjustmentReason() bool {
	if o != nil && !IsNil(o.AdjustmentReason) {
		return true
	}

	return false
}

// SetAdjustmentReason gets a reference to the given string and assigns it to the AdjustmentReason field.
func (o *TransactionModel) SetAdjustmentReason(v string) {
	o.AdjustmentReason = &v
}

// GetAdjustmentDescription returns the AdjustmentDescription field value if set, zero value otherwise.
func (o *TransactionModel) GetAdjustmentDescription() string {
	if o == nil || IsNil(o.AdjustmentDescription) {
		var ret string
		return ret
	}
	return *o.AdjustmentDescription
}

// GetAdjustmentDescriptionOk returns a tuple with the AdjustmentDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetAdjustmentDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustmentDescription) {
		return nil, false
	}
	return o.AdjustmentDescription, true
}

// HasAdjustmentDescription returns a boolean if a field has been set.
func (o *TransactionModel) HasAdjustmentDescription() bool {
	if o != nil && !IsNil(o.AdjustmentDescription) {
		return true
	}

	return false
}

// SetAdjustmentDescription gets a reference to the given string and assigns it to the AdjustmentDescription field.
func (o *TransactionModel) SetAdjustmentDescription(v string) {
	o.AdjustmentDescription = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *TransactionModel) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *TransactionModel) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *TransactionModel) SetLocked(v bool) {
	o.Locked = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TransactionModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TransactionModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *TransactionModel) SetRegion(v string) {
	o.Region = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *TransactionModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *TransactionModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *TransactionModel) SetCountry(v string) {
	o.Country = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *TransactionModel) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *TransactionModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *TransactionModel) SetVersion(v int32) {
	o.Version = &v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *TransactionModel) GetSoftwareVersion() string {
	if o == nil || IsNil(o.SoftwareVersion) {
		var ret string
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetSoftwareVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareVersion) {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *TransactionModel) HasSoftwareVersion() bool {
	if o != nil && !IsNil(o.SoftwareVersion) {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given string and assigns it to the SoftwareVersion field.
func (o *TransactionModel) SetSoftwareVersion(v string) {
	o.SoftwareVersion = &v
}

// GetOriginAddressId returns the OriginAddressId field value if set, zero value otherwise.
func (o *TransactionModel) GetOriginAddressId() int64 {
	if o == nil || IsNil(o.OriginAddressId) {
		var ret int64
		return ret
	}
	return *o.OriginAddressId
}

// GetOriginAddressIdOk returns a tuple with the OriginAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetOriginAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginAddressId) {
		return nil, false
	}
	return o.OriginAddressId, true
}

// HasOriginAddressId returns a boolean if a field has been set.
func (o *TransactionModel) HasOriginAddressId() bool {
	if o != nil && !IsNil(o.OriginAddressId) {
		return true
	}

	return false
}

// SetOriginAddressId gets a reference to the given int64 and assigns it to the OriginAddressId field.
func (o *TransactionModel) SetOriginAddressId(v int64) {
	o.OriginAddressId = &v
}

// GetDestinationAddressId returns the DestinationAddressId field value if set, zero value otherwise.
func (o *TransactionModel) GetDestinationAddressId() int64 {
	if o == nil || IsNil(o.DestinationAddressId) {
		var ret int64
		return ret
	}
	return *o.DestinationAddressId
}

// GetDestinationAddressIdOk returns a tuple with the DestinationAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetDestinationAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DestinationAddressId) {
		return nil, false
	}
	return o.DestinationAddressId, true
}

// HasDestinationAddressId returns a boolean if a field has been set.
func (o *TransactionModel) HasDestinationAddressId() bool {
	if o != nil && !IsNil(o.DestinationAddressId) {
		return true
	}

	return false
}

// SetDestinationAddressId gets a reference to the given int64 and assigns it to the DestinationAddressId field.
func (o *TransactionModel) SetDestinationAddressId(v int64) {
	o.DestinationAddressId = &v
}

// GetExchangeRateEffectiveDate returns the ExchangeRateEffectiveDate field value if set, zero value otherwise.
func (o *TransactionModel) GetExchangeRateEffectiveDate() time.Time {
	if o == nil || IsNil(o.ExchangeRateEffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.ExchangeRateEffectiveDate
}

// GetExchangeRateEffectiveDateOk returns a tuple with the ExchangeRateEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetExchangeRateEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExchangeRateEffectiveDate) {
		return nil, false
	}
	return o.ExchangeRateEffectiveDate, true
}

// HasExchangeRateEffectiveDate returns a boolean if a field has been set.
func (o *TransactionModel) HasExchangeRateEffectiveDate() bool {
	if o != nil && !IsNil(o.ExchangeRateEffectiveDate) {
		return true
	}

	return false
}

// SetExchangeRateEffectiveDate gets a reference to the given time.Time and assigns it to the ExchangeRateEffectiveDate field.
func (o *TransactionModel) SetExchangeRateEffectiveDate(v time.Time) {
	o.ExchangeRateEffectiveDate = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *TransactionModel) GetExchangeRate() float64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *TransactionModel) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float64 and assigns it to the ExchangeRate field.
func (o *TransactionModel) SetExchangeRate(v float64) {
	o.ExchangeRate = &v
}

// GetIsSellerImporterOfRecord returns the IsSellerImporterOfRecord field value if set, zero value otherwise.
func (o *TransactionModel) GetIsSellerImporterOfRecord() bool {
	if o == nil || IsNil(o.IsSellerImporterOfRecord) {
		var ret bool
		return ret
	}
	return *o.IsSellerImporterOfRecord
}

// GetIsSellerImporterOfRecordOk returns a tuple with the IsSellerImporterOfRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetIsSellerImporterOfRecordOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSellerImporterOfRecord) {
		return nil, false
	}
	return o.IsSellerImporterOfRecord, true
}

// HasIsSellerImporterOfRecord returns a boolean if a field has been set.
func (o *TransactionModel) HasIsSellerImporterOfRecord() bool {
	if o != nil && !IsNil(o.IsSellerImporterOfRecord) {
		return true
	}

	return false
}

// SetIsSellerImporterOfRecord gets a reference to the given bool and assigns it to the IsSellerImporterOfRecord field.
func (o *TransactionModel) SetIsSellerImporterOfRecord(v bool) {
	o.IsSellerImporterOfRecord = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransactionModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransactionModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransactionModel) SetDescription(v string) {
	o.Description = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TransactionModel) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TransactionModel) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TransactionModel) SetEmail(v string) {
	o.Email = &v
}

// GetBrBuyerType returns the BrBuyerType field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerType() string {
	if o == nil || IsNil(o.BrBuyerType) {
		var ret string
		return ret
	}
	return *o.BrBuyerType
}

// GetBrBuyerTypeOk returns a tuple with the BrBuyerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BrBuyerType) {
		return nil, false
	}
	return o.BrBuyerType, true
}

// HasBrBuyerType returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerType() bool {
	if o != nil && !IsNil(o.BrBuyerType) {
		return true
	}

	return false
}

// SetBrBuyerType gets a reference to the given string and assigns it to the BrBuyerType field.
func (o *TransactionModel) SetBrBuyerType(v string) {
	o.BrBuyerType = &v
}

// GetBrBuyerIsExemptOrCannotWHIRRF returns the BrBuyerIsExemptOrCannotWHIRRF field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHIRRF() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHIRRF) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptOrCannotWHIRRF
}

// GetBrBuyerIsExemptOrCannotWHIRRFOk returns a tuple with the BrBuyerIsExemptOrCannotWHIRRF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHIRRFOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHIRRF) {
		return nil, false
	}
	return o.BrBuyerIsExemptOrCannotWHIRRF, true
}

// HasBrBuyerIsExemptOrCannotWHIRRF returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptOrCannotWHIRRF() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptOrCannotWHIRRF) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptOrCannotWHIRRF gets a reference to the given bool and assigns it to the BrBuyerIsExemptOrCannotWHIRRF field.
func (o *TransactionModel) SetBrBuyerIsExemptOrCannotWHIRRF(v bool) {
	o.BrBuyerIsExemptOrCannotWHIRRF = &v
}

// GetBrBuyerIsExemptOrCannotWHPISRF returns the BrBuyerIsExemptOrCannotWHPISRF field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHPISRF() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHPISRF) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptOrCannotWHPISRF
}

// GetBrBuyerIsExemptOrCannotWHPISRFOk returns a tuple with the BrBuyerIsExemptOrCannotWHPISRF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHPISRFOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHPISRF) {
		return nil, false
	}
	return o.BrBuyerIsExemptOrCannotWHPISRF, true
}

// HasBrBuyerIsExemptOrCannotWHPISRF returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptOrCannotWHPISRF() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptOrCannotWHPISRF) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptOrCannotWHPISRF gets a reference to the given bool and assigns it to the BrBuyerIsExemptOrCannotWHPISRF field.
func (o *TransactionModel) SetBrBuyerIsExemptOrCannotWHPISRF(v bool) {
	o.BrBuyerIsExemptOrCannotWHPISRF = &v
}

// GetBrBuyerIsExemptOrCannotWHCOFINSRF returns the BrBuyerIsExemptOrCannotWHCOFINSRF field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHCOFINSRF() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHCOFINSRF) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptOrCannotWHCOFINSRF
}

// GetBrBuyerIsExemptOrCannotWHCOFINSRFOk returns a tuple with the BrBuyerIsExemptOrCannotWHCOFINSRF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHCOFINSRFOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHCOFINSRF) {
		return nil, false
	}
	return o.BrBuyerIsExemptOrCannotWHCOFINSRF, true
}

// HasBrBuyerIsExemptOrCannotWHCOFINSRF returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptOrCannotWHCOFINSRF() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptOrCannotWHCOFINSRF) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptOrCannotWHCOFINSRF gets a reference to the given bool and assigns it to the BrBuyerIsExemptOrCannotWHCOFINSRF field.
func (o *TransactionModel) SetBrBuyerIsExemptOrCannotWHCOFINSRF(v bool) {
	o.BrBuyerIsExemptOrCannotWHCOFINSRF = &v
}

// GetBrBuyerIsExemptOrCannotWHCSLLRF returns the BrBuyerIsExemptOrCannotWHCSLLRF field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHCSLLRF() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHCSLLRF) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptOrCannotWHCSLLRF
}

// GetBrBuyerIsExemptOrCannotWHCSLLRFOk returns a tuple with the BrBuyerIsExemptOrCannotWHCSLLRF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptOrCannotWHCSLLRFOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptOrCannotWHCSLLRF) {
		return nil, false
	}
	return o.BrBuyerIsExemptOrCannotWHCSLLRF, true
}

// HasBrBuyerIsExemptOrCannotWHCSLLRF returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptOrCannotWHCSLLRF() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptOrCannotWHCSLLRF) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptOrCannotWHCSLLRF gets a reference to the given bool and assigns it to the BrBuyerIsExemptOrCannotWHCSLLRF field.
func (o *TransactionModel) SetBrBuyerIsExemptOrCannotWHCSLLRF(v bool) {
	o.BrBuyerIsExemptOrCannotWHCSLLRF = &v
}

// GetBrBuyerIsExemptPIS returns the BrBuyerIsExemptPIS field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptPIS() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptPIS) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptPIS
}

// GetBrBuyerIsExemptPISOk returns a tuple with the BrBuyerIsExemptPIS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptPISOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptPIS) {
		return nil, false
	}
	return o.BrBuyerIsExemptPIS, true
}

// HasBrBuyerIsExemptPIS returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptPIS() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptPIS) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptPIS gets a reference to the given bool and assigns it to the BrBuyerIsExemptPIS field.
func (o *TransactionModel) SetBrBuyerIsExemptPIS(v bool) {
	o.BrBuyerIsExemptPIS = &v
}

// GetBrBuyerIsExemptCOFINS returns the BrBuyerIsExemptCOFINS field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptCOFINS() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptCOFINS) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptCOFINS
}

// GetBrBuyerIsExemptCOFINSOk returns a tuple with the BrBuyerIsExemptCOFINS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptCOFINSOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptCOFINS) {
		return nil, false
	}
	return o.BrBuyerIsExemptCOFINS, true
}

// HasBrBuyerIsExemptCOFINS returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptCOFINS() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptCOFINS) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptCOFINS gets a reference to the given bool and assigns it to the BrBuyerIsExemptCOFINS field.
func (o *TransactionModel) SetBrBuyerIsExemptCOFINS(v bool) {
	o.BrBuyerIsExemptCOFINS = &v
}

// GetBrBuyerIsExemptCSLL returns the BrBuyerIsExemptCSLL field value if set, zero value otherwise.
func (o *TransactionModel) GetBrBuyerIsExemptCSLL() bool {
	if o == nil || IsNil(o.BrBuyerIsExemptCSLL) {
		var ret bool
		return ret
	}
	return *o.BrBuyerIsExemptCSLL
}

// GetBrBuyerIsExemptCSLLOk returns a tuple with the BrBuyerIsExemptCSLL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetBrBuyerIsExemptCSLLOk() (*bool, bool) {
	if o == nil || IsNil(o.BrBuyerIsExemptCSLL) {
		return nil, false
	}
	return o.BrBuyerIsExemptCSLL, true
}

// HasBrBuyerIsExemptCSLL returns a boolean if a field has been set.
func (o *TransactionModel) HasBrBuyerIsExemptCSLL() bool {
	if o != nil && !IsNil(o.BrBuyerIsExemptCSLL) {
		return true
	}

	return false
}

// SetBrBuyerIsExemptCSLL gets a reference to the given bool and assigns it to the BrBuyerIsExemptCSLL field.
func (o *TransactionModel) SetBrBuyerIsExemptCSLL(v bool) {
	o.BrBuyerIsExemptCSLL = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *TransactionModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *TransactionModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *TransactionModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *TransactionModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *TransactionModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *TransactionModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *TransactionModel) GetLines() []TransactionLineModel {
	if o == nil || IsNil(o.Lines) {
		var ret []TransactionLineModel
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetLinesOk() ([]TransactionLineModel, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *TransactionModel) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []TransactionLineModel and assigns it to the Lines field.
func (o *TransactionModel) SetLines(v []TransactionLineModel) {
	o.Lines = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *TransactionModel) GetAddresses() []TransactionAddressModel {
	if o == nil || IsNil(o.Addresses) {
		var ret []TransactionAddressModel
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionModel) GetAddressesOk() ([]TransactionAddressModel, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *TransactionModel) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []TransactionAddressModel and assigns it to the Addresses field.
func (o *TransactionModel) SetAddresses(v []TransactionAddressModel) {
	o.Addresses = v
}

func (o TransactionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.TaxDate) {
		toSerialize["taxDate"] = o.TaxDate
	}
	if !IsNil(o.PaymentDate) {
		toSerialize["paymentDate"] = o.PaymentDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.BatchCode) {
		toSerialize["batchCode"] = o.BatchCode
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.CustomerUsageType) {
		toSerialize["customerUsageType"] = o.CustomerUsageType
	}
	if !IsNil(o.CustomerVendorCode) {
		toSerialize["customerVendorCode"] = o.CustomerVendorCode
	}
	if !IsNil(o.ExemptNo) {
		toSerialize["exemptNo"] = o.ExemptNo
	}
	if !IsNil(o.Reconciled) {
		toSerialize["reconciled"] = o.Reconciled
	}
	if !IsNil(o.LocationCode) {
		toSerialize["locationCode"] = o.LocationCode
	}
	if !IsNil(o.PurchaseOrderNo) {
		toSerialize["purchaseOrderNo"] = o.PurchaseOrderNo
	}
	if !IsNil(o.ReferenceCode) {
		toSerialize["referenceCode"] = o.ReferenceCode
	}
	if !IsNil(o.SalespersonCode) {
		toSerialize["salespersonCode"] = o.SalespersonCode
	}
	if !IsNil(o.TaxOverrideType) {
		toSerialize["taxOverrideType"] = o.TaxOverrideType
	}
	if !IsNil(o.TaxOverrideAmount) {
		toSerialize["taxOverrideAmount"] = o.TaxOverrideAmount
	}
	if !IsNil(o.TaxOverrideReason) {
		toSerialize["taxOverrideReason"] = o.TaxOverrideReason
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalExempt) {
		toSerialize["totalExempt"] = o.TotalExempt
	}
	if !IsNil(o.TotalTax) {
		toSerialize["totalTax"] = o.TotalTax
	}
	if !IsNil(o.TotalTaxable) {
		toSerialize["totalTaxable"] = o.TotalTaxable
	}
	if !IsNil(o.TotalTaxCalculated) {
		toSerialize["totalTaxCalculated"] = o.TotalTaxCalculated
	}
	if !IsNil(o.AdjustmentReason) {
		toSerialize["adjustmentReason"] = o.AdjustmentReason
	}
	if !IsNil(o.AdjustmentDescription) {
		toSerialize["adjustmentDescription"] = o.AdjustmentDescription
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.SoftwareVersion) {
		toSerialize["softwareVersion"] = o.SoftwareVersion
	}
	if !IsNil(o.OriginAddressId) {
		toSerialize["originAddressId"] = o.OriginAddressId
	}
	if !IsNil(o.DestinationAddressId) {
		toSerialize["destinationAddressId"] = o.DestinationAddressId
	}
	if !IsNil(o.ExchangeRateEffectiveDate) {
		toSerialize["exchangeRateEffectiveDate"] = o.ExchangeRateEffectiveDate
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.IsSellerImporterOfRecord) {
		toSerialize["isSellerImporterOfRecord"] = o.IsSellerImporterOfRecord
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.BrBuyerType) {
		toSerialize["brBuyerType"] = o.BrBuyerType
	}
	if !IsNil(o.BrBuyerIsExemptOrCannotWHIRRF) {
		toSerialize["brBuyer_IsExemptOrCannotWH_IRRF"] = o.BrBuyerIsExemptOrCannotWHIRRF
	}
	if !IsNil(o.BrBuyerIsExemptOrCannotWHPISRF) {
		toSerialize["brBuyer_IsExemptOrCannotWH_PISRF"] = o.BrBuyerIsExemptOrCannotWHPISRF
	}
	if !IsNil(o.BrBuyerIsExemptOrCannotWHCOFINSRF) {
		toSerialize["brBuyer_IsExemptOrCannotWH_COFINSRF"] = o.BrBuyerIsExemptOrCannotWHCOFINSRF
	}
	if !IsNil(o.BrBuyerIsExemptOrCannotWHCSLLRF) {
		toSerialize["brBuyer_IsExemptOrCannotWH_CSLLRF"] = o.BrBuyerIsExemptOrCannotWHCSLLRF
	}
	if !IsNil(o.BrBuyerIsExemptPIS) {
		toSerialize["brBuyer_IsExempt_PIS"] = o.BrBuyerIsExemptPIS
	}
	if !IsNil(o.BrBuyerIsExemptCOFINS) {
		toSerialize["brBuyer_IsExempt_COFINS"] = o.BrBuyerIsExemptCOFINS
	}
	if !IsNil(o.BrBuyerIsExemptCSLL) {
		toSerialize["brBuyer_IsExempt_CSLL"] = o.BrBuyerIsExemptCSLL
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return toSerialize, nil
}

type NullableTransactionModel struct {
	value *TransactionModel
	isSet bool
}

func (v NullableTransactionModel) Get() *TransactionModel {
	return v.value
}

func (v *NullableTransactionModel) Set(val *TransactionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionModel(val *TransactionModel) *NullableTransactionModel {
	return &NullableTransactionModel{value: val, isSet: true}
}

func (v NullableTransactionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


