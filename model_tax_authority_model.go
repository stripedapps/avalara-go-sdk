/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaxAuthorityModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxAuthorityModel{}

// TaxAuthorityModel Tax Authority Model
type TaxAuthorityModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Name
	Name string `json:"name"`
	// Tax Authority Type Id
	TaxAuthorityTypeId *int32 `json:"taxAuthorityTypeId,omitempty"`
	// Jurisdiction Id
	JurisdictionId *int32 `json:"jurisdictionId,omitempty"`
}

// NewTaxAuthorityModel instantiates a new TaxAuthorityModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxAuthorityModel(name string) *TaxAuthorityModel {
	this := TaxAuthorityModel{}
	this.Name = name
	return &this
}

// NewTaxAuthorityModelWithDefaults instantiates a new TaxAuthorityModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxAuthorityModelWithDefaults() *TaxAuthorityModel {
	this := TaxAuthorityModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaxAuthorityModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxAuthorityModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaxAuthorityModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaxAuthorityModel) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *TaxAuthorityModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TaxAuthorityModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TaxAuthorityModel) SetName(v string) {
	o.Name = v
}

// GetTaxAuthorityTypeId returns the TaxAuthorityTypeId field value if set, zero value otherwise.
func (o *TaxAuthorityModel) GetTaxAuthorityTypeId() int32 {
	if o == nil || IsNil(o.TaxAuthorityTypeId) {
		var ret int32
		return ret
	}
	return *o.TaxAuthorityTypeId
}

// GetTaxAuthorityTypeIdOk returns a tuple with the TaxAuthorityTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxAuthorityModel) GetTaxAuthorityTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxAuthorityTypeId) {
		return nil, false
	}
	return o.TaxAuthorityTypeId, true
}

// HasTaxAuthorityTypeId returns a boolean if a field has been set.
func (o *TaxAuthorityModel) HasTaxAuthorityTypeId() bool {
	if o != nil && !IsNil(o.TaxAuthorityTypeId) {
		return true
	}

	return false
}

// SetTaxAuthorityTypeId gets a reference to the given int32 and assigns it to the TaxAuthorityTypeId field.
func (o *TaxAuthorityModel) SetTaxAuthorityTypeId(v int32) {
	o.TaxAuthorityTypeId = &v
}

// GetJurisdictionId returns the JurisdictionId field value if set, zero value otherwise.
func (o *TaxAuthorityModel) GetJurisdictionId() int32 {
	if o == nil || IsNil(o.JurisdictionId) {
		var ret int32
		return ret
	}
	return *o.JurisdictionId
}

// GetJurisdictionIdOk returns a tuple with the JurisdictionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxAuthorityModel) GetJurisdictionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JurisdictionId) {
		return nil, false
	}
	return o.JurisdictionId, true
}

// HasJurisdictionId returns a boolean if a field has been set.
func (o *TaxAuthorityModel) HasJurisdictionId() bool {
	if o != nil && !IsNil(o.JurisdictionId) {
		return true
	}

	return false
}

// SetJurisdictionId gets a reference to the given int32 and assigns it to the JurisdictionId field.
func (o *TaxAuthorityModel) SetJurisdictionId(v int32) {
	o.JurisdictionId = &v
}

func (o TaxAuthorityModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxAuthorityModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.TaxAuthorityTypeId) {
		toSerialize["taxAuthorityTypeId"] = o.TaxAuthorityTypeId
	}
	if !IsNil(o.JurisdictionId) {
		toSerialize["jurisdictionId"] = o.JurisdictionId
	}
	return toSerialize, nil
}

type NullableTaxAuthorityModel struct {
	value *TaxAuthorityModel
	isSet bool
}

func (v NullableTaxAuthorityModel) Get() *TaxAuthorityModel {
	return v.value
}

func (v *NullableTaxAuthorityModel) Set(val *TaxAuthorityModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxAuthorityModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxAuthorityModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxAuthorityModel(val *TaxAuthorityModel) *NullableTaxAuthorityModel {
	return &NullableTaxAuthorityModel{value: val, isSet: true}
}

func (v NullableTaxAuthorityModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxAuthorityModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


