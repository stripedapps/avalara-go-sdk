/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FilingCalendarModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilingCalendarModel{}

// FilingCalendarModel Filing Calendar
type FilingCalendarModel struct {
	// Id
	Id *int64 `json:"id,omitempty"`
	// Company Id
	CompanyId *int32 `json:"companyId,omitempty"`
	// Return Name
	ReturnName string `json:"returnName"`
	// If this calendar is for a location-specific tax return, specify the location code here.  To file for all locations, leave this value NULL.
	LocationCode *string `json:"locationCode,omitempty"`
	// If this calendar is for a location-specific tax return, specify the location-specific behavior here.
	OutletTypeId *string `json:"outletTypeId,omitempty"`
	// Specify the ISO 4217 currency code for the currency to remit for this tax return.  For all tax returns in the United States, specify \"USD\".
	PaymentCurrency *string `json:"paymentCurrency,omitempty"`
	// Filing Frequency Id
	FilingFrequencyId *string `json:"filingFrequencyId,omitempty"`
	// Months
	Months *int32 `json:"months,omitempty"`
	// Tax Registration ID for this Region - in the U.S., this is for your state.
	StateRegistrationId string `json:"stateRegistrationId"`
	// Tax Registration ID for the local jurisdiction, if any.
	LocalRegistrationId *string `json:"localRegistrationId,omitempty"`
	// Employer Identification Number
	EmployerIdentificationNumber *string `json:"employerIdentificationNumber,omitempty"`
	// Line1
	Line1 *string `json:"line1,omitempty"`
	// Line2
	Line2 *string `json:"line2,omitempty"`
	// City
	City *string `json:"city,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// Postal Code
	PostalCode *string `json:"postalCode,omitempty"`
	// Country
	Country *string `json:"country,omitempty"`
	// Phone
	Phone *string `json:"phone,omitempty"`
	// Customer Filing Instructions
	CustomerFilingInstructions *string `json:"customerFilingInstructions,omitempty"`
	// Legal Entity Name
	LegalEntityName *string `json:"legalEntityName,omitempty"`
	// Effective Date
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// End Date
	EndDate *time.Time `json:"endDate,omitempty"`
	// Filing Type Id
	FilingTypeId *string `json:"filingTypeId,omitempty"`
	// If you file electronically, this is the username you use to log in to the tax authority's website.
	EFileUsername *string `json:"eFileUsername,omitempty"`
	// If you file electronically, this is the password or pass code you use to log in to the tax authority's website.
	EFilePassword *string `json:"eFilePassword,omitempty"`
	// Prepay Percentage
	PrepayPercentage *string `json:"prepayPercentage,omitempty"`
	// Tax Type Id
	TaxTypeId string `json:"taxTypeId"`
	// Internal Notes
	InternalNotes *string `json:"internalNotes,omitempty"`
	// Al Sign On
	AlSignOn *string `json:"alSignOn,omitempty"`
	// Al Access Code
	AlAccessCode *string `json:"alAccessCode,omitempty"`
	// Me Business Code
	MeBusinessCode *string `json:"meBusinessCode,omitempty"`
	// Ia Ben
	IaBen *string `json:"iaBen,omitempty"`
	// Ct Reg
	CtReg *string `json:"ctReg,omitempty"`
	// Other 1 Name
	Other1Name *string `json:"other1Name,omitempty"`
	// Other 1 Value
	Other1Value *string `json:"other1Value,omitempty"`
	// Other 2 Name
	Other2Name *string `json:"other2Name,omitempty"`
	// Other 2 Value
	Other2Value *string `json:"other2Value,omitempty"`
	// Other 3 Name
	Other3Name *string `json:"other3Name,omitempty"`
	// Other 3 Value
	Other3Value *string `json:"other3Value,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewFilingCalendarModel instantiates a new FilingCalendarModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilingCalendarModel(returnName string, stateRegistrationId string, taxTypeId string) *FilingCalendarModel {
	this := FilingCalendarModel{}
	this.ReturnName = returnName
	this.StateRegistrationId = stateRegistrationId
	this.TaxTypeId = taxTypeId
	return &this
}

// NewFilingCalendarModelWithDefaults instantiates a new FilingCalendarModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilingCalendarModelWithDefaults() *FilingCalendarModel {
	this := FilingCalendarModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FilingCalendarModel) SetId(v int64) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *FilingCalendarModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetReturnName returns the ReturnName field value
func (o *FilingCalendarModel) GetReturnName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnName
}

// GetReturnNameOk returns a tuple with the ReturnName field value
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetReturnNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnName, true
}

// SetReturnName sets field value
func (o *FilingCalendarModel) SetReturnName(v string) {
	o.ReturnName = v
}

// GetLocationCode returns the LocationCode field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetLocationCode() string {
	if o == nil || IsNil(o.LocationCode) {
		var ret string
		return ret
	}
	return *o.LocationCode
}

// GetLocationCodeOk returns a tuple with the LocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationCode) {
		return nil, false
	}
	return o.LocationCode, true
}

// HasLocationCode returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasLocationCode() bool {
	if o != nil && !IsNil(o.LocationCode) {
		return true
	}

	return false
}

// SetLocationCode gets a reference to the given string and assigns it to the LocationCode field.
func (o *FilingCalendarModel) SetLocationCode(v string) {
	o.LocationCode = &v
}

// GetOutletTypeId returns the OutletTypeId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOutletTypeId() string {
	if o == nil || IsNil(o.OutletTypeId) {
		var ret string
		return ret
	}
	return *o.OutletTypeId
}

// GetOutletTypeIdOk returns a tuple with the OutletTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOutletTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutletTypeId) {
		return nil, false
	}
	return o.OutletTypeId, true
}

// HasOutletTypeId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOutletTypeId() bool {
	if o != nil && !IsNil(o.OutletTypeId) {
		return true
	}

	return false
}

// SetOutletTypeId gets a reference to the given string and assigns it to the OutletTypeId field.
func (o *FilingCalendarModel) SetOutletTypeId(v string) {
	o.OutletTypeId = &v
}

// GetPaymentCurrency returns the PaymentCurrency field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetPaymentCurrency() string {
	if o == nil || IsNil(o.PaymentCurrency) {
		var ret string
		return ret
	}
	return *o.PaymentCurrency
}

// GetPaymentCurrencyOk returns a tuple with the PaymentCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetPaymentCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentCurrency) {
		return nil, false
	}
	return o.PaymentCurrency, true
}

// HasPaymentCurrency returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasPaymentCurrency() bool {
	if o != nil && !IsNil(o.PaymentCurrency) {
		return true
	}

	return false
}

// SetPaymentCurrency gets a reference to the given string and assigns it to the PaymentCurrency field.
func (o *FilingCalendarModel) SetPaymentCurrency(v string) {
	o.PaymentCurrency = &v
}

// GetFilingFrequencyId returns the FilingFrequencyId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetFilingFrequencyId() string {
	if o == nil || IsNil(o.FilingFrequencyId) {
		var ret string
		return ret
	}
	return *o.FilingFrequencyId
}

// GetFilingFrequencyIdOk returns a tuple with the FilingFrequencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetFilingFrequencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.FilingFrequencyId) {
		return nil, false
	}
	return o.FilingFrequencyId, true
}

// HasFilingFrequencyId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasFilingFrequencyId() bool {
	if o != nil && !IsNil(o.FilingFrequencyId) {
		return true
	}

	return false
}

// SetFilingFrequencyId gets a reference to the given string and assigns it to the FilingFrequencyId field.
func (o *FilingCalendarModel) SetFilingFrequencyId(v string) {
	o.FilingFrequencyId = &v
}

// GetMonths returns the Months field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetMonths() int32 {
	if o == nil || IsNil(o.Months) {
		var ret int32
		return ret
	}
	return *o.Months
}

// GetMonthsOk returns a tuple with the Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetMonthsOk() (*int32, bool) {
	if o == nil || IsNil(o.Months) {
		return nil, false
	}
	return o.Months, true
}

// HasMonths returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasMonths() bool {
	if o != nil && !IsNil(o.Months) {
		return true
	}

	return false
}

// SetMonths gets a reference to the given int32 and assigns it to the Months field.
func (o *FilingCalendarModel) SetMonths(v int32) {
	o.Months = &v
}

// GetStateRegistrationId returns the StateRegistrationId field value
func (o *FilingCalendarModel) GetStateRegistrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateRegistrationId
}

// GetStateRegistrationIdOk returns a tuple with the StateRegistrationId field value
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetStateRegistrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateRegistrationId, true
}

// SetStateRegistrationId sets field value
func (o *FilingCalendarModel) SetStateRegistrationId(v string) {
	o.StateRegistrationId = v
}

// GetLocalRegistrationId returns the LocalRegistrationId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetLocalRegistrationId() string {
	if o == nil || IsNil(o.LocalRegistrationId) {
		var ret string
		return ret
	}
	return *o.LocalRegistrationId
}

// GetLocalRegistrationIdOk returns a tuple with the LocalRegistrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetLocalRegistrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalRegistrationId) {
		return nil, false
	}
	return o.LocalRegistrationId, true
}

// HasLocalRegistrationId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasLocalRegistrationId() bool {
	if o != nil && !IsNil(o.LocalRegistrationId) {
		return true
	}

	return false
}

// SetLocalRegistrationId gets a reference to the given string and assigns it to the LocalRegistrationId field.
func (o *FilingCalendarModel) SetLocalRegistrationId(v string) {
	o.LocalRegistrationId = &v
}

// GetEmployerIdentificationNumber returns the EmployerIdentificationNumber field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetEmployerIdentificationNumber() string {
	if o == nil || IsNil(o.EmployerIdentificationNumber) {
		var ret string
		return ret
	}
	return *o.EmployerIdentificationNumber
}

// GetEmployerIdentificationNumberOk returns a tuple with the EmployerIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetEmployerIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EmployerIdentificationNumber) {
		return nil, false
	}
	return o.EmployerIdentificationNumber, true
}

// HasEmployerIdentificationNumber returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasEmployerIdentificationNumber() bool {
	if o != nil && !IsNil(o.EmployerIdentificationNumber) {
		return true
	}

	return false
}

// SetEmployerIdentificationNumber gets a reference to the given string and assigns it to the EmployerIdentificationNumber field.
func (o *FilingCalendarModel) SetEmployerIdentificationNumber(v string) {
	o.EmployerIdentificationNumber = &v
}

// GetLine1 returns the Line1 field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetLine1() string {
	if o == nil || IsNil(o.Line1) {
		var ret string
		return ret
	}
	return *o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.Line1) {
		return nil, false
	}
	return o.Line1, true
}

// HasLine1 returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasLine1() bool {
	if o != nil && !IsNil(o.Line1) {
		return true
	}

	return false
}

// SetLine1 gets a reference to the given string and assigns it to the Line1 field.
func (o *FilingCalendarModel) SetLine1(v string) {
	o.Line1 = &v
}

// GetLine2 returns the Line2 field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetLine2() string {
	if o == nil || IsNil(o.Line2) {
		var ret string
		return ret
	}
	return *o.Line2
}

// GetLine2Ok returns a tuple with the Line2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.Line2) {
		return nil, false
	}
	return o.Line2, true
}

// HasLine2 returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasLine2() bool {
	if o != nil && !IsNil(o.Line2) {
		return true
	}

	return false
}

// SetLine2 gets a reference to the given string and assigns it to the Line2 field.
func (o *FilingCalendarModel) SetLine2(v string) {
	o.Line2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *FilingCalendarModel) SetCity(v string) {
	o.City = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FilingCalendarModel) SetRegion(v string) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *FilingCalendarModel) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *FilingCalendarModel) SetCountry(v string) {
	o.Country = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *FilingCalendarModel) SetPhone(v string) {
	o.Phone = &v
}

// GetCustomerFilingInstructions returns the CustomerFilingInstructions field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCustomerFilingInstructions() string {
	if o == nil || IsNil(o.CustomerFilingInstructions) {
		var ret string
		return ret
	}
	return *o.CustomerFilingInstructions
}

// GetCustomerFilingInstructionsOk returns a tuple with the CustomerFilingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCustomerFilingInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerFilingInstructions) {
		return nil, false
	}
	return o.CustomerFilingInstructions, true
}

// HasCustomerFilingInstructions returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCustomerFilingInstructions() bool {
	if o != nil && !IsNil(o.CustomerFilingInstructions) {
		return true
	}

	return false
}

// SetCustomerFilingInstructions gets a reference to the given string and assigns it to the CustomerFilingInstructions field.
func (o *FilingCalendarModel) SetCustomerFilingInstructions(v string) {
	o.CustomerFilingInstructions = &v
}

// GetLegalEntityName returns the LegalEntityName field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetLegalEntityName() string {
	if o == nil || IsNil(o.LegalEntityName) {
		var ret string
		return ret
	}
	return *o.LegalEntityName
}

// GetLegalEntityNameOk returns a tuple with the LegalEntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetLegalEntityNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalEntityName) {
		return nil, false
	}
	return o.LegalEntityName, true
}

// HasLegalEntityName returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasLegalEntityName() bool {
	if o != nil && !IsNil(o.LegalEntityName) {
		return true
	}

	return false
}

// SetLegalEntityName gets a reference to the given string and assigns it to the LegalEntityName field.
func (o *FilingCalendarModel) SetLegalEntityName(v string) {
	o.LegalEntityName = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *FilingCalendarModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *FilingCalendarModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetFilingTypeId returns the FilingTypeId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetFilingTypeId() string {
	if o == nil || IsNil(o.FilingTypeId) {
		var ret string
		return ret
	}
	return *o.FilingTypeId
}

// GetFilingTypeIdOk returns a tuple with the FilingTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetFilingTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.FilingTypeId) {
		return nil, false
	}
	return o.FilingTypeId, true
}

// HasFilingTypeId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasFilingTypeId() bool {
	if o != nil && !IsNil(o.FilingTypeId) {
		return true
	}

	return false
}

// SetFilingTypeId gets a reference to the given string and assigns it to the FilingTypeId field.
func (o *FilingCalendarModel) SetFilingTypeId(v string) {
	o.FilingTypeId = &v
}

// GetEFileUsername returns the EFileUsername field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetEFileUsername() string {
	if o == nil || IsNil(o.EFileUsername) {
		var ret string
		return ret
	}
	return *o.EFileUsername
}

// GetEFileUsernameOk returns a tuple with the EFileUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetEFileUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.EFileUsername) {
		return nil, false
	}
	return o.EFileUsername, true
}

// HasEFileUsername returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasEFileUsername() bool {
	if o != nil && !IsNil(o.EFileUsername) {
		return true
	}

	return false
}

// SetEFileUsername gets a reference to the given string and assigns it to the EFileUsername field.
func (o *FilingCalendarModel) SetEFileUsername(v string) {
	o.EFileUsername = &v
}

// GetEFilePassword returns the EFilePassword field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetEFilePassword() string {
	if o == nil || IsNil(o.EFilePassword) {
		var ret string
		return ret
	}
	return *o.EFilePassword
}

// GetEFilePasswordOk returns a tuple with the EFilePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetEFilePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.EFilePassword) {
		return nil, false
	}
	return o.EFilePassword, true
}

// HasEFilePassword returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasEFilePassword() bool {
	if o != nil && !IsNil(o.EFilePassword) {
		return true
	}

	return false
}

// SetEFilePassword gets a reference to the given string and assigns it to the EFilePassword field.
func (o *FilingCalendarModel) SetEFilePassword(v string) {
	o.EFilePassword = &v
}

// GetPrepayPercentage returns the PrepayPercentage field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetPrepayPercentage() string {
	if o == nil || IsNil(o.PrepayPercentage) {
		var ret string
		return ret
	}
	return *o.PrepayPercentage
}

// GetPrepayPercentageOk returns a tuple with the PrepayPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetPrepayPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.PrepayPercentage) {
		return nil, false
	}
	return o.PrepayPercentage, true
}

// HasPrepayPercentage returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasPrepayPercentage() bool {
	if o != nil && !IsNil(o.PrepayPercentage) {
		return true
	}

	return false
}

// SetPrepayPercentage gets a reference to the given string and assigns it to the PrepayPercentage field.
func (o *FilingCalendarModel) SetPrepayPercentage(v string) {
	o.PrepayPercentage = &v
}

// GetTaxTypeId returns the TaxTypeId field value
func (o *FilingCalendarModel) GetTaxTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaxTypeId
}

// GetTaxTypeIdOk returns a tuple with the TaxTypeId field value
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetTaxTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxTypeId, true
}

// SetTaxTypeId sets field value
func (o *FilingCalendarModel) SetTaxTypeId(v string) {
	o.TaxTypeId = v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *FilingCalendarModel) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetAlSignOn returns the AlSignOn field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetAlSignOn() string {
	if o == nil || IsNil(o.AlSignOn) {
		var ret string
		return ret
	}
	return *o.AlSignOn
}

// GetAlSignOnOk returns a tuple with the AlSignOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetAlSignOnOk() (*string, bool) {
	if o == nil || IsNil(o.AlSignOn) {
		return nil, false
	}
	return o.AlSignOn, true
}

// HasAlSignOn returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasAlSignOn() bool {
	if o != nil && !IsNil(o.AlSignOn) {
		return true
	}

	return false
}

// SetAlSignOn gets a reference to the given string and assigns it to the AlSignOn field.
func (o *FilingCalendarModel) SetAlSignOn(v string) {
	o.AlSignOn = &v
}

// GetAlAccessCode returns the AlAccessCode field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetAlAccessCode() string {
	if o == nil || IsNil(o.AlAccessCode) {
		var ret string
		return ret
	}
	return *o.AlAccessCode
}

// GetAlAccessCodeOk returns a tuple with the AlAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetAlAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AlAccessCode) {
		return nil, false
	}
	return o.AlAccessCode, true
}

// HasAlAccessCode returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasAlAccessCode() bool {
	if o != nil && !IsNil(o.AlAccessCode) {
		return true
	}

	return false
}

// SetAlAccessCode gets a reference to the given string and assigns it to the AlAccessCode field.
func (o *FilingCalendarModel) SetAlAccessCode(v string) {
	o.AlAccessCode = &v
}

// GetMeBusinessCode returns the MeBusinessCode field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetMeBusinessCode() string {
	if o == nil || IsNil(o.MeBusinessCode) {
		var ret string
		return ret
	}
	return *o.MeBusinessCode
}

// GetMeBusinessCodeOk returns a tuple with the MeBusinessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetMeBusinessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MeBusinessCode) {
		return nil, false
	}
	return o.MeBusinessCode, true
}

// HasMeBusinessCode returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasMeBusinessCode() bool {
	if o != nil && !IsNil(o.MeBusinessCode) {
		return true
	}

	return false
}

// SetMeBusinessCode gets a reference to the given string and assigns it to the MeBusinessCode field.
func (o *FilingCalendarModel) SetMeBusinessCode(v string) {
	o.MeBusinessCode = &v
}

// GetIaBen returns the IaBen field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetIaBen() string {
	if o == nil || IsNil(o.IaBen) {
		var ret string
		return ret
	}
	return *o.IaBen
}

// GetIaBenOk returns a tuple with the IaBen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetIaBenOk() (*string, bool) {
	if o == nil || IsNil(o.IaBen) {
		return nil, false
	}
	return o.IaBen, true
}

// HasIaBen returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasIaBen() bool {
	if o != nil && !IsNil(o.IaBen) {
		return true
	}

	return false
}

// SetIaBen gets a reference to the given string and assigns it to the IaBen field.
func (o *FilingCalendarModel) SetIaBen(v string) {
	o.IaBen = &v
}

// GetCtReg returns the CtReg field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCtReg() string {
	if o == nil || IsNil(o.CtReg) {
		var ret string
		return ret
	}
	return *o.CtReg
}

// GetCtRegOk returns a tuple with the CtReg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCtRegOk() (*string, bool) {
	if o == nil || IsNil(o.CtReg) {
		return nil, false
	}
	return o.CtReg, true
}

// HasCtReg returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCtReg() bool {
	if o != nil && !IsNil(o.CtReg) {
		return true
	}

	return false
}

// SetCtReg gets a reference to the given string and assigns it to the CtReg field.
func (o *FilingCalendarModel) SetCtReg(v string) {
	o.CtReg = &v
}

// GetOther1Name returns the Other1Name field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther1Name() string {
	if o == nil || IsNil(o.Other1Name) {
		var ret string
		return ret
	}
	return *o.Other1Name
}

// GetOther1NameOk returns a tuple with the Other1Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther1NameOk() (*string, bool) {
	if o == nil || IsNil(o.Other1Name) {
		return nil, false
	}
	return o.Other1Name, true
}

// HasOther1Name returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther1Name() bool {
	if o != nil && !IsNil(o.Other1Name) {
		return true
	}

	return false
}

// SetOther1Name gets a reference to the given string and assigns it to the Other1Name field.
func (o *FilingCalendarModel) SetOther1Name(v string) {
	o.Other1Name = &v
}

// GetOther1Value returns the Other1Value field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther1Value() string {
	if o == nil || IsNil(o.Other1Value) {
		var ret string
		return ret
	}
	return *o.Other1Value
}

// GetOther1ValueOk returns a tuple with the Other1Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther1ValueOk() (*string, bool) {
	if o == nil || IsNil(o.Other1Value) {
		return nil, false
	}
	return o.Other1Value, true
}

// HasOther1Value returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther1Value() bool {
	if o != nil && !IsNil(o.Other1Value) {
		return true
	}

	return false
}

// SetOther1Value gets a reference to the given string and assigns it to the Other1Value field.
func (o *FilingCalendarModel) SetOther1Value(v string) {
	o.Other1Value = &v
}

// GetOther2Name returns the Other2Name field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther2Name() string {
	if o == nil || IsNil(o.Other2Name) {
		var ret string
		return ret
	}
	return *o.Other2Name
}

// GetOther2NameOk returns a tuple with the Other2Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther2NameOk() (*string, bool) {
	if o == nil || IsNil(o.Other2Name) {
		return nil, false
	}
	return o.Other2Name, true
}

// HasOther2Name returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther2Name() bool {
	if o != nil && !IsNil(o.Other2Name) {
		return true
	}

	return false
}

// SetOther2Name gets a reference to the given string and assigns it to the Other2Name field.
func (o *FilingCalendarModel) SetOther2Name(v string) {
	o.Other2Name = &v
}

// GetOther2Value returns the Other2Value field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther2Value() string {
	if o == nil || IsNil(o.Other2Value) {
		var ret string
		return ret
	}
	return *o.Other2Value
}

// GetOther2ValueOk returns a tuple with the Other2Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther2ValueOk() (*string, bool) {
	if o == nil || IsNil(o.Other2Value) {
		return nil, false
	}
	return o.Other2Value, true
}

// HasOther2Value returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther2Value() bool {
	if o != nil && !IsNil(o.Other2Value) {
		return true
	}

	return false
}

// SetOther2Value gets a reference to the given string and assigns it to the Other2Value field.
func (o *FilingCalendarModel) SetOther2Value(v string) {
	o.Other2Value = &v
}

// GetOther3Name returns the Other3Name field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther3Name() string {
	if o == nil || IsNil(o.Other3Name) {
		var ret string
		return ret
	}
	return *o.Other3Name
}

// GetOther3NameOk returns a tuple with the Other3Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther3NameOk() (*string, bool) {
	if o == nil || IsNil(o.Other3Name) {
		return nil, false
	}
	return o.Other3Name, true
}

// HasOther3Name returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther3Name() bool {
	if o != nil && !IsNil(o.Other3Name) {
		return true
	}

	return false
}

// SetOther3Name gets a reference to the given string and assigns it to the Other3Name field.
func (o *FilingCalendarModel) SetOther3Name(v string) {
	o.Other3Name = &v
}

// GetOther3Value returns the Other3Value field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetOther3Value() string {
	if o == nil || IsNil(o.Other3Value) {
		var ret string
		return ret
	}
	return *o.Other3Value
}

// GetOther3ValueOk returns a tuple with the Other3Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetOther3ValueOk() (*string, bool) {
	if o == nil || IsNil(o.Other3Value) {
		return nil, false
	}
	return o.Other3Value, true
}

// HasOther3Value returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasOther3Value() bool {
	if o != nil && !IsNil(o.Other3Value) {
		return true
	}

	return false
}

// SetOther3Value gets a reference to the given string and assigns it to the Other3Value field.
func (o *FilingCalendarModel) SetOther3Value(v string) {
	o.Other3Value = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *FilingCalendarModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *FilingCalendarModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *FilingCalendarModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *FilingCalendarModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilingCalendarModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *FilingCalendarModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *FilingCalendarModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o FilingCalendarModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilingCalendarModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	toSerialize["returnName"] = o.ReturnName
	if !IsNil(o.LocationCode) {
		toSerialize["locationCode"] = o.LocationCode
	}
	if !IsNil(o.OutletTypeId) {
		toSerialize["outletTypeId"] = o.OutletTypeId
	}
	if !IsNil(o.PaymentCurrency) {
		toSerialize["paymentCurrency"] = o.PaymentCurrency
	}
	if !IsNil(o.FilingFrequencyId) {
		toSerialize["filingFrequencyId"] = o.FilingFrequencyId
	}
	if !IsNil(o.Months) {
		toSerialize["months"] = o.Months
	}
	toSerialize["stateRegistrationId"] = o.StateRegistrationId
	if !IsNil(o.LocalRegistrationId) {
		toSerialize["localRegistrationId"] = o.LocalRegistrationId
	}
	if !IsNil(o.EmployerIdentificationNumber) {
		toSerialize["employerIdentificationNumber"] = o.EmployerIdentificationNumber
	}
	if !IsNil(o.Line1) {
		toSerialize["line1"] = o.Line1
	}
	if !IsNil(o.Line2) {
		toSerialize["line2"] = o.Line2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.CustomerFilingInstructions) {
		toSerialize["customerFilingInstructions"] = o.CustomerFilingInstructions
	}
	if !IsNil(o.LegalEntityName) {
		toSerialize["legalEntityName"] = o.LegalEntityName
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.FilingTypeId) {
		toSerialize["filingTypeId"] = o.FilingTypeId
	}
	if !IsNil(o.EFileUsername) {
		toSerialize["eFileUsername"] = o.EFileUsername
	}
	if !IsNil(o.EFilePassword) {
		toSerialize["eFilePassword"] = o.EFilePassword
	}
	if !IsNil(o.PrepayPercentage) {
		toSerialize["prepayPercentage"] = o.PrepayPercentage
	}
	toSerialize["taxTypeId"] = o.TaxTypeId
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	if !IsNil(o.AlSignOn) {
		toSerialize["alSignOn"] = o.AlSignOn
	}
	if !IsNil(o.AlAccessCode) {
		toSerialize["alAccessCode"] = o.AlAccessCode
	}
	if !IsNil(o.MeBusinessCode) {
		toSerialize["meBusinessCode"] = o.MeBusinessCode
	}
	if !IsNil(o.IaBen) {
		toSerialize["iaBen"] = o.IaBen
	}
	if !IsNil(o.CtReg) {
		toSerialize["ctReg"] = o.CtReg
	}
	if !IsNil(o.Other1Name) {
		toSerialize["other1Name"] = o.Other1Name
	}
	if !IsNil(o.Other1Value) {
		toSerialize["other1Value"] = o.Other1Value
	}
	if !IsNil(o.Other2Name) {
		toSerialize["other2Name"] = o.Other2Name
	}
	if !IsNil(o.Other2Value) {
		toSerialize["other2Value"] = o.Other2Value
	}
	if !IsNil(o.Other3Name) {
		toSerialize["other3Name"] = o.Other3Name
	}
	if !IsNil(o.Other3Value) {
		toSerialize["other3Value"] = o.Other3Value
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableFilingCalendarModel struct {
	value *FilingCalendarModel
	isSet bool
}

func (v NullableFilingCalendarModel) Get() *FilingCalendarModel {
	return v.value
}

func (v *NullableFilingCalendarModel) Set(val *FilingCalendarModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFilingCalendarModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFilingCalendarModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilingCalendarModel(val *FilingCalendarModel) *NullableFilingCalendarModel {
	return &NullableFilingCalendarModel{value: val, isSet: true}
}

func (v NullableFilingCalendarModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilingCalendarModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


