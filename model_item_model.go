/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemModel{}

// ItemModel Item Model
type ItemModel struct {
	// Id
	Id *int64 `json:"id,omitempty"`
	// Item Code
	ItemCode string `json:"itemCode"`
	// Company Id
	CompanyId *int32 `json:"companyId,omitempty"`
	// Tax Code Id
	TaxCodeId *int32 `json:"taxCodeId,omitempty"`
	// Tax Code
	TaxCode *string `json:"taxCode,omitempty"`
	// Description
	Description string `json:"description"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewItemModel instantiates a new ItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemModel(itemCode string, description string) *ItemModel {
	this := ItemModel{}
	this.ItemCode = itemCode
	this.Description = description
	return &this
}

// NewItemModelWithDefaults instantiates a new ItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemModelWithDefaults() *ItemModel {
	this := ItemModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ItemModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ItemModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ItemModel) SetId(v int64) {
	o.Id = &v
}

// GetItemCode returns the ItemCode field value
func (o *ItemModel) GetItemCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemCode
}

// GetItemCodeOk returns a tuple with the ItemCode field value
// and a boolean to check if the value has been set.
func (o *ItemModel) GetItemCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemCode, true
}

// SetItemCode sets field value
func (o *ItemModel) SetItemCode(v string) {
	o.ItemCode = v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ItemModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ItemModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *ItemModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetTaxCodeId returns the TaxCodeId field value if set, zero value otherwise.
func (o *ItemModel) GetTaxCodeId() int32 {
	if o == nil || IsNil(o.TaxCodeId) {
		var ret int32
		return ret
	}
	return *o.TaxCodeId
}

// GetTaxCodeIdOk returns a tuple with the TaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetTaxCodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxCodeId) {
		return nil, false
	}
	return o.TaxCodeId, true
}

// HasTaxCodeId returns a boolean if a field has been set.
func (o *ItemModel) HasTaxCodeId() bool {
	if o != nil && !IsNil(o.TaxCodeId) {
		return true
	}

	return false
}

// SetTaxCodeId gets a reference to the given int32 and assigns it to the TaxCodeId field.
func (o *ItemModel) SetTaxCodeId(v int32) {
	o.TaxCodeId = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *ItemModel) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *ItemModel) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *ItemModel) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetDescription returns the Description field value
func (o *ItemModel) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ItemModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ItemModel) SetDescription(v string) {
	o.Description = v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ItemModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ItemModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *ItemModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *ItemModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *ItemModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *ItemModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *ItemModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *ItemModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *ItemModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *ItemModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *ItemModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *ItemModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o ItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["itemCode"] = o.ItemCode
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.TaxCodeId) {
		toSerialize["taxCodeId"] = o.TaxCodeId
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableItemModel struct {
	value *ItemModel
	isSet bool
}

func (v NullableItemModel) Get() *ItemModel {
	return v.value
}

func (v *NullableItemModel) Set(val *ItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemModel(val *ItemModel) *NullableItemModel {
	return &NullableItemModel{value: val, isSet: true}
}

func (v NullableItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


