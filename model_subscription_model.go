/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SubscriptionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionModel{}

// SubscriptionModel Subscription Model
type SubscriptionModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Account Id
	AccountId *int32 `json:"accountId,omitempty"`
	// Subscription Type Id
	SubscriptionTypeId *int32 `json:"subscriptionTypeId,omitempty"`
	// Subscription Description
	SubscriptionDescription *string `json:"subscriptionDescription,omitempty"`
	// Effective Date
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// End Date
	EndDate *time.Time `json:"endDate,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewSubscriptionModel instantiates a new SubscriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionModel() *SubscriptionModel {
	this := SubscriptionModel{}
	return &this
}

// NewSubscriptionModelWithDefaults instantiates a new SubscriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionModelWithDefaults() *SubscriptionModel {
	this := SubscriptionModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriptionModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SubscriptionModel) SetId(v int32) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SubscriptionModel) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SubscriptionModel) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *SubscriptionModel) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetSubscriptionTypeId returns the SubscriptionTypeId field value if set, zero value otherwise.
func (o *SubscriptionModel) GetSubscriptionTypeId() int32 {
	if o == nil || IsNil(o.SubscriptionTypeId) {
		var ret int32
		return ret
	}
	return *o.SubscriptionTypeId
}

// GetSubscriptionTypeIdOk returns a tuple with the SubscriptionTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetSubscriptionTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionTypeId) {
		return nil, false
	}
	return o.SubscriptionTypeId, true
}

// HasSubscriptionTypeId returns a boolean if a field has been set.
func (o *SubscriptionModel) HasSubscriptionTypeId() bool {
	if o != nil && !IsNil(o.SubscriptionTypeId) {
		return true
	}

	return false
}

// SetSubscriptionTypeId gets a reference to the given int32 and assigns it to the SubscriptionTypeId field.
func (o *SubscriptionModel) SetSubscriptionTypeId(v int32) {
	o.SubscriptionTypeId = &v
}

// GetSubscriptionDescription returns the SubscriptionDescription field value if set, zero value otherwise.
func (o *SubscriptionModel) GetSubscriptionDescription() string {
	if o == nil || IsNil(o.SubscriptionDescription) {
		var ret string
		return ret
	}
	return *o.SubscriptionDescription
}

// GetSubscriptionDescriptionOk returns a tuple with the SubscriptionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetSubscriptionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionDescription) {
		return nil, false
	}
	return o.SubscriptionDescription, true
}

// HasSubscriptionDescription returns a boolean if a field has been set.
func (o *SubscriptionModel) HasSubscriptionDescription() bool {
	if o != nil && !IsNil(o.SubscriptionDescription) {
		return true
	}

	return false
}

// SetSubscriptionDescription gets a reference to the given string and assigns it to the SubscriptionDescription field.
func (o *SubscriptionModel) SetSubscriptionDescription(v string) {
	o.SubscriptionDescription = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *SubscriptionModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *SubscriptionModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *SubscriptionModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *SubscriptionModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *SubscriptionModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *SubscriptionModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *SubscriptionModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *SubscriptionModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *SubscriptionModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *SubscriptionModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *SubscriptionModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *SubscriptionModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *SubscriptionModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *SubscriptionModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *SubscriptionModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *SubscriptionModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *SubscriptionModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *SubscriptionModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o SubscriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.SubscriptionTypeId) {
		toSerialize["subscriptionTypeId"] = o.SubscriptionTypeId
	}
	if !IsNil(o.SubscriptionDescription) {
		toSerialize["subscriptionDescription"] = o.SubscriptionDescription
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableSubscriptionModel struct {
	value *SubscriptionModel
	isSet bool
}

func (v NullableSubscriptionModel) Get() *SubscriptionModel {
	return v.value
}

func (v *NullableSubscriptionModel) Set(val *SubscriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionModel(val *SubscriptionModel) *NullableSubscriptionModel {
	return &NullableSubscriptionModel{value: val, isSet: true}
}

func (v NullableSubscriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


