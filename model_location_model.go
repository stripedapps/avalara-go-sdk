/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LocationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationModel{}

// LocationModel Location Model
type LocationModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Company Id
	CompanyId *int32 `json:"companyId,omitempty"`
	// Location Code
	LocationCode string `json:"locationCode"`
	// Description
	Description *string `json:"description,omitempty"`
	// Address Type Id
	AddressTypeId *string `json:"addressTypeId,omitempty"`
	// Address Category Id
	AddressCategoryId *string `json:"addressCategoryId,omitempty"`
	// Line1
	Line1 string `json:"line1"`
	// Line2
	Line2 *string `json:"line2,omitempty"`
	// Line3
	Line3 *string `json:"line3,omitempty"`
	// City
	City *string `json:"city,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// Postal Code
	PostalCode *string `json:"postalCode,omitempty"`
	// Country
	Country *string `json:"country,omitempty"`
	// State Assigned Code
	StateAssignedCode *string `json:"stateAssignedCode,omitempty"`
	// Is Default
	IsDefault *bool `json:"isDefault,omitempty"`
	// County
	County *string `json:"county,omitempty"`
	// Is Registered
	IsRegistered *bool `json:"isRegistered,omitempty"`
	// Dba Name
	DbaName *string `json:"dbaName,omitempty"`
	// Outlet Name
	OutletName *string `json:"outletName,omitempty"`
	// Start Date
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// End Date
	EndDate *time.Time `json:"endDate,omitempty"`
	// Last Transaction Date
	LastTransactionDate *time.Time `json:"lastTransactionDate,omitempty"`
	// Registered Date
	RegisteredDate *time.Time `json:"registeredDate,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewLocationModel instantiates a new LocationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationModel(locationCode string, line1 string) *LocationModel {
	this := LocationModel{}
	this.LocationCode = locationCode
	this.Line1 = line1
	return &this
}

// NewLocationModelWithDefaults instantiates a new LocationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationModelWithDefaults() *LocationModel {
	this := LocationModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LocationModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LocationModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LocationModel) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *LocationModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *LocationModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *LocationModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetLocationCode returns the LocationCode field value
func (o *LocationModel) GetLocationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationCode
}

// GetLocationCodeOk returns a tuple with the LocationCode field value
// and a boolean to check if the value has been set.
func (o *LocationModel) GetLocationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationCode, true
}

// SetLocationCode sets field value
func (o *LocationModel) SetLocationCode(v string) {
	o.LocationCode = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LocationModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LocationModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LocationModel) SetDescription(v string) {
	o.Description = &v
}

// GetAddressTypeId returns the AddressTypeId field value if set, zero value otherwise.
func (o *LocationModel) GetAddressTypeId() string {
	if o == nil || IsNil(o.AddressTypeId) {
		var ret string
		return ret
	}
	return *o.AddressTypeId
}

// GetAddressTypeIdOk returns a tuple with the AddressTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetAddressTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressTypeId) {
		return nil, false
	}
	return o.AddressTypeId, true
}

// HasAddressTypeId returns a boolean if a field has been set.
func (o *LocationModel) HasAddressTypeId() bool {
	if o != nil && !IsNil(o.AddressTypeId) {
		return true
	}

	return false
}

// SetAddressTypeId gets a reference to the given string and assigns it to the AddressTypeId field.
func (o *LocationModel) SetAddressTypeId(v string) {
	o.AddressTypeId = &v
}

// GetAddressCategoryId returns the AddressCategoryId field value if set, zero value otherwise.
func (o *LocationModel) GetAddressCategoryId() string {
	if o == nil || IsNil(o.AddressCategoryId) {
		var ret string
		return ret
	}
	return *o.AddressCategoryId
}

// GetAddressCategoryIdOk returns a tuple with the AddressCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetAddressCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressCategoryId) {
		return nil, false
	}
	return o.AddressCategoryId, true
}

// HasAddressCategoryId returns a boolean if a field has been set.
func (o *LocationModel) HasAddressCategoryId() bool {
	if o != nil && !IsNil(o.AddressCategoryId) {
		return true
	}

	return false
}

// SetAddressCategoryId gets a reference to the given string and assigns it to the AddressCategoryId field.
func (o *LocationModel) SetAddressCategoryId(v string) {
	o.AddressCategoryId = &v
}

// GetLine1 returns the Line1 field value
func (o *LocationModel) GetLine1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
func (o *LocationModel) GetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Line1, true
}

// SetLine1 sets field value
func (o *LocationModel) SetLine1(v string) {
	o.Line1 = v
}

// GetLine2 returns the Line2 field value if set, zero value otherwise.
func (o *LocationModel) GetLine2() string {
	if o == nil || IsNil(o.Line2) {
		var ret string
		return ret
	}
	return *o.Line2
}

// GetLine2Ok returns a tuple with the Line2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.Line2) {
		return nil, false
	}
	return o.Line2, true
}

// HasLine2 returns a boolean if a field has been set.
func (o *LocationModel) HasLine2() bool {
	if o != nil && !IsNil(o.Line2) {
		return true
	}

	return false
}

// SetLine2 gets a reference to the given string and assigns it to the Line2 field.
func (o *LocationModel) SetLine2(v string) {
	o.Line2 = &v
}

// GetLine3 returns the Line3 field value if set, zero value otherwise.
func (o *LocationModel) GetLine3() string {
	if o == nil || IsNil(o.Line3) {
		var ret string
		return ret
	}
	return *o.Line3
}

// GetLine3Ok returns a tuple with the Line3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.Line3) {
		return nil, false
	}
	return o.Line3, true
}

// HasLine3 returns a boolean if a field has been set.
func (o *LocationModel) HasLine3() bool {
	if o != nil && !IsNil(o.Line3) {
		return true
	}

	return false
}

// SetLine3 gets a reference to the given string and assigns it to the Line3 field.
func (o *LocationModel) SetLine3(v string) {
	o.Line3 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *LocationModel) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *LocationModel) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *LocationModel) SetCity(v string) {
	o.City = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *LocationModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *LocationModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *LocationModel) SetRegion(v string) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *LocationModel) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *LocationModel) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *LocationModel) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *LocationModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *LocationModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *LocationModel) SetCountry(v string) {
	o.Country = &v
}

// GetStateAssignedCode returns the StateAssignedCode field value if set, zero value otherwise.
func (o *LocationModel) GetStateAssignedCode() string {
	if o == nil || IsNil(o.StateAssignedCode) {
		var ret string
		return ret
	}
	return *o.StateAssignedCode
}

// GetStateAssignedCodeOk returns a tuple with the StateAssignedCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetStateAssignedCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StateAssignedCode) {
		return nil, false
	}
	return o.StateAssignedCode, true
}

// HasStateAssignedCode returns a boolean if a field has been set.
func (o *LocationModel) HasStateAssignedCode() bool {
	if o != nil && !IsNil(o.StateAssignedCode) {
		return true
	}

	return false
}

// SetStateAssignedCode gets a reference to the given string and assigns it to the StateAssignedCode field.
func (o *LocationModel) SetStateAssignedCode(v string) {
	o.StateAssignedCode = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *LocationModel) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *LocationModel) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *LocationModel) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetCounty returns the County field value if set, zero value otherwise.
func (o *LocationModel) GetCounty() string {
	if o == nil || IsNil(o.County) {
		var ret string
		return ret
	}
	return *o.County
}

// GetCountyOk returns a tuple with the County field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCountyOk() (*string, bool) {
	if o == nil || IsNil(o.County) {
		return nil, false
	}
	return o.County, true
}

// HasCounty returns a boolean if a field has been set.
func (o *LocationModel) HasCounty() bool {
	if o != nil && !IsNil(o.County) {
		return true
	}

	return false
}

// SetCounty gets a reference to the given string and assigns it to the County field.
func (o *LocationModel) SetCounty(v string) {
	o.County = &v
}

// GetIsRegistered returns the IsRegistered field value if set, zero value otherwise.
func (o *LocationModel) GetIsRegistered() bool {
	if o == nil || IsNil(o.IsRegistered) {
		var ret bool
		return ret
	}
	return *o.IsRegistered
}

// GetIsRegisteredOk returns a tuple with the IsRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetIsRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRegistered) {
		return nil, false
	}
	return o.IsRegistered, true
}

// HasIsRegistered returns a boolean if a field has been set.
func (o *LocationModel) HasIsRegistered() bool {
	if o != nil && !IsNil(o.IsRegistered) {
		return true
	}

	return false
}

// SetIsRegistered gets a reference to the given bool and assigns it to the IsRegistered field.
func (o *LocationModel) SetIsRegistered(v bool) {
	o.IsRegistered = &v
}

// GetDbaName returns the DbaName field value if set, zero value otherwise.
func (o *LocationModel) GetDbaName() string {
	if o == nil || IsNil(o.DbaName) {
		var ret string
		return ret
	}
	return *o.DbaName
}

// GetDbaNameOk returns a tuple with the DbaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetDbaNameOk() (*string, bool) {
	if o == nil || IsNil(o.DbaName) {
		return nil, false
	}
	return o.DbaName, true
}

// HasDbaName returns a boolean if a field has been set.
func (o *LocationModel) HasDbaName() bool {
	if o != nil && !IsNil(o.DbaName) {
		return true
	}

	return false
}

// SetDbaName gets a reference to the given string and assigns it to the DbaName field.
func (o *LocationModel) SetDbaName(v string) {
	o.DbaName = &v
}

// GetOutletName returns the OutletName field value if set, zero value otherwise.
func (o *LocationModel) GetOutletName() string {
	if o == nil || IsNil(o.OutletName) {
		var ret string
		return ret
	}
	return *o.OutletName
}

// GetOutletNameOk returns a tuple with the OutletName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetOutletNameOk() (*string, bool) {
	if o == nil || IsNil(o.OutletName) {
		return nil, false
	}
	return o.OutletName, true
}

// HasOutletName returns a boolean if a field has been set.
func (o *LocationModel) HasOutletName() bool {
	if o != nil && !IsNil(o.OutletName) {
		return true
	}

	return false
}

// SetOutletName gets a reference to the given string and assigns it to the OutletName field.
func (o *LocationModel) SetOutletName(v string) {
	o.OutletName = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *LocationModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *LocationModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *LocationModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *LocationModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *LocationModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *LocationModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetLastTransactionDate returns the LastTransactionDate field value if set, zero value otherwise.
func (o *LocationModel) GetLastTransactionDate() time.Time {
	if o == nil || IsNil(o.LastTransactionDate) {
		var ret time.Time
		return ret
	}
	return *o.LastTransactionDate
}

// GetLastTransactionDateOk returns a tuple with the LastTransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetLastTransactionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastTransactionDate) {
		return nil, false
	}
	return o.LastTransactionDate, true
}

// HasLastTransactionDate returns a boolean if a field has been set.
func (o *LocationModel) HasLastTransactionDate() bool {
	if o != nil && !IsNil(o.LastTransactionDate) {
		return true
	}

	return false
}

// SetLastTransactionDate gets a reference to the given time.Time and assigns it to the LastTransactionDate field.
func (o *LocationModel) SetLastTransactionDate(v time.Time) {
	o.LastTransactionDate = &v
}

// GetRegisteredDate returns the RegisteredDate field value if set, zero value otherwise.
func (o *LocationModel) GetRegisteredDate() time.Time {
	if o == nil || IsNil(o.RegisteredDate) {
		var ret time.Time
		return ret
	}
	return *o.RegisteredDate
}

// GetRegisteredDateOk returns a tuple with the RegisteredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetRegisteredDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RegisteredDate) {
		return nil, false
	}
	return o.RegisteredDate, true
}

// HasRegisteredDate returns a boolean if a field has been set.
func (o *LocationModel) HasRegisteredDate() bool {
	if o != nil && !IsNil(o.RegisteredDate) {
		return true
	}

	return false
}

// SetRegisteredDate gets a reference to the given time.Time and assigns it to the RegisteredDate field.
func (o *LocationModel) SetRegisteredDate(v time.Time) {
	o.RegisteredDate = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *LocationModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *LocationModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *LocationModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *LocationModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *LocationModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *LocationModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *LocationModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *LocationModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *LocationModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *LocationModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *LocationModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *LocationModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o LocationModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	toSerialize["locationCode"] = o.LocationCode
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AddressTypeId) {
		toSerialize["addressTypeId"] = o.AddressTypeId
	}
	if !IsNil(o.AddressCategoryId) {
		toSerialize["addressCategoryId"] = o.AddressCategoryId
	}
	toSerialize["line1"] = o.Line1
	if !IsNil(o.Line2) {
		toSerialize["line2"] = o.Line2
	}
	if !IsNil(o.Line3) {
		toSerialize["line3"] = o.Line3
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.StateAssignedCode) {
		toSerialize["stateAssignedCode"] = o.StateAssignedCode
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.County) {
		toSerialize["county"] = o.County
	}
	if !IsNil(o.IsRegistered) {
		toSerialize["isRegistered"] = o.IsRegistered
	}
	if !IsNil(o.DbaName) {
		toSerialize["dbaName"] = o.DbaName
	}
	if !IsNil(o.OutletName) {
		toSerialize["outletName"] = o.OutletName
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.LastTransactionDate) {
		toSerialize["lastTransactionDate"] = o.LastTransactionDate
	}
	if !IsNil(o.RegisteredDate) {
		toSerialize["registeredDate"] = o.RegisteredDate
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableLocationModel struct {
	value *LocationModel
	isSet bool
}

func (v NullableLocationModel) Get() *LocationModel {
	return v.value
}

func (v *NullableLocationModel) Set(val *LocationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationModel(val *LocationModel) *NullableLocationModel {
	return &NullableLocationModel{value: val, isSet: true}
}

func (v NullableLocationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


