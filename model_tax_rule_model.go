/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TaxRuleModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxRuleModel{}

// TaxRuleModel Tax Rule Model
type TaxRuleModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// CompanyId
	CompanyId *int32 `json:"companyId,omitempty"`
	// State FIPS
	StateFIPS *string `json:"stateFIPS,omitempty"`
	// Jurisdiction Name
	JurisName *string `json:"jurisName,omitempty"`
	// Jurisdiction Code
	JurisCode string `json:"jurisCode"`
	// Jurisdiction Type Id
	JurisTypeId *string `json:"jurisTypeId,omitempty"`
	// Tax Code Id
	TaxCodeId *int32 `json:"taxCodeId,omitempty"`
	// Tax Code
	TaxCode *string `json:"taxCode,omitempty"`
	// Customer Usage Type
	CustomerUsageType *string `json:"customerUsageType,omitempty"`
	// Tax Type Id
	TaxTypeId *string `json:"taxTypeId,omitempty"`
	// Rate Type Id
	RateTypeId *string `json:"rateTypeId,omitempty"`
	// Tax Rule Type Id
	TaxRuleTypeId *string `json:"taxRuleTypeId,omitempty"`
	// Is All Juris
	IsAllJuris *bool `json:"isAllJuris,omitempty"`
	// Value
	Value *float64 `json:"value,omitempty"`
	// Cap
	Cap *float64 `json:"cap,omitempty"`
	// Threshold
	Threshold *float64 `json:"threshold,omitempty"`
	// Options
	Options *string `json:"options,omitempty"`
	// Effective Date
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	// End Date
	EndDate *time.Time `json:"endDate,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// County FIPS
	CountyFIPS *string `json:"countyFIPS,omitempty"`
	// Is STPro
	IsSTPro *bool `json:"isSTPro,omitempty"`
	// Country
	Country string `json:"country"`
	// Region
	Region string `json:"region"`
	// Sourcing
	Sourcing *string `json:"sourcing,omitempty"`
	// The date when this record was created (read only)
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The User ID of the user who created this record (read only)
	CreatedUserId *int32 `json:"createdUserId,omitempty"`
	// The date/time when this record was last modified (read only)
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// The user ID of the user who last modified this record (read only)
	ModifiedUserId *int32 `json:"modifiedUserId,omitempty"`
}

// NewTaxRuleModel instantiates a new TaxRuleModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxRuleModel(jurisCode string, country string, region string) *TaxRuleModel {
	this := TaxRuleModel{}
	this.JurisCode = jurisCode
	this.Country = country
	this.Region = region
	return &this
}

// NewTaxRuleModelWithDefaults instantiates a new TaxRuleModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxRuleModelWithDefaults() *TaxRuleModel {
	this := TaxRuleModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaxRuleModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaxRuleModel) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *TaxRuleModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetStateFIPS returns the StateFIPS field value if set, zero value otherwise.
func (o *TaxRuleModel) GetStateFIPS() string {
	if o == nil || IsNil(o.StateFIPS) {
		var ret string
		return ret
	}
	return *o.StateFIPS
}

// GetStateFIPSOk returns a tuple with the StateFIPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetStateFIPSOk() (*string, bool) {
	if o == nil || IsNil(o.StateFIPS) {
		return nil, false
	}
	return o.StateFIPS, true
}

// HasStateFIPS returns a boolean if a field has been set.
func (o *TaxRuleModel) HasStateFIPS() bool {
	if o != nil && !IsNil(o.StateFIPS) {
		return true
	}

	return false
}

// SetStateFIPS gets a reference to the given string and assigns it to the StateFIPS field.
func (o *TaxRuleModel) SetStateFIPS(v string) {
	o.StateFIPS = &v
}

// GetJurisName returns the JurisName field value if set, zero value otherwise.
func (o *TaxRuleModel) GetJurisName() string {
	if o == nil || IsNil(o.JurisName) {
		var ret string
		return ret
	}
	return *o.JurisName
}

// GetJurisNameOk returns a tuple with the JurisName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetJurisNameOk() (*string, bool) {
	if o == nil || IsNil(o.JurisName) {
		return nil, false
	}
	return o.JurisName, true
}

// HasJurisName returns a boolean if a field has been set.
func (o *TaxRuleModel) HasJurisName() bool {
	if o != nil && !IsNil(o.JurisName) {
		return true
	}

	return false
}

// SetJurisName gets a reference to the given string and assigns it to the JurisName field.
func (o *TaxRuleModel) SetJurisName(v string) {
	o.JurisName = &v
}

// GetJurisCode returns the JurisCode field value
func (o *TaxRuleModel) GetJurisCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JurisCode
}

// GetJurisCodeOk returns a tuple with the JurisCode field value
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetJurisCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JurisCode, true
}

// SetJurisCode sets field value
func (o *TaxRuleModel) SetJurisCode(v string) {
	o.JurisCode = v
}

// GetJurisTypeId returns the JurisTypeId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetJurisTypeId() string {
	if o == nil || IsNil(o.JurisTypeId) {
		var ret string
		return ret
	}
	return *o.JurisTypeId
}

// GetJurisTypeIdOk returns a tuple with the JurisTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetJurisTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.JurisTypeId) {
		return nil, false
	}
	return o.JurisTypeId, true
}

// HasJurisTypeId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasJurisTypeId() bool {
	if o != nil && !IsNil(o.JurisTypeId) {
		return true
	}

	return false
}

// SetJurisTypeId gets a reference to the given string and assigns it to the JurisTypeId field.
func (o *TaxRuleModel) SetJurisTypeId(v string) {
	o.JurisTypeId = &v
}

// GetTaxCodeId returns the TaxCodeId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetTaxCodeId() int32 {
	if o == nil || IsNil(o.TaxCodeId) {
		var ret int32
		return ret
	}
	return *o.TaxCodeId
}

// GetTaxCodeIdOk returns a tuple with the TaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetTaxCodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxCodeId) {
		return nil, false
	}
	return o.TaxCodeId, true
}

// HasTaxCodeId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasTaxCodeId() bool {
	if o != nil && !IsNil(o.TaxCodeId) {
		return true
	}

	return false
}

// SetTaxCodeId gets a reference to the given int32 and assigns it to the TaxCodeId field.
func (o *TaxRuleModel) SetTaxCodeId(v int32) {
	o.TaxCodeId = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *TaxRuleModel) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *TaxRuleModel) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *TaxRuleModel) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetCustomerUsageType returns the CustomerUsageType field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCustomerUsageType() string {
	if o == nil || IsNil(o.CustomerUsageType) {
		var ret string
		return ret
	}
	return *o.CustomerUsageType
}

// GetCustomerUsageTypeOk returns a tuple with the CustomerUsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCustomerUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerUsageType) {
		return nil, false
	}
	return o.CustomerUsageType, true
}

// HasCustomerUsageType returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCustomerUsageType() bool {
	if o != nil && !IsNil(o.CustomerUsageType) {
		return true
	}

	return false
}

// SetCustomerUsageType gets a reference to the given string and assigns it to the CustomerUsageType field.
func (o *TaxRuleModel) SetCustomerUsageType(v string) {
	o.CustomerUsageType = &v
}

// GetTaxTypeId returns the TaxTypeId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetTaxTypeId() string {
	if o == nil || IsNil(o.TaxTypeId) {
		var ret string
		return ret
	}
	return *o.TaxTypeId
}

// GetTaxTypeIdOk returns a tuple with the TaxTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetTaxTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxTypeId) {
		return nil, false
	}
	return o.TaxTypeId, true
}

// HasTaxTypeId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasTaxTypeId() bool {
	if o != nil && !IsNil(o.TaxTypeId) {
		return true
	}

	return false
}

// SetTaxTypeId gets a reference to the given string and assigns it to the TaxTypeId field.
func (o *TaxRuleModel) SetTaxTypeId(v string) {
	o.TaxTypeId = &v
}

// GetRateTypeId returns the RateTypeId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetRateTypeId() string {
	if o == nil || IsNil(o.RateTypeId) {
		var ret string
		return ret
	}
	return *o.RateTypeId
}

// GetRateTypeIdOk returns a tuple with the RateTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetRateTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RateTypeId) {
		return nil, false
	}
	return o.RateTypeId, true
}

// HasRateTypeId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasRateTypeId() bool {
	if o != nil && !IsNil(o.RateTypeId) {
		return true
	}

	return false
}

// SetRateTypeId gets a reference to the given string and assigns it to the RateTypeId field.
func (o *TaxRuleModel) SetRateTypeId(v string) {
	o.RateTypeId = &v
}

// GetTaxRuleTypeId returns the TaxRuleTypeId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetTaxRuleTypeId() string {
	if o == nil || IsNil(o.TaxRuleTypeId) {
		var ret string
		return ret
	}
	return *o.TaxRuleTypeId
}

// GetTaxRuleTypeIdOk returns a tuple with the TaxRuleTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetTaxRuleTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRuleTypeId) {
		return nil, false
	}
	return o.TaxRuleTypeId, true
}

// HasTaxRuleTypeId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasTaxRuleTypeId() bool {
	if o != nil && !IsNil(o.TaxRuleTypeId) {
		return true
	}

	return false
}

// SetTaxRuleTypeId gets a reference to the given string and assigns it to the TaxRuleTypeId field.
func (o *TaxRuleModel) SetTaxRuleTypeId(v string) {
	o.TaxRuleTypeId = &v
}

// GetIsAllJuris returns the IsAllJuris field value if set, zero value otherwise.
func (o *TaxRuleModel) GetIsAllJuris() bool {
	if o == nil || IsNil(o.IsAllJuris) {
		var ret bool
		return ret
	}
	return *o.IsAllJuris
}

// GetIsAllJurisOk returns a tuple with the IsAllJuris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetIsAllJurisOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllJuris) {
		return nil, false
	}
	return o.IsAllJuris, true
}

// HasIsAllJuris returns a boolean if a field has been set.
func (o *TaxRuleModel) HasIsAllJuris() bool {
	if o != nil && !IsNil(o.IsAllJuris) {
		return true
	}

	return false
}

// SetIsAllJuris gets a reference to the given bool and assigns it to the IsAllJuris field.
func (o *TaxRuleModel) SetIsAllJuris(v bool) {
	o.IsAllJuris = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TaxRuleModel) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TaxRuleModel) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *TaxRuleModel) SetValue(v float64) {
	o.Value = &v
}

// GetCap returns the Cap field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCap() float64 {
	if o == nil || IsNil(o.Cap) {
		var ret float64
		return ret
	}
	return *o.Cap
}

// GetCapOk returns a tuple with the Cap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCapOk() (*float64, bool) {
	if o == nil || IsNil(o.Cap) {
		return nil, false
	}
	return o.Cap, true
}

// HasCap returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCap() bool {
	if o != nil && !IsNil(o.Cap) {
		return true
	}

	return false
}

// SetCap gets a reference to the given float64 and assigns it to the Cap field.
func (o *TaxRuleModel) SetCap(v float64) {
	o.Cap = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *TaxRuleModel) GetThreshold() float64 {
	if o == nil || IsNil(o.Threshold) {
		var ret float64
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *TaxRuleModel) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float64 and assigns it to the Threshold field.
func (o *TaxRuleModel) SetThreshold(v float64) {
	o.Threshold = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *TaxRuleModel) GetOptions() string {
	if o == nil || IsNil(o.Options) {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *TaxRuleModel) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *TaxRuleModel) SetOptions(v string) {
	o.Options = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *TaxRuleModel) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *TaxRuleModel) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *TaxRuleModel) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *TaxRuleModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *TaxRuleModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *TaxRuleModel) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TaxRuleModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TaxRuleModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TaxRuleModel) SetDescription(v string) {
	o.Description = &v
}

// GetCountyFIPS returns the CountyFIPS field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCountyFIPS() string {
	if o == nil || IsNil(o.CountyFIPS) {
		var ret string
		return ret
	}
	return *o.CountyFIPS
}

// GetCountyFIPSOk returns a tuple with the CountyFIPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCountyFIPSOk() (*string, bool) {
	if o == nil || IsNil(o.CountyFIPS) {
		return nil, false
	}
	return o.CountyFIPS, true
}

// HasCountyFIPS returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCountyFIPS() bool {
	if o != nil && !IsNil(o.CountyFIPS) {
		return true
	}

	return false
}

// SetCountyFIPS gets a reference to the given string and assigns it to the CountyFIPS field.
func (o *TaxRuleModel) SetCountyFIPS(v string) {
	o.CountyFIPS = &v
}

// GetIsSTPro returns the IsSTPro field value if set, zero value otherwise.
func (o *TaxRuleModel) GetIsSTPro() bool {
	if o == nil || IsNil(o.IsSTPro) {
		var ret bool
		return ret
	}
	return *o.IsSTPro
}

// GetIsSTProOk returns a tuple with the IsSTPro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetIsSTProOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSTPro) {
		return nil, false
	}
	return o.IsSTPro, true
}

// HasIsSTPro returns a boolean if a field has been set.
func (o *TaxRuleModel) HasIsSTPro() bool {
	if o != nil && !IsNil(o.IsSTPro) {
		return true
	}

	return false
}

// SetIsSTPro gets a reference to the given bool and assigns it to the IsSTPro field.
func (o *TaxRuleModel) SetIsSTPro(v bool) {
	o.IsSTPro = &v
}

// GetCountry returns the Country field value
func (o *TaxRuleModel) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *TaxRuleModel) SetCountry(v string) {
	o.Country = v
}

// GetRegion returns the Region field value
func (o *TaxRuleModel) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *TaxRuleModel) SetRegion(v string) {
	o.Region = v
}

// GetSourcing returns the Sourcing field value if set, zero value otherwise.
func (o *TaxRuleModel) GetSourcing() string {
	if o == nil || IsNil(o.Sourcing) {
		var ret string
		return ret
	}
	return *o.Sourcing
}

// GetSourcingOk returns a tuple with the Sourcing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetSourcingOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcing) {
		return nil, false
	}
	return o.Sourcing, true
}

// HasSourcing returns a boolean if a field has been set.
func (o *TaxRuleModel) HasSourcing() bool {
	if o != nil && !IsNil(o.Sourcing) {
		return true
	}

	return false
}

// SetSourcing gets a reference to the given string and assigns it to the Sourcing field.
func (o *TaxRuleModel) SetSourcing(v string) {
	o.Sourcing = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *TaxRuleModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetCreatedUserId() int32 {
	if o == nil || IsNil(o.CreatedUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetCreatedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedUserId) {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasCreatedUserId() bool {
	if o != nil && !IsNil(o.CreatedUserId) {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given int32 and assigns it to the CreatedUserId field.
func (o *TaxRuleModel) SetCreatedUserId(v int32) {
	o.CreatedUserId = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *TaxRuleModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *TaxRuleModel) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given time.Time and assigns it to the ModifiedDate field.
func (o *TaxRuleModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate = &v
}

// GetModifiedUserId returns the ModifiedUserId field value if set, zero value otherwise.
func (o *TaxRuleModel) GetModifiedUserId() int32 {
	if o == nil || IsNil(o.ModifiedUserId) {
		var ret int32
		return ret
	}
	return *o.ModifiedUserId
}

// GetModifiedUserIdOk returns a tuple with the ModifiedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleModel) GetModifiedUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedUserId) {
		return nil, false
	}
	return o.ModifiedUserId, true
}

// HasModifiedUserId returns a boolean if a field has been set.
func (o *TaxRuleModel) HasModifiedUserId() bool {
	if o != nil && !IsNil(o.ModifiedUserId) {
		return true
	}

	return false
}

// SetModifiedUserId gets a reference to the given int32 and assigns it to the ModifiedUserId field.
func (o *TaxRuleModel) SetModifiedUserId(v int32) {
	o.ModifiedUserId = &v
}

func (o TaxRuleModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxRuleModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.StateFIPS) {
		toSerialize["stateFIPS"] = o.StateFIPS
	}
	if !IsNil(o.JurisName) {
		toSerialize["jurisName"] = o.JurisName
	}
	toSerialize["jurisCode"] = o.JurisCode
	if !IsNil(o.JurisTypeId) {
		toSerialize["jurisTypeId"] = o.JurisTypeId
	}
	if !IsNil(o.TaxCodeId) {
		toSerialize["taxCodeId"] = o.TaxCodeId
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.CustomerUsageType) {
		toSerialize["customerUsageType"] = o.CustomerUsageType
	}
	if !IsNil(o.TaxTypeId) {
		toSerialize["taxTypeId"] = o.TaxTypeId
	}
	if !IsNil(o.RateTypeId) {
		toSerialize["rateTypeId"] = o.RateTypeId
	}
	if !IsNil(o.TaxRuleTypeId) {
		toSerialize["taxRuleTypeId"] = o.TaxRuleTypeId
	}
	if !IsNil(o.IsAllJuris) {
		toSerialize["isAllJuris"] = o.IsAllJuris
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Cap) {
		toSerialize["cap"] = o.Cap
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CountyFIPS) {
		toSerialize["countyFIPS"] = o.CountyFIPS
	}
	if !IsNil(o.IsSTPro) {
		toSerialize["isSTPro"] = o.IsSTPro
	}
	toSerialize["country"] = o.Country
	toSerialize["region"] = o.Region
	if !IsNil(o.Sourcing) {
		toSerialize["sourcing"] = o.Sourcing
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedUserId) {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedUserId) {
		toSerialize["modifiedUserId"] = o.ModifiedUserId
	}
	return toSerialize, nil
}

type NullableTaxRuleModel struct {
	value *TaxRuleModel
	isSet bool
}

func (v NullableTaxRuleModel) Get() *TaxRuleModel {
	return v.value
}

func (v *NullableTaxRuleModel) Set(val *TaxRuleModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxRuleModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxRuleModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxRuleModel(val *TaxRuleModel) *NullableTaxRuleModel {
	return &NullableTaxRuleModel{value: val, isSet: true}
}

func (v NullableTaxRuleModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxRuleModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


