/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TransactionAddressModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionAddressModel{}

// TransactionAddressModel An address used within this transaction
type TransactionAddressModel struct {
	// DocumentAddressId
	Id *int64 `json:"id,omitempty"`
	// DocumentId
	TransactionId *int64 `json:"transactionId,omitempty"`
	// BoundaryLevel
	BoundaryLevel *string `json:"boundaryLevel,omitempty"`
	// AddressLine1
	Line1 *string `json:"line1,omitempty"`
	// AddressLine2
	Line2 *string `json:"line2,omitempty"`
	// AddressLine3
	Line3 *string `json:"line3,omitempty"`
	// City
	City *string `json:"city,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// PostalCode
	PostalCode *string `json:"postalCode,omitempty"`
	// Country
	Country *string `json:"country,omitempty"`
	// TaxRegionId
	TaxRegionId *int32 `json:"taxRegionId,omitempty"`
}

// NewTransactionAddressModel instantiates a new TransactionAddressModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionAddressModel() *TransactionAddressModel {
	this := TransactionAddressModel{}
	return &this
}

// NewTransactionAddressModelWithDefaults instantiates a new TransactionAddressModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionAddressModelWithDefaults() *TransactionAddressModel {
	this := TransactionAddressModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TransactionAddressModel) SetId(v int64) {
	o.Id = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetTransactionId() int64 {
	if o == nil || IsNil(o.TransactionId) {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetTransactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *TransactionAddressModel) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetBoundaryLevel returns the BoundaryLevel field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetBoundaryLevel() string {
	if o == nil || IsNil(o.BoundaryLevel) {
		var ret string
		return ret
	}
	return *o.BoundaryLevel
}

// GetBoundaryLevelOk returns a tuple with the BoundaryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetBoundaryLevelOk() (*string, bool) {
	if o == nil || IsNil(o.BoundaryLevel) {
		return nil, false
	}
	return o.BoundaryLevel, true
}

// HasBoundaryLevel returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasBoundaryLevel() bool {
	if o != nil && !IsNil(o.BoundaryLevel) {
		return true
	}

	return false
}

// SetBoundaryLevel gets a reference to the given string and assigns it to the BoundaryLevel field.
func (o *TransactionAddressModel) SetBoundaryLevel(v string) {
	o.BoundaryLevel = &v
}

// GetLine1 returns the Line1 field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetLine1() string {
	if o == nil || IsNil(o.Line1) {
		var ret string
		return ret
	}
	return *o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.Line1) {
		return nil, false
	}
	return o.Line1, true
}

// HasLine1 returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasLine1() bool {
	if o != nil && !IsNil(o.Line1) {
		return true
	}

	return false
}

// SetLine1 gets a reference to the given string and assigns it to the Line1 field.
func (o *TransactionAddressModel) SetLine1(v string) {
	o.Line1 = &v
}

// GetLine2 returns the Line2 field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetLine2() string {
	if o == nil || IsNil(o.Line2) {
		var ret string
		return ret
	}
	return *o.Line2
}

// GetLine2Ok returns a tuple with the Line2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.Line2) {
		return nil, false
	}
	return o.Line2, true
}

// HasLine2 returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasLine2() bool {
	if o != nil && !IsNil(o.Line2) {
		return true
	}

	return false
}

// SetLine2 gets a reference to the given string and assigns it to the Line2 field.
func (o *TransactionAddressModel) SetLine2(v string) {
	o.Line2 = &v
}

// GetLine3 returns the Line3 field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetLine3() string {
	if o == nil || IsNil(o.Line3) {
		var ret string
		return ret
	}
	return *o.Line3
}

// GetLine3Ok returns a tuple with the Line3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.Line3) {
		return nil, false
	}
	return o.Line3, true
}

// HasLine3 returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasLine3() bool {
	if o != nil && !IsNil(o.Line3) {
		return true
	}

	return false
}

// SetLine3 gets a reference to the given string and assigns it to the Line3 field.
func (o *TransactionAddressModel) SetLine3(v string) {
	o.Line3 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *TransactionAddressModel) SetCity(v string) {
	o.City = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *TransactionAddressModel) SetRegion(v string) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *TransactionAddressModel) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *TransactionAddressModel) SetCountry(v string) {
	o.Country = &v
}

// GetTaxRegionId returns the TaxRegionId field value if set, zero value otherwise.
func (o *TransactionAddressModel) GetTaxRegionId() int32 {
	if o == nil || IsNil(o.TaxRegionId) {
		var ret int32
		return ret
	}
	return *o.TaxRegionId
}

// GetTaxRegionIdOk returns a tuple with the TaxRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressModel) GetTaxRegionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxRegionId) {
		return nil, false
	}
	return o.TaxRegionId, true
}

// HasTaxRegionId returns a boolean if a field has been set.
func (o *TransactionAddressModel) HasTaxRegionId() bool {
	if o != nil && !IsNil(o.TaxRegionId) {
		return true
	}

	return false
}

// SetTaxRegionId gets a reference to the given int32 and assigns it to the TaxRegionId field.
func (o *TransactionAddressModel) SetTaxRegionId(v int32) {
	o.TaxRegionId = &v
}

func (o TransactionAddressModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionAddressModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.BoundaryLevel) {
		toSerialize["boundaryLevel"] = o.BoundaryLevel
	}
	if !IsNil(o.Line1) {
		toSerialize["line1"] = o.Line1
	}
	if !IsNil(o.Line2) {
		toSerialize["line2"] = o.Line2
	}
	if !IsNil(o.Line3) {
		toSerialize["line3"] = o.Line3
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.TaxRegionId) {
		toSerialize["taxRegionId"] = o.TaxRegionId
	}
	return toSerialize, nil
}

type NullableTransactionAddressModel struct {
	value *TransactionAddressModel
	isSet bool
}

func (v NullableTransactionAddressModel) Get() *TransactionAddressModel {
	return v.value
}

func (v *NullableTransactionAddressModel) Set(val *TransactionAddressModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionAddressModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionAddressModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionAddressModel(val *TransactionAddressModel) *NullableTransactionAddressModel {
	return &NullableTransactionAddressModel{value: val, isSet: true}
}

func (v NullableTransactionAddressModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionAddressModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


