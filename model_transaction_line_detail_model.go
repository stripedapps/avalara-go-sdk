/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TransactionLineDetailModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionLineDetailModel{}

// TransactionLineDetailModel An individual tax detail element for this line
type TransactionLineDetailModel struct {
	// DocumentLineDetailId
	Id *int64 `json:"id,omitempty"`
	// DocumentLineId
	TransactionLineId *int64 `json:"transactionLineId,omitempty"`
	// DocumentId
	TransactionId *int64 `json:"transactionId,omitempty"`
	// AddressId
	AddressId *int64 `json:"addressId,omitempty"`
	// Country
	Country *string `json:"country,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// CountyFips
	CountyFIPS *string `json:"countyFIPS,omitempty"`
	// StateFips
	StateFIPS *string `json:"stateFIPS,omitempty"`
	// ExemptAmount
	ExemptAmount *float64 `json:"exemptAmount,omitempty"`
	// ExemptReasonId
	ExemptReasonId *int32 `json:"exemptReasonId,omitempty"`
	// InState
	InState *bool `json:"inState,omitempty"`
	// JurisCode
	JurisCode *string `json:"jurisCode,omitempty"`
	// JurisName
	JurisName *string `json:"jurisName,omitempty"`
	// JurisdictionId
	JurisdictionId *int32 `json:"jurisdictionId,omitempty"`
	// JurisTypeId
	JurisType *string `json:"jurisType,omitempty"`
	// NonTaxableAmount
	NonTaxableAmount *float64 `json:"nonTaxableAmount,omitempty"`
	// NonTaxableRuleId
	NonTaxableRuleId *int32 `json:"nonTaxableRuleId,omitempty"`
	// NonTaxableTypeId
	NonTaxableType *string `json:"nonTaxableType,omitempty"`
	// Rate
	Rate *float64 `json:"rate,omitempty"`
	// RateRuleId
	RateRuleId *int32 `json:"rateRuleId,omitempty"`
	// RateSourceId
	RateSourceId *int32 `json:"rateSourceId,omitempty"`
	// SignatureCode
	SignatureCode *string `json:"signatureCode,omitempty"`
	// SERCode
	SerCode *string `json:"serCode,omitempty"`
	// Sourcing
	Sourcing *string `json:"sourcing,omitempty"`
	// StateAssignedNo
	StateAssignedNo *string `json:"stateAssignedNo,omitempty"`
	// Tax
	Tax *float64 `json:"tax,omitempty"`
	// TaxableAmount
	TaxableAmount *float64 `json:"taxableAmount,omitempty"`
	// TaxTypeId
	TaxType *string `json:"taxType,omitempty"`
	// TaxName
	TaxName *string `json:"taxName,omitempty"`
	// TaxAuthorityTypeId
	TaxAuthorityTypeId *int32 `json:"taxAuthorityTypeId,omitempty"`
	// TaxRegionId
	TaxRegionId *int32 `json:"taxRegionId,omitempty"`
	// TaxCalculated
	TaxCalculated *float64 `json:"taxCalculated,omitempty"`
	// TaxOverride
	TaxOverride *float64 `json:"taxOverride,omitempty"`
	// RateTypeId
	RateType *string `json:"rateType,omitempty"`
}

// NewTransactionLineDetailModel instantiates a new TransactionLineDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionLineDetailModel() *TransactionLineDetailModel {
	this := TransactionLineDetailModel{}
	return &this
}

// NewTransactionLineDetailModelWithDefaults instantiates a new TransactionLineDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionLineDetailModelWithDefaults() *TransactionLineDetailModel {
	this := TransactionLineDetailModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TransactionLineDetailModel) SetId(v int64) {
	o.Id = &v
}

// GetTransactionLineId returns the TransactionLineId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTransactionLineId() int64 {
	if o == nil || IsNil(o.TransactionLineId) {
		var ret int64
		return ret
	}
	return *o.TransactionLineId
}

// GetTransactionLineIdOk returns a tuple with the TransactionLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTransactionLineIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TransactionLineId) {
		return nil, false
	}
	return o.TransactionLineId, true
}

// HasTransactionLineId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTransactionLineId() bool {
	if o != nil && !IsNil(o.TransactionLineId) {
		return true
	}

	return false
}

// SetTransactionLineId gets a reference to the given int64 and assigns it to the TransactionLineId field.
func (o *TransactionLineDetailModel) SetTransactionLineId(v int64) {
	o.TransactionLineId = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTransactionId() int64 {
	if o == nil || IsNil(o.TransactionId) {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTransactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *TransactionLineDetailModel) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetAddressId() int64 {
	if o == nil || IsNil(o.AddressId) {
		var ret int64
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given int64 and assigns it to the AddressId field.
func (o *TransactionLineDetailModel) SetAddressId(v int64) {
	o.AddressId = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *TransactionLineDetailModel) SetCountry(v string) {
	o.Country = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *TransactionLineDetailModel) SetRegion(v string) {
	o.Region = &v
}

// GetCountyFIPS returns the CountyFIPS field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetCountyFIPS() string {
	if o == nil || IsNil(o.CountyFIPS) {
		var ret string
		return ret
	}
	return *o.CountyFIPS
}

// GetCountyFIPSOk returns a tuple with the CountyFIPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetCountyFIPSOk() (*string, bool) {
	if o == nil || IsNil(o.CountyFIPS) {
		return nil, false
	}
	return o.CountyFIPS, true
}

// HasCountyFIPS returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasCountyFIPS() bool {
	if o != nil && !IsNil(o.CountyFIPS) {
		return true
	}

	return false
}

// SetCountyFIPS gets a reference to the given string and assigns it to the CountyFIPS field.
func (o *TransactionLineDetailModel) SetCountyFIPS(v string) {
	o.CountyFIPS = &v
}

// GetStateFIPS returns the StateFIPS field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetStateFIPS() string {
	if o == nil || IsNil(o.StateFIPS) {
		var ret string
		return ret
	}
	return *o.StateFIPS
}

// GetStateFIPSOk returns a tuple with the StateFIPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetStateFIPSOk() (*string, bool) {
	if o == nil || IsNil(o.StateFIPS) {
		return nil, false
	}
	return o.StateFIPS, true
}

// HasStateFIPS returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasStateFIPS() bool {
	if o != nil && !IsNil(o.StateFIPS) {
		return true
	}

	return false
}

// SetStateFIPS gets a reference to the given string and assigns it to the StateFIPS field.
func (o *TransactionLineDetailModel) SetStateFIPS(v string) {
	o.StateFIPS = &v
}

// GetExemptAmount returns the ExemptAmount field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetExemptAmount() float64 {
	if o == nil || IsNil(o.ExemptAmount) {
		var ret float64
		return ret
	}
	return *o.ExemptAmount
}

// GetExemptAmountOk returns a tuple with the ExemptAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetExemptAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.ExemptAmount) {
		return nil, false
	}
	return o.ExemptAmount, true
}

// HasExemptAmount returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasExemptAmount() bool {
	if o != nil && !IsNil(o.ExemptAmount) {
		return true
	}

	return false
}

// SetExemptAmount gets a reference to the given float64 and assigns it to the ExemptAmount field.
func (o *TransactionLineDetailModel) SetExemptAmount(v float64) {
	o.ExemptAmount = &v
}

// GetExemptReasonId returns the ExemptReasonId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetExemptReasonId() int32 {
	if o == nil || IsNil(o.ExemptReasonId) {
		var ret int32
		return ret
	}
	return *o.ExemptReasonId
}

// GetExemptReasonIdOk returns a tuple with the ExemptReasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetExemptReasonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExemptReasonId) {
		return nil, false
	}
	return o.ExemptReasonId, true
}

// HasExemptReasonId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasExemptReasonId() bool {
	if o != nil && !IsNil(o.ExemptReasonId) {
		return true
	}

	return false
}

// SetExemptReasonId gets a reference to the given int32 and assigns it to the ExemptReasonId field.
func (o *TransactionLineDetailModel) SetExemptReasonId(v int32) {
	o.ExemptReasonId = &v
}

// GetInState returns the InState field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetInState() bool {
	if o == nil || IsNil(o.InState) {
		var ret bool
		return ret
	}
	return *o.InState
}

// GetInStateOk returns a tuple with the InState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetInStateOk() (*bool, bool) {
	if o == nil || IsNil(o.InState) {
		return nil, false
	}
	return o.InState, true
}

// HasInState returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasInState() bool {
	if o != nil && !IsNil(o.InState) {
		return true
	}

	return false
}

// SetInState gets a reference to the given bool and assigns it to the InState field.
func (o *TransactionLineDetailModel) SetInState(v bool) {
	o.InState = &v
}

// GetJurisCode returns the JurisCode field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetJurisCode() string {
	if o == nil || IsNil(o.JurisCode) {
		var ret string
		return ret
	}
	return *o.JurisCode
}

// GetJurisCodeOk returns a tuple with the JurisCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetJurisCodeOk() (*string, bool) {
	if o == nil || IsNil(o.JurisCode) {
		return nil, false
	}
	return o.JurisCode, true
}

// HasJurisCode returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasJurisCode() bool {
	if o != nil && !IsNil(o.JurisCode) {
		return true
	}

	return false
}

// SetJurisCode gets a reference to the given string and assigns it to the JurisCode field.
func (o *TransactionLineDetailModel) SetJurisCode(v string) {
	o.JurisCode = &v
}

// GetJurisName returns the JurisName field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetJurisName() string {
	if o == nil || IsNil(o.JurisName) {
		var ret string
		return ret
	}
	return *o.JurisName
}

// GetJurisNameOk returns a tuple with the JurisName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetJurisNameOk() (*string, bool) {
	if o == nil || IsNil(o.JurisName) {
		return nil, false
	}
	return o.JurisName, true
}

// HasJurisName returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasJurisName() bool {
	if o != nil && !IsNil(o.JurisName) {
		return true
	}

	return false
}

// SetJurisName gets a reference to the given string and assigns it to the JurisName field.
func (o *TransactionLineDetailModel) SetJurisName(v string) {
	o.JurisName = &v
}

// GetJurisdictionId returns the JurisdictionId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetJurisdictionId() int32 {
	if o == nil || IsNil(o.JurisdictionId) {
		var ret int32
		return ret
	}
	return *o.JurisdictionId
}

// GetJurisdictionIdOk returns a tuple with the JurisdictionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetJurisdictionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JurisdictionId) {
		return nil, false
	}
	return o.JurisdictionId, true
}

// HasJurisdictionId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasJurisdictionId() bool {
	if o != nil && !IsNil(o.JurisdictionId) {
		return true
	}

	return false
}

// SetJurisdictionId gets a reference to the given int32 and assigns it to the JurisdictionId field.
func (o *TransactionLineDetailModel) SetJurisdictionId(v int32) {
	o.JurisdictionId = &v
}

// GetJurisType returns the JurisType field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetJurisType() string {
	if o == nil || IsNil(o.JurisType) {
		var ret string
		return ret
	}
	return *o.JurisType
}

// GetJurisTypeOk returns a tuple with the JurisType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetJurisTypeOk() (*string, bool) {
	if o == nil || IsNil(o.JurisType) {
		return nil, false
	}
	return o.JurisType, true
}

// HasJurisType returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasJurisType() bool {
	if o != nil && !IsNil(o.JurisType) {
		return true
	}

	return false
}

// SetJurisType gets a reference to the given string and assigns it to the JurisType field.
func (o *TransactionLineDetailModel) SetJurisType(v string) {
	o.JurisType = &v
}

// GetNonTaxableAmount returns the NonTaxableAmount field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetNonTaxableAmount() float64 {
	if o == nil || IsNil(o.NonTaxableAmount) {
		var ret float64
		return ret
	}
	return *o.NonTaxableAmount
}

// GetNonTaxableAmountOk returns a tuple with the NonTaxableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetNonTaxableAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.NonTaxableAmount) {
		return nil, false
	}
	return o.NonTaxableAmount, true
}

// HasNonTaxableAmount returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasNonTaxableAmount() bool {
	if o != nil && !IsNil(o.NonTaxableAmount) {
		return true
	}

	return false
}

// SetNonTaxableAmount gets a reference to the given float64 and assigns it to the NonTaxableAmount field.
func (o *TransactionLineDetailModel) SetNonTaxableAmount(v float64) {
	o.NonTaxableAmount = &v
}

// GetNonTaxableRuleId returns the NonTaxableRuleId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetNonTaxableRuleId() int32 {
	if o == nil || IsNil(o.NonTaxableRuleId) {
		var ret int32
		return ret
	}
	return *o.NonTaxableRuleId
}

// GetNonTaxableRuleIdOk returns a tuple with the NonTaxableRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetNonTaxableRuleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NonTaxableRuleId) {
		return nil, false
	}
	return o.NonTaxableRuleId, true
}

// HasNonTaxableRuleId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasNonTaxableRuleId() bool {
	if o != nil && !IsNil(o.NonTaxableRuleId) {
		return true
	}

	return false
}

// SetNonTaxableRuleId gets a reference to the given int32 and assigns it to the NonTaxableRuleId field.
func (o *TransactionLineDetailModel) SetNonTaxableRuleId(v int32) {
	o.NonTaxableRuleId = &v
}

// GetNonTaxableType returns the NonTaxableType field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetNonTaxableType() string {
	if o == nil || IsNil(o.NonTaxableType) {
		var ret string
		return ret
	}
	return *o.NonTaxableType
}

// GetNonTaxableTypeOk returns a tuple with the NonTaxableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetNonTaxableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NonTaxableType) {
		return nil, false
	}
	return o.NonTaxableType, true
}

// HasNonTaxableType returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasNonTaxableType() bool {
	if o != nil && !IsNil(o.NonTaxableType) {
		return true
	}

	return false
}

// SetNonTaxableType gets a reference to the given string and assigns it to the NonTaxableType field.
func (o *TransactionLineDetailModel) SetNonTaxableType(v string) {
	o.NonTaxableType = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetRate() float64 {
	if o == nil || IsNil(o.Rate) {
		var ret float64
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetRateOk() (*float64, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given float64 and assigns it to the Rate field.
func (o *TransactionLineDetailModel) SetRate(v float64) {
	o.Rate = &v
}

// GetRateRuleId returns the RateRuleId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetRateRuleId() int32 {
	if o == nil || IsNil(o.RateRuleId) {
		var ret int32
		return ret
	}
	return *o.RateRuleId
}

// GetRateRuleIdOk returns a tuple with the RateRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetRateRuleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RateRuleId) {
		return nil, false
	}
	return o.RateRuleId, true
}

// HasRateRuleId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasRateRuleId() bool {
	if o != nil && !IsNil(o.RateRuleId) {
		return true
	}

	return false
}

// SetRateRuleId gets a reference to the given int32 and assigns it to the RateRuleId field.
func (o *TransactionLineDetailModel) SetRateRuleId(v int32) {
	o.RateRuleId = &v
}

// GetRateSourceId returns the RateSourceId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetRateSourceId() int32 {
	if o == nil || IsNil(o.RateSourceId) {
		var ret int32
		return ret
	}
	return *o.RateSourceId
}

// GetRateSourceIdOk returns a tuple with the RateSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetRateSourceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RateSourceId) {
		return nil, false
	}
	return o.RateSourceId, true
}

// HasRateSourceId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasRateSourceId() bool {
	if o != nil && !IsNil(o.RateSourceId) {
		return true
	}

	return false
}

// SetRateSourceId gets a reference to the given int32 and assigns it to the RateSourceId field.
func (o *TransactionLineDetailModel) SetRateSourceId(v int32) {
	o.RateSourceId = &v
}

// GetSignatureCode returns the SignatureCode field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetSignatureCode() string {
	if o == nil || IsNil(o.SignatureCode) {
		var ret string
		return ret
	}
	return *o.SignatureCode
}

// GetSignatureCodeOk returns a tuple with the SignatureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetSignatureCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureCode) {
		return nil, false
	}
	return o.SignatureCode, true
}

// HasSignatureCode returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasSignatureCode() bool {
	if o != nil && !IsNil(o.SignatureCode) {
		return true
	}

	return false
}

// SetSignatureCode gets a reference to the given string and assigns it to the SignatureCode field.
func (o *TransactionLineDetailModel) SetSignatureCode(v string) {
	o.SignatureCode = &v
}

// GetSerCode returns the SerCode field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetSerCode() string {
	if o == nil || IsNil(o.SerCode) {
		var ret string
		return ret
	}
	return *o.SerCode
}

// GetSerCodeOk returns a tuple with the SerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetSerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SerCode) {
		return nil, false
	}
	return o.SerCode, true
}

// HasSerCode returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasSerCode() bool {
	if o != nil && !IsNil(o.SerCode) {
		return true
	}

	return false
}

// SetSerCode gets a reference to the given string and assigns it to the SerCode field.
func (o *TransactionLineDetailModel) SetSerCode(v string) {
	o.SerCode = &v
}

// GetSourcing returns the Sourcing field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetSourcing() string {
	if o == nil || IsNil(o.Sourcing) {
		var ret string
		return ret
	}
	return *o.Sourcing
}

// GetSourcingOk returns a tuple with the Sourcing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetSourcingOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcing) {
		return nil, false
	}
	return o.Sourcing, true
}

// HasSourcing returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasSourcing() bool {
	if o != nil && !IsNil(o.Sourcing) {
		return true
	}

	return false
}

// SetSourcing gets a reference to the given string and assigns it to the Sourcing field.
func (o *TransactionLineDetailModel) SetSourcing(v string) {
	o.Sourcing = &v
}

// GetStateAssignedNo returns the StateAssignedNo field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetStateAssignedNo() string {
	if o == nil || IsNil(o.StateAssignedNo) {
		var ret string
		return ret
	}
	return *o.StateAssignedNo
}

// GetStateAssignedNoOk returns a tuple with the StateAssignedNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetStateAssignedNoOk() (*string, bool) {
	if o == nil || IsNil(o.StateAssignedNo) {
		return nil, false
	}
	return o.StateAssignedNo, true
}

// HasStateAssignedNo returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasStateAssignedNo() bool {
	if o != nil && !IsNil(o.StateAssignedNo) {
		return true
	}

	return false
}

// SetStateAssignedNo gets a reference to the given string and assigns it to the StateAssignedNo field.
func (o *TransactionLineDetailModel) SetStateAssignedNo(v string) {
	o.StateAssignedNo = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTax() float64 {
	if o == nil || IsNil(o.Tax) {
		var ret float64
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxOk() (*float64, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float64 and assigns it to the Tax field.
func (o *TransactionLineDetailModel) SetTax(v float64) {
	o.Tax = &v
}

// GetTaxableAmount returns the TaxableAmount field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxableAmount() float64 {
	if o == nil || IsNil(o.TaxableAmount) {
		var ret float64
		return ret
	}
	return *o.TaxableAmount
}

// GetTaxableAmountOk returns a tuple with the TaxableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxableAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxableAmount) {
		return nil, false
	}
	return o.TaxableAmount, true
}

// HasTaxableAmount returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxableAmount() bool {
	if o != nil && !IsNil(o.TaxableAmount) {
		return true
	}

	return false
}

// SetTaxableAmount gets a reference to the given float64 and assigns it to the TaxableAmount field.
func (o *TransactionLineDetailModel) SetTaxableAmount(v float64) {
	o.TaxableAmount = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxType() string {
	if o == nil || IsNil(o.TaxType) {
		var ret string
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given string and assigns it to the TaxType field.
func (o *TransactionLineDetailModel) SetTaxType(v string) {
	o.TaxType = &v
}

// GetTaxName returns the TaxName field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxName() string {
	if o == nil || IsNil(o.TaxName) {
		var ret string
		return ret
	}
	return *o.TaxName
}

// GetTaxNameOk returns a tuple with the TaxName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaxName) {
		return nil, false
	}
	return o.TaxName, true
}

// HasTaxName returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxName() bool {
	if o != nil && !IsNil(o.TaxName) {
		return true
	}

	return false
}

// SetTaxName gets a reference to the given string and assigns it to the TaxName field.
func (o *TransactionLineDetailModel) SetTaxName(v string) {
	o.TaxName = &v
}

// GetTaxAuthorityTypeId returns the TaxAuthorityTypeId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxAuthorityTypeId() int32 {
	if o == nil || IsNil(o.TaxAuthorityTypeId) {
		var ret int32
		return ret
	}
	return *o.TaxAuthorityTypeId
}

// GetTaxAuthorityTypeIdOk returns a tuple with the TaxAuthorityTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxAuthorityTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxAuthorityTypeId) {
		return nil, false
	}
	return o.TaxAuthorityTypeId, true
}

// HasTaxAuthorityTypeId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxAuthorityTypeId() bool {
	if o != nil && !IsNil(o.TaxAuthorityTypeId) {
		return true
	}

	return false
}

// SetTaxAuthorityTypeId gets a reference to the given int32 and assigns it to the TaxAuthorityTypeId field.
func (o *TransactionLineDetailModel) SetTaxAuthorityTypeId(v int32) {
	o.TaxAuthorityTypeId = &v
}

// GetTaxRegionId returns the TaxRegionId field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxRegionId() int32 {
	if o == nil || IsNil(o.TaxRegionId) {
		var ret int32
		return ret
	}
	return *o.TaxRegionId
}

// GetTaxRegionIdOk returns a tuple with the TaxRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxRegionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxRegionId) {
		return nil, false
	}
	return o.TaxRegionId, true
}

// HasTaxRegionId returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxRegionId() bool {
	if o != nil && !IsNil(o.TaxRegionId) {
		return true
	}

	return false
}

// SetTaxRegionId gets a reference to the given int32 and assigns it to the TaxRegionId field.
func (o *TransactionLineDetailModel) SetTaxRegionId(v int32) {
	o.TaxRegionId = &v
}

// GetTaxCalculated returns the TaxCalculated field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxCalculated() float64 {
	if o == nil || IsNil(o.TaxCalculated) {
		var ret float64
		return ret
	}
	return *o.TaxCalculated
}

// GetTaxCalculatedOk returns a tuple with the TaxCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxCalculatedOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxCalculated) {
		return nil, false
	}
	return o.TaxCalculated, true
}

// HasTaxCalculated returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxCalculated() bool {
	if o != nil && !IsNil(o.TaxCalculated) {
		return true
	}

	return false
}

// SetTaxCalculated gets a reference to the given float64 and assigns it to the TaxCalculated field.
func (o *TransactionLineDetailModel) SetTaxCalculated(v float64) {
	o.TaxCalculated = &v
}

// GetTaxOverride returns the TaxOverride field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetTaxOverride() float64 {
	if o == nil || IsNil(o.TaxOverride) {
		var ret float64
		return ret
	}
	return *o.TaxOverride
}

// GetTaxOverrideOk returns a tuple with the TaxOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetTaxOverrideOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxOverride) {
		return nil, false
	}
	return o.TaxOverride, true
}

// HasTaxOverride returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasTaxOverride() bool {
	if o != nil && !IsNil(o.TaxOverride) {
		return true
	}

	return false
}

// SetTaxOverride gets a reference to the given float64 and assigns it to the TaxOverride field.
func (o *TransactionLineDetailModel) SetTaxOverride(v float64) {
	o.TaxOverride = &v
}

// GetRateType returns the RateType field value if set, zero value otherwise.
func (o *TransactionLineDetailModel) GetRateType() string {
	if o == nil || IsNil(o.RateType) {
		var ret string
		return ret
	}
	return *o.RateType
}

// GetRateTypeOk returns a tuple with the RateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineDetailModel) GetRateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RateType) {
		return nil, false
	}
	return o.RateType, true
}

// HasRateType returns a boolean if a field has been set.
func (o *TransactionLineDetailModel) HasRateType() bool {
	if o != nil && !IsNil(o.RateType) {
		return true
	}

	return false
}

// SetRateType gets a reference to the given string and assigns it to the RateType field.
func (o *TransactionLineDetailModel) SetRateType(v string) {
	o.RateType = &v
}

func (o TransactionLineDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionLineDetailModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TransactionLineId) {
		toSerialize["transactionLineId"] = o.TransactionLineId
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.AddressId) {
		toSerialize["addressId"] = o.AddressId
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.CountyFIPS) {
		toSerialize["countyFIPS"] = o.CountyFIPS
	}
	if !IsNil(o.StateFIPS) {
		toSerialize["stateFIPS"] = o.StateFIPS
	}
	if !IsNil(o.ExemptAmount) {
		toSerialize["exemptAmount"] = o.ExemptAmount
	}
	if !IsNil(o.ExemptReasonId) {
		toSerialize["exemptReasonId"] = o.ExemptReasonId
	}
	if !IsNil(o.InState) {
		toSerialize["inState"] = o.InState
	}
	if !IsNil(o.JurisCode) {
		toSerialize["jurisCode"] = o.JurisCode
	}
	if !IsNil(o.JurisName) {
		toSerialize["jurisName"] = o.JurisName
	}
	if !IsNil(o.JurisdictionId) {
		toSerialize["jurisdictionId"] = o.JurisdictionId
	}
	if !IsNil(o.JurisType) {
		toSerialize["jurisType"] = o.JurisType
	}
	if !IsNil(o.NonTaxableAmount) {
		toSerialize["nonTaxableAmount"] = o.NonTaxableAmount
	}
	if !IsNil(o.NonTaxableRuleId) {
		toSerialize["nonTaxableRuleId"] = o.NonTaxableRuleId
	}
	if !IsNil(o.NonTaxableType) {
		toSerialize["nonTaxableType"] = o.NonTaxableType
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.RateRuleId) {
		toSerialize["rateRuleId"] = o.RateRuleId
	}
	if !IsNil(o.RateSourceId) {
		toSerialize["rateSourceId"] = o.RateSourceId
	}
	if !IsNil(o.SignatureCode) {
		toSerialize["signatureCode"] = o.SignatureCode
	}
	if !IsNil(o.SerCode) {
		toSerialize["serCode"] = o.SerCode
	}
	if !IsNil(o.Sourcing) {
		toSerialize["sourcing"] = o.Sourcing
	}
	if !IsNil(o.StateAssignedNo) {
		toSerialize["stateAssignedNo"] = o.StateAssignedNo
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxableAmount) {
		toSerialize["taxableAmount"] = o.TaxableAmount
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TaxName) {
		toSerialize["taxName"] = o.TaxName
	}
	if !IsNil(o.TaxAuthorityTypeId) {
		toSerialize["taxAuthorityTypeId"] = o.TaxAuthorityTypeId
	}
	if !IsNil(o.TaxRegionId) {
		toSerialize["taxRegionId"] = o.TaxRegionId
	}
	if !IsNil(o.TaxCalculated) {
		toSerialize["taxCalculated"] = o.TaxCalculated
	}
	if !IsNil(o.TaxOverride) {
		toSerialize["taxOverride"] = o.TaxOverride
	}
	if !IsNil(o.RateType) {
		toSerialize["rateType"] = o.RateType
	}
	return toSerialize, nil
}

type NullableTransactionLineDetailModel struct {
	value *TransactionLineDetailModel
	isSet bool
}

func (v NullableTransactionLineDetailModel) Get() *TransactionLineDetailModel {
	return v.value
}

func (v *NullableTransactionLineDetailModel) Set(val *TransactionLineDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionLineDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionLineDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionLineDetailModel(val *TransactionLineDetailModel) *NullableTransactionLineDetailModel {
	return &NullableTransactionLineDetailModel{value: val, isSet: true}
}

func (v NullableTransactionLineDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionLineDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


