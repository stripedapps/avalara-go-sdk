/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TransactionLineModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionLineModel{}

// TransactionLineModel One line item on this transaction
type TransactionLineModel struct {
	// DocumentLineId
	Id *int64 `json:"id,omitempty"`
	// DocumentId
	TransactionId *int64 `json:"transactionId,omitempty"`
	// LineNo
	LineNumber *string `json:"lineNumber,omitempty"`
	// AccountingMethodId
	Method *string `json:"method,omitempty"`
	// BoundaryOverrideId
	BoundaryOverrideId *int32 `json:"boundaryOverrideId,omitempty"`
	// CustomerUsageType
	CustomerUsageType *string `json:"customerUsageType,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// DestinationAddressId
	DestinationAddressId *int64 `json:"destinationAddressId,omitempty"`
	// DiscountAmount
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// DiscountTypeId
	DiscountTypeId *int32 `json:"discountTypeId,omitempty"`
	// ExemptAmount
	ExemptAmount *float64 `json:"exemptAmount,omitempty"`
	// ExemptCertId
	ExemptCertId *int32 `json:"exemptCertId,omitempty"`
	// ExemptNo
	ExemptNo *string `json:"exemptNo,omitempty"`
	// IsItemTaxable
	IsItemTaxable *bool `json:"isItemTaxable,omitempty"`
	// IsSSTP
	IsSSTP *bool `json:"isSSTP,omitempty"`
	// ItemCode
	ItemCode *string `json:"itemCode,omitempty"`
	// LineAmount
	LineAmount *float64 `json:"lineAmount,omitempty"`
	// OriginAddressId
	OriginAddressId *int64 `json:"originAddressId,omitempty"`
	// Quantity
	Quantity *float64 `json:"quantity,omitempty"`
	// Ref1
	Ref1 *string `json:"ref1,omitempty"`
	// Ref2
	Ref2 *string `json:"ref2,omitempty"`
	// ReportingDate
	ReportingDate *time.Time `json:"reportingDate,omitempty"`
	// RevAccount
	RevAccount *string `json:"revAccount,omitempty"`
	// Sourcing
	Sourcing *string `json:"sourcing,omitempty"`
	// Tax
	Tax *float64 `json:"tax,omitempty"`
	// TaxableAmount
	TaxableAmount *float64 `json:"taxableAmount,omitempty"`
	// TaxCalculated
	TaxCalculated *float64 `json:"taxCalculated,omitempty"`
	// TaxCode
	TaxCode *string `json:"taxCode,omitempty"`
	// TaxCodeId
	TaxCodeId *int32 `json:"taxCodeId,omitempty"`
	// TaxDate
	TaxDate *time.Time `json:"taxDate,omitempty"`
	// TaxEngine
	TaxEngine *string `json:"taxEngine,omitempty"`
	// TaxOverrideTypeId
	TaxOverrideType *string `json:"taxOverrideType,omitempty"`
	// TaxOverrideAmount
	TaxOverrideAmount *float64 `json:"taxOverrideAmount,omitempty"`
	// TaxOverrideReason
	TaxOverrideReason *string `json:"taxOverrideReason,omitempty"`
	// TaxIncluded
	TaxIncluded *bool `json:"taxIncluded,omitempty"`
	// Details
	Details []TransactionLineDetailModel `json:"details,omitempty"`
}

// NewTransactionLineModel instantiates a new TransactionLineModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionLineModel() *TransactionLineModel {
	this := TransactionLineModel{}
	return &this
}

// NewTransactionLineModelWithDefaults instantiates a new TransactionLineModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionLineModelWithDefaults() *TransactionLineModel {
	this := TransactionLineModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionLineModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TransactionLineModel) SetId(v int64) {
	o.Id = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTransactionId() int64 {
	if o == nil || IsNil(o.TransactionId) {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTransactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *TransactionLineModel) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise.
func (o *TransactionLineModel) GetLineNumber() string {
	if o == nil || IsNil(o.LineNumber) {
		var ret string
		return ret
	}
	return *o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.LineNumber) {
		return nil, false
	}
	return o.LineNumber, true
}

// HasLineNumber returns a boolean if a field has been set.
func (o *TransactionLineModel) HasLineNumber() bool {
	if o != nil && !IsNil(o.LineNumber) {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given string and assigns it to the LineNumber field.
func (o *TransactionLineModel) SetLineNumber(v string) {
	o.LineNumber = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *TransactionLineModel) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *TransactionLineModel) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *TransactionLineModel) SetMethod(v string) {
	o.Method = &v
}

// GetBoundaryOverrideId returns the BoundaryOverrideId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetBoundaryOverrideId() int32 {
	if o == nil || IsNil(o.BoundaryOverrideId) {
		var ret int32
		return ret
	}
	return *o.BoundaryOverrideId
}

// GetBoundaryOverrideIdOk returns a tuple with the BoundaryOverrideId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetBoundaryOverrideIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BoundaryOverrideId) {
		return nil, false
	}
	return o.BoundaryOverrideId, true
}

// HasBoundaryOverrideId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasBoundaryOverrideId() bool {
	if o != nil && !IsNil(o.BoundaryOverrideId) {
		return true
	}

	return false
}

// SetBoundaryOverrideId gets a reference to the given int32 and assigns it to the BoundaryOverrideId field.
func (o *TransactionLineModel) SetBoundaryOverrideId(v int32) {
	o.BoundaryOverrideId = &v
}

// GetCustomerUsageType returns the CustomerUsageType field value if set, zero value otherwise.
func (o *TransactionLineModel) GetCustomerUsageType() string {
	if o == nil || IsNil(o.CustomerUsageType) {
		var ret string
		return ret
	}
	return *o.CustomerUsageType
}

// GetCustomerUsageTypeOk returns a tuple with the CustomerUsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetCustomerUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerUsageType) {
		return nil, false
	}
	return o.CustomerUsageType, true
}

// HasCustomerUsageType returns a boolean if a field has been set.
func (o *TransactionLineModel) HasCustomerUsageType() bool {
	if o != nil && !IsNil(o.CustomerUsageType) {
		return true
	}

	return false
}

// SetCustomerUsageType gets a reference to the given string and assigns it to the CustomerUsageType field.
func (o *TransactionLineModel) SetCustomerUsageType(v string) {
	o.CustomerUsageType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransactionLineModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransactionLineModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransactionLineModel) SetDescription(v string) {
	o.Description = &v
}

// GetDestinationAddressId returns the DestinationAddressId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetDestinationAddressId() int64 {
	if o == nil || IsNil(o.DestinationAddressId) {
		var ret int64
		return ret
	}
	return *o.DestinationAddressId
}

// GetDestinationAddressIdOk returns a tuple with the DestinationAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetDestinationAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DestinationAddressId) {
		return nil, false
	}
	return o.DestinationAddressId, true
}

// HasDestinationAddressId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasDestinationAddressId() bool {
	if o != nil && !IsNil(o.DestinationAddressId) {
		return true
	}

	return false
}

// SetDestinationAddressId gets a reference to the given int64 and assigns it to the DestinationAddressId field.
func (o *TransactionLineModel) SetDestinationAddressId(v int64) {
	o.DestinationAddressId = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetDiscountAmount() float64 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float64
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetDiscountAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float64 and assigns it to the DiscountAmount field.
func (o *TransactionLineModel) SetDiscountAmount(v float64) {
	o.DiscountAmount = &v
}

// GetDiscountTypeId returns the DiscountTypeId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetDiscountTypeId() int32 {
	if o == nil || IsNil(o.DiscountTypeId) {
		var ret int32
		return ret
	}
	return *o.DiscountTypeId
}

// GetDiscountTypeIdOk returns a tuple with the DiscountTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetDiscountTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountTypeId) {
		return nil, false
	}
	return o.DiscountTypeId, true
}

// HasDiscountTypeId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasDiscountTypeId() bool {
	if o != nil && !IsNil(o.DiscountTypeId) {
		return true
	}

	return false
}

// SetDiscountTypeId gets a reference to the given int32 and assigns it to the DiscountTypeId field.
func (o *TransactionLineModel) SetDiscountTypeId(v int32) {
	o.DiscountTypeId = &v
}

// GetExemptAmount returns the ExemptAmount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetExemptAmount() float64 {
	if o == nil || IsNil(o.ExemptAmount) {
		var ret float64
		return ret
	}
	return *o.ExemptAmount
}

// GetExemptAmountOk returns a tuple with the ExemptAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetExemptAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.ExemptAmount) {
		return nil, false
	}
	return o.ExemptAmount, true
}

// HasExemptAmount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasExemptAmount() bool {
	if o != nil && !IsNil(o.ExemptAmount) {
		return true
	}

	return false
}

// SetExemptAmount gets a reference to the given float64 and assigns it to the ExemptAmount field.
func (o *TransactionLineModel) SetExemptAmount(v float64) {
	o.ExemptAmount = &v
}

// GetExemptCertId returns the ExemptCertId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetExemptCertId() int32 {
	if o == nil || IsNil(o.ExemptCertId) {
		var ret int32
		return ret
	}
	return *o.ExemptCertId
}

// GetExemptCertIdOk returns a tuple with the ExemptCertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetExemptCertIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExemptCertId) {
		return nil, false
	}
	return o.ExemptCertId, true
}

// HasExemptCertId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasExemptCertId() bool {
	if o != nil && !IsNil(o.ExemptCertId) {
		return true
	}

	return false
}

// SetExemptCertId gets a reference to the given int32 and assigns it to the ExemptCertId field.
func (o *TransactionLineModel) SetExemptCertId(v int32) {
	o.ExemptCertId = &v
}

// GetExemptNo returns the ExemptNo field value if set, zero value otherwise.
func (o *TransactionLineModel) GetExemptNo() string {
	if o == nil || IsNil(o.ExemptNo) {
		var ret string
		return ret
	}
	return *o.ExemptNo
}

// GetExemptNoOk returns a tuple with the ExemptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetExemptNoOk() (*string, bool) {
	if o == nil || IsNil(o.ExemptNo) {
		return nil, false
	}
	return o.ExemptNo, true
}

// HasExemptNo returns a boolean if a field has been set.
func (o *TransactionLineModel) HasExemptNo() bool {
	if o != nil && !IsNil(o.ExemptNo) {
		return true
	}

	return false
}

// SetExemptNo gets a reference to the given string and assigns it to the ExemptNo field.
func (o *TransactionLineModel) SetExemptNo(v string) {
	o.ExemptNo = &v
}

// GetIsItemTaxable returns the IsItemTaxable field value if set, zero value otherwise.
func (o *TransactionLineModel) GetIsItemTaxable() bool {
	if o == nil || IsNil(o.IsItemTaxable) {
		var ret bool
		return ret
	}
	return *o.IsItemTaxable
}

// GetIsItemTaxableOk returns a tuple with the IsItemTaxable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetIsItemTaxableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsItemTaxable) {
		return nil, false
	}
	return o.IsItemTaxable, true
}

// HasIsItemTaxable returns a boolean if a field has been set.
func (o *TransactionLineModel) HasIsItemTaxable() bool {
	if o != nil && !IsNil(o.IsItemTaxable) {
		return true
	}

	return false
}

// SetIsItemTaxable gets a reference to the given bool and assigns it to the IsItemTaxable field.
func (o *TransactionLineModel) SetIsItemTaxable(v bool) {
	o.IsItemTaxable = &v
}

// GetIsSSTP returns the IsSSTP field value if set, zero value otherwise.
func (o *TransactionLineModel) GetIsSSTP() bool {
	if o == nil || IsNil(o.IsSSTP) {
		var ret bool
		return ret
	}
	return *o.IsSSTP
}

// GetIsSSTPOk returns a tuple with the IsSSTP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetIsSSTPOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSSTP) {
		return nil, false
	}
	return o.IsSSTP, true
}

// HasIsSSTP returns a boolean if a field has been set.
func (o *TransactionLineModel) HasIsSSTP() bool {
	if o != nil && !IsNil(o.IsSSTP) {
		return true
	}

	return false
}

// SetIsSSTP gets a reference to the given bool and assigns it to the IsSSTP field.
func (o *TransactionLineModel) SetIsSSTP(v bool) {
	o.IsSSTP = &v
}

// GetItemCode returns the ItemCode field value if set, zero value otherwise.
func (o *TransactionLineModel) GetItemCode() string {
	if o == nil || IsNil(o.ItemCode) {
		var ret string
		return ret
	}
	return *o.ItemCode
}

// GetItemCodeOk returns a tuple with the ItemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetItemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemCode) {
		return nil, false
	}
	return o.ItemCode, true
}

// HasItemCode returns a boolean if a field has been set.
func (o *TransactionLineModel) HasItemCode() bool {
	if o != nil && !IsNil(o.ItemCode) {
		return true
	}

	return false
}

// SetItemCode gets a reference to the given string and assigns it to the ItemCode field.
func (o *TransactionLineModel) SetItemCode(v string) {
	o.ItemCode = &v
}

// GetLineAmount returns the LineAmount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetLineAmount() float64 {
	if o == nil || IsNil(o.LineAmount) {
		var ret float64
		return ret
	}
	return *o.LineAmount
}

// GetLineAmountOk returns a tuple with the LineAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetLineAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.LineAmount) {
		return nil, false
	}
	return o.LineAmount, true
}

// HasLineAmount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasLineAmount() bool {
	if o != nil && !IsNil(o.LineAmount) {
		return true
	}

	return false
}

// SetLineAmount gets a reference to the given float64 and assigns it to the LineAmount field.
func (o *TransactionLineModel) SetLineAmount(v float64) {
	o.LineAmount = &v
}

// GetOriginAddressId returns the OriginAddressId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetOriginAddressId() int64 {
	if o == nil || IsNil(o.OriginAddressId) {
		var ret int64
		return ret
	}
	return *o.OriginAddressId
}

// GetOriginAddressIdOk returns a tuple with the OriginAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetOriginAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginAddressId) {
		return nil, false
	}
	return o.OriginAddressId, true
}

// HasOriginAddressId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasOriginAddressId() bool {
	if o != nil && !IsNil(o.OriginAddressId) {
		return true
	}

	return false
}

// SetOriginAddressId gets a reference to the given int64 and assigns it to the OriginAddressId field.
func (o *TransactionLineModel) SetOriginAddressId(v int64) {
	o.OriginAddressId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *TransactionLineModel) GetQuantity() float64 {
	if o == nil || IsNil(o.Quantity) {
		var ret float64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *TransactionLineModel) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float64 and assigns it to the Quantity field.
func (o *TransactionLineModel) SetQuantity(v float64) {
	o.Quantity = &v
}

// GetRef1 returns the Ref1 field value if set, zero value otherwise.
func (o *TransactionLineModel) GetRef1() string {
	if o == nil || IsNil(o.Ref1) {
		var ret string
		return ret
	}
	return *o.Ref1
}

// GetRef1Ok returns a tuple with the Ref1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetRef1Ok() (*string, bool) {
	if o == nil || IsNil(o.Ref1) {
		return nil, false
	}
	return o.Ref1, true
}

// HasRef1 returns a boolean if a field has been set.
func (o *TransactionLineModel) HasRef1() bool {
	if o != nil && !IsNil(o.Ref1) {
		return true
	}

	return false
}

// SetRef1 gets a reference to the given string and assigns it to the Ref1 field.
func (o *TransactionLineModel) SetRef1(v string) {
	o.Ref1 = &v
}

// GetRef2 returns the Ref2 field value if set, zero value otherwise.
func (o *TransactionLineModel) GetRef2() string {
	if o == nil || IsNil(o.Ref2) {
		var ret string
		return ret
	}
	return *o.Ref2
}

// GetRef2Ok returns a tuple with the Ref2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetRef2Ok() (*string, bool) {
	if o == nil || IsNil(o.Ref2) {
		return nil, false
	}
	return o.Ref2, true
}

// HasRef2 returns a boolean if a field has been set.
func (o *TransactionLineModel) HasRef2() bool {
	if o != nil && !IsNil(o.Ref2) {
		return true
	}

	return false
}

// SetRef2 gets a reference to the given string and assigns it to the Ref2 field.
func (o *TransactionLineModel) SetRef2(v string) {
	o.Ref2 = &v
}

// GetReportingDate returns the ReportingDate field value if set, zero value otherwise.
func (o *TransactionLineModel) GetReportingDate() time.Time {
	if o == nil || IsNil(o.ReportingDate) {
		var ret time.Time
		return ret
	}
	return *o.ReportingDate
}

// GetReportingDateOk returns a tuple with the ReportingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetReportingDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReportingDate) {
		return nil, false
	}
	return o.ReportingDate, true
}

// HasReportingDate returns a boolean if a field has been set.
func (o *TransactionLineModel) HasReportingDate() bool {
	if o != nil && !IsNil(o.ReportingDate) {
		return true
	}

	return false
}

// SetReportingDate gets a reference to the given time.Time and assigns it to the ReportingDate field.
func (o *TransactionLineModel) SetReportingDate(v time.Time) {
	o.ReportingDate = &v
}

// GetRevAccount returns the RevAccount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetRevAccount() string {
	if o == nil || IsNil(o.RevAccount) {
		var ret string
		return ret
	}
	return *o.RevAccount
}

// GetRevAccountOk returns a tuple with the RevAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetRevAccountOk() (*string, bool) {
	if o == nil || IsNil(o.RevAccount) {
		return nil, false
	}
	return o.RevAccount, true
}

// HasRevAccount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasRevAccount() bool {
	if o != nil && !IsNil(o.RevAccount) {
		return true
	}

	return false
}

// SetRevAccount gets a reference to the given string and assigns it to the RevAccount field.
func (o *TransactionLineModel) SetRevAccount(v string) {
	o.RevAccount = &v
}

// GetSourcing returns the Sourcing field value if set, zero value otherwise.
func (o *TransactionLineModel) GetSourcing() string {
	if o == nil || IsNil(o.Sourcing) {
		var ret string
		return ret
	}
	return *o.Sourcing
}

// GetSourcingOk returns a tuple with the Sourcing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetSourcingOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcing) {
		return nil, false
	}
	return o.Sourcing, true
}

// HasSourcing returns a boolean if a field has been set.
func (o *TransactionLineModel) HasSourcing() bool {
	if o != nil && !IsNil(o.Sourcing) {
		return true
	}

	return false
}

// SetSourcing gets a reference to the given string and assigns it to the Sourcing field.
func (o *TransactionLineModel) SetSourcing(v string) {
	o.Sourcing = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTax() float64 {
	if o == nil || IsNil(o.Tax) {
		var ret float64
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxOk() (*float64, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float64 and assigns it to the Tax field.
func (o *TransactionLineModel) SetTax(v float64) {
	o.Tax = &v
}

// GetTaxableAmount returns the TaxableAmount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxableAmount() float64 {
	if o == nil || IsNil(o.TaxableAmount) {
		var ret float64
		return ret
	}
	return *o.TaxableAmount
}

// GetTaxableAmountOk returns a tuple with the TaxableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxableAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxableAmount) {
		return nil, false
	}
	return o.TaxableAmount, true
}

// HasTaxableAmount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxableAmount() bool {
	if o != nil && !IsNil(o.TaxableAmount) {
		return true
	}

	return false
}

// SetTaxableAmount gets a reference to the given float64 and assigns it to the TaxableAmount field.
func (o *TransactionLineModel) SetTaxableAmount(v float64) {
	o.TaxableAmount = &v
}

// GetTaxCalculated returns the TaxCalculated field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxCalculated() float64 {
	if o == nil || IsNil(o.TaxCalculated) {
		var ret float64
		return ret
	}
	return *o.TaxCalculated
}

// GetTaxCalculatedOk returns a tuple with the TaxCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxCalculatedOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxCalculated) {
		return nil, false
	}
	return o.TaxCalculated, true
}

// HasTaxCalculated returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxCalculated() bool {
	if o != nil && !IsNil(o.TaxCalculated) {
		return true
	}

	return false
}

// SetTaxCalculated gets a reference to the given float64 and assigns it to the TaxCalculated field.
func (o *TransactionLineModel) SetTaxCalculated(v float64) {
	o.TaxCalculated = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *TransactionLineModel) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetTaxCodeId returns the TaxCodeId field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxCodeId() int32 {
	if o == nil || IsNil(o.TaxCodeId) {
		var ret int32
		return ret
	}
	return *o.TaxCodeId
}

// GetTaxCodeIdOk returns a tuple with the TaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxCodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxCodeId) {
		return nil, false
	}
	return o.TaxCodeId, true
}

// HasTaxCodeId returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxCodeId() bool {
	if o != nil && !IsNil(o.TaxCodeId) {
		return true
	}

	return false
}

// SetTaxCodeId gets a reference to the given int32 and assigns it to the TaxCodeId field.
func (o *TransactionLineModel) SetTaxCodeId(v int32) {
	o.TaxCodeId = &v
}

// GetTaxDate returns the TaxDate field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxDate() time.Time {
	if o == nil || IsNil(o.TaxDate) {
		var ret time.Time
		return ret
	}
	return *o.TaxDate
}

// GetTaxDateOk returns a tuple with the TaxDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TaxDate) {
		return nil, false
	}
	return o.TaxDate, true
}

// HasTaxDate returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxDate() bool {
	if o != nil && !IsNil(o.TaxDate) {
		return true
	}

	return false
}

// SetTaxDate gets a reference to the given time.Time and assigns it to the TaxDate field.
func (o *TransactionLineModel) SetTaxDate(v time.Time) {
	o.TaxDate = &v
}

// GetTaxEngine returns the TaxEngine field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxEngine() string {
	if o == nil || IsNil(o.TaxEngine) {
		var ret string
		return ret
	}
	return *o.TaxEngine
}

// GetTaxEngineOk returns a tuple with the TaxEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxEngineOk() (*string, bool) {
	if o == nil || IsNil(o.TaxEngine) {
		return nil, false
	}
	return o.TaxEngine, true
}

// HasTaxEngine returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxEngine() bool {
	if o != nil && !IsNil(o.TaxEngine) {
		return true
	}

	return false
}

// SetTaxEngine gets a reference to the given string and assigns it to the TaxEngine field.
func (o *TransactionLineModel) SetTaxEngine(v string) {
	o.TaxEngine = &v
}

// GetTaxOverrideType returns the TaxOverrideType field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxOverrideType() string {
	if o == nil || IsNil(o.TaxOverrideType) {
		var ret string
		return ret
	}
	return *o.TaxOverrideType
}

// GetTaxOverrideTypeOk returns a tuple with the TaxOverrideType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxOverrideTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxOverrideType) {
		return nil, false
	}
	return o.TaxOverrideType, true
}

// HasTaxOverrideType returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxOverrideType() bool {
	if o != nil && !IsNil(o.TaxOverrideType) {
		return true
	}

	return false
}

// SetTaxOverrideType gets a reference to the given string and assigns it to the TaxOverrideType field.
func (o *TransactionLineModel) SetTaxOverrideType(v string) {
	o.TaxOverrideType = &v
}

// GetTaxOverrideAmount returns the TaxOverrideAmount field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxOverrideAmount() float64 {
	if o == nil || IsNil(o.TaxOverrideAmount) {
		var ret float64
		return ret
	}
	return *o.TaxOverrideAmount
}

// GetTaxOverrideAmountOk returns a tuple with the TaxOverrideAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxOverrideAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxOverrideAmount) {
		return nil, false
	}
	return o.TaxOverrideAmount, true
}

// HasTaxOverrideAmount returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxOverrideAmount() bool {
	if o != nil && !IsNil(o.TaxOverrideAmount) {
		return true
	}

	return false
}

// SetTaxOverrideAmount gets a reference to the given float64 and assigns it to the TaxOverrideAmount field.
func (o *TransactionLineModel) SetTaxOverrideAmount(v float64) {
	o.TaxOverrideAmount = &v
}

// GetTaxOverrideReason returns the TaxOverrideReason field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxOverrideReason() string {
	if o == nil || IsNil(o.TaxOverrideReason) {
		var ret string
		return ret
	}
	return *o.TaxOverrideReason
}

// GetTaxOverrideReasonOk returns a tuple with the TaxOverrideReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxOverrideReasonOk() (*string, bool) {
	if o == nil || IsNil(o.TaxOverrideReason) {
		return nil, false
	}
	return o.TaxOverrideReason, true
}

// HasTaxOverrideReason returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxOverrideReason() bool {
	if o != nil && !IsNil(o.TaxOverrideReason) {
		return true
	}

	return false
}

// SetTaxOverrideReason gets a reference to the given string and assigns it to the TaxOverrideReason field.
func (o *TransactionLineModel) SetTaxOverrideReason(v string) {
	o.TaxOverrideReason = &v
}

// GetTaxIncluded returns the TaxIncluded field value if set, zero value otherwise.
func (o *TransactionLineModel) GetTaxIncluded() bool {
	if o == nil || IsNil(o.TaxIncluded) {
		var ret bool
		return ret
	}
	return *o.TaxIncluded
}

// GetTaxIncludedOk returns a tuple with the TaxIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetTaxIncludedOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxIncluded) {
		return nil, false
	}
	return o.TaxIncluded, true
}

// HasTaxIncluded returns a boolean if a field has been set.
func (o *TransactionLineModel) HasTaxIncluded() bool {
	if o != nil && !IsNil(o.TaxIncluded) {
		return true
	}

	return false
}

// SetTaxIncluded gets a reference to the given bool and assigns it to the TaxIncluded field.
func (o *TransactionLineModel) SetTaxIncluded(v bool) {
	o.TaxIncluded = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *TransactionLineModel) GetDetails() []TransactionLineDetailModel {
	if o == nil || IsNil(o.Details) {
		var ret []TransactionLineDetailModel
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLineModel) GetDetailsOk() ([]TransactionLineDetailModel, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *TransactionLineModel) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []TransactionLineDetailModel and assigns it to the Details field.
func (o *TransactionLineModel) SetDetails(v []TransactionLineDetailModel) {
	o.Details = v
}

func (o TransactionLineModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionLineModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.LineNumber) {
		toSerialize["lineNumber"] = o.LineNumber
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.BoundaryOverrideId) {
		toSerialize["boundaryOverrideId"] = o.BoundaryOverrideId
	}
	if !IsNil(o.CustomerUsageType) {
		toSerialize["customerUsageType"] = o.CustomerUsageType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DestinationAddressId) {
		toSerialize["destinationAddressId"] = o.DestinationAddressId
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountTypeId) {
		toSerialize["discountTypeId"] = o.DiscountTypeId
	}
	if !IsNil(o.ExemptAmount) {
		toSerialize["exemptAmount"] = o.ExemptAmount
	}
	if !IsNil(o.ExemptCertId) {
		toSerialize["exemptCertId"] = o.ExemptCertId
	}
	if !IsNil(o.ExemptNo) {
		toSerialize["exemptNo"] = o.ExemptNo
	}
	if !IsNil(o.IsItemTaxable) {
		toSerialize["isItemTaxable"] = o.IsItemTaxable
	}
	if !IsNil(o.IsSSTP) {
		toSerialize["isSSTP"] = o.IsSSTP
	}
	if !IsNil(o.ItemCode) {
		toSerialize["itemCode"] = o.ItemCode
	}
	if !IsNil(o.LineAmount) {
		toSerialize["lineAmount"] = o.LineAmount
	}
	if !IsNil(o.OriginAddressId) {
		toSerialize["originAddressId"] = o.OriginAddressId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Ref1) {
		toSerialize["ref1"] = o.Ref1
	}
	if !IsNil(o.Ref2) {
		toSerialize["ref2"] = o.Ref2
	}
	if !IsNil(o.ReportingDate) {
		toSerialize["reportingDate"] = o.ReportingDate
	}
	if !IsNil(o.RevAccount) {
		toSerialize["revAccount"] = o.RevAccount
	}
	if !IsNil(o.Sourcing) {
		toSerialize["sourcing"] = o.Sourcing
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxableAmount) {
		toSerialize["taxableAmount"] = o.TaxableAmount
	}
	if !IsNil(o.TaxCalculated) {
		toSerialize["taxCalculated"] = o.TaxCalculated
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.TaxCodeId) {
		toSerialize["taxCodeId"] = o.TaxCodeId
	}
	if !IsNil(o.TaxDate) {
		toSerialize["taxDate"] = o.TaxDate
	}
	if !IsNil(o.TaxEngine) {
		toSerialize["taxEngine"] = o.TaxEngine
	}
	if !IsNil(o.TaxOverrideType) {
		toSerialize["taxOverrideType"] = o.TaxOverrideType
	}
	if !IsNil(o.TaxOverrideAmount) {
		toSerialize["taxOverrideAmount"] = o.TaxOverrideAmount
	}
	if !IsNil(o.TaxOverrideReason) {
		toSerialize["taxOverrideReason"] = o.TaxOverrideReason
	}
	if !IsNil(o.TaxIncluded) {
		toSerialize["taxIncluded"] = o.TaxIncluded
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableTransactionLineModel struct {
	value *TransactionLineModel
	isSet bool
}

func (v NullableTransactionLineModel) Get() *TransactionLineModel {
	return v.value
}

func (v *NullableTransactionLineModel) Set(val *TransactionLineModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionLineModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionLineModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionLineModel(val *TransactionLineModel) *NullableTransactionLineModel {
	return &NullableTransactionLineModel{value: val, isSet: true}
}

func (v NullableTransactionLineModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionLineModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


