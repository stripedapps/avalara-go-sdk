/*
AvaTax API

REST interface to Avalara's enterprise tax service, AvaTax.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SettingModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettingModel{}

// SettingModel Setting Model
type SettingModel struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Company Id
	CompanyId *int32 `json:"companyId,omitempty"`
	// Set
	Set string `json:"set"`
	// Name
	Name string `json:"name"`
	// Value
	Value *string `json:"value,omitempty"`
}

// NewSettingModel instantiates a new SettingModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingModel(set string, name string) *SettingModel {
	this := SettingModel{}
	this.Set = set
	this.Name = name
	return &this
}

// NewSettingModelWithDefaults instantiates a new SettingModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingModelWithDefaults() *SettingModel {
	this := SettingModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SettingModel) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingModel) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SettingModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SettingModel) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *SettingModel) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingModel) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *SettingModel) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *SettingModel) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetSet returns the Set field value
func (o *SettingModel) GetSet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Set
}

// GetSetOk returns a tuple with the Set field value
// and a boolean to check if the value has been set.
func (o *SettingModel) GetSetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Set, true
}

// SetSet sets field value
func (o *SettingModel) SetSet(v string) {
	o.Set = v
}

// GetName returns the Name field value
func (o *SettingModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SettingModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SettingModel) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SettingModel) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingModel) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SettingModel) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SettingModel) SetValue(v string) {
	o.Value = &v
}

func (o SettingModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettingModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	toSerialize["set"] = o.Set
	toSerialize["name"] = o.Name
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableSettingModel struct {
	value *SettingModel
	isSet bool
}

func (v NullableSettingModel) Get() *SettingModel {
	return v.value
}

func (v *NullableSettingModel) Set(val *SettingModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingModel(val *SettingModel) *NullableSettingModel {
	return &NullableSettingModel{value: val, isSet: true}
}

func (v NullableSettingModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


